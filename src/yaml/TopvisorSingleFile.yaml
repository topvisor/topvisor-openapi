openapi: 3.0.0
info:
  title: Topvisor
  version: 2.0.0
servers:
  - url: https://api.topvisor.com/v2/json
    description: Интерфейс для работы с API. Запрещено междоменное общение.
security:
  - authToken: []
  - authLogin: []
tags:
  - name: Admin_2
    description: admin_2
  - name: Analytics_2
    description: analytics_2
  - name: Annotations_2
    description: annotations_2
  - name: App_2
    description: app_2
  - name: Audit_2
    description: audit_2
  - name: Bank_2
    description: bank_2
  - name: Broker_2
    description: broker_2
  - name: Comments_2
    description: comments_2
  - name: Competitors_2
    description: competitors_2
  - name: Content_2
    description: content_2
  - name: Controller_2
    description: controller_2
  - name: Cron_2
    description: cron_2
  - name: Eastereggs_2
    description: eastereggs_2
  - name: Example_2
    description: example_2
  - name: Export_2
    description: export_2
  - name: Fa2_2
    description: fa2_2
  - name: Gitlab_2
    description: gitlab_2
  - name: Informer_2
    description: informer_2
  - name: Keywords_2
    description: keywords_2
  - name: Landings_2
    description: landings_2
  - name: Mentions_2
    description: mentions_2
  - name: Models
    description: models
  - name: Oauth_2
    description: oauth_2
  - name: Openapi_2
    description: openapi_2
  - name: Payments_2
    description: payments_2
  - name: Positions_2
    description: positions_2
  - name: Projects_2
    description: projects_2
  - name: Qr_2
    description: qr_2
  - name: Quiz_2
    description: quiz_2
  - name: Recurring_2
    description: recurring_2
  - name: Redmine_2
    description: redmine_2
  - name: Reports_2
    description: reports_2
  - name: Robot_2
    description: robot_2
  - name: Schedule_2
    description: schedule_2
  - name: Scripts_2
    description: scripts_2
  - name: Selectel_2
    description: selectel_2
  - name: Slack_2
    description: slack_2
  - name: Sms_2
    description: sms_2
  - name: Snapshots_2
    description: snapshots_2
  - name: System_2
    description: system_2
  - name: Tags_2
    description: tags_2
  - name: Telegram_2
    description: telegram_2
  - name: Templates_2
    description: templates_2
  - name: Tickets_2
    description: tickets_2
  - name: Tinkoff_2
    description: tinkoff_2
  - name: Tpa_2
    description: tpa_2
  - name: Tpvsr_2
    description: tpvsr_2
  - name: Urls_2
    description: urls_2
  - name: Users_2
    description: users_2
  - name: Votes_2
    description: votes_2
  - name: Vue_2
    description: vue_2
  - name: Webscreens_2
    description: webscreens_2
paths:
  /add/analytics_2/:
    post:
      operationId: AddAnalytics2
      tags:
        - Analytics_2
      summary: Фиксация события
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Analytics_2.Methods.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Analytics_2.Methods.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/annotations_2/:
    post:
      operationId: AddAnnotations2
      tags:
        - Annotations_2
      summary: Добавление примечания
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotations_2.Methods.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Annotations_2.Methods.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/annotations_2/:
    post:
      operationId: DelAnnotations2
      tags:
        - Annotations_2
      summary: Удаление примечания
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotations_2.Methods.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Annotations_2.Methods.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/annotations_2/:
    post:
      operationId: EditAnnotations2
      tags:
        - Annotations_2
      summary: Редактирование примечания
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotations_2.Methods.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Annotations_2.Methods.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/annotations_2/:
    post:
      operationId: GetAnnotations2
      tags:
        - Annotations_2
      summary: Получение примечаний
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotations_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Annotations_2.Methods.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Annotations'
  /get/app_2/:
    post:
      operationId: GetApp2
      tags:
        - App_2
      summary: Получение заархивированного приложения
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /add/comments_2/:
    post:
      operationId: AddComments2
      tags:
        - Comments_2
      summary: Добавление комментария
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comments_2.Methods.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Comments_2.Methods.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/comments_2/:
    post:
      operationId: DelComments2
      tags:
        - Comments_2
      summary: |-
        Удаление комментария

        Удалять комментарии можно только в течение ограниченного времени

        Админы могут удалять комментарии в любое время
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comments_2.Methods.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Comments_2.Methods.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/comments_2/:
    post:
      operationId: EditComments2
      tags:
        - Comments_2
      summary: |-
        Изменение комментария

        Изменять комментарий можно только в течение ограниченного времени
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comments_2.Methods.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Comments_2.Methods.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/comments_2/:
    post:
      operationId: GetComments2
      tags:
        - Comments_2
      summary: |-
        Получение комментариев

        Возвращает набор комментариев со всеми подкомменатриями, limit, offset не виляют на получение вложенных комментариев
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comments_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Comments_2.Methods.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Comments'
  /get/content_2/:
    post:
      operationId: GetContent2
      tags:
        - Content_2
      summary: Получить полные данные об одной странице
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/mentions_2/:
    post:
      operationId: GetMentions2
      tags:
        - Mentions_2
      summary: Получение списка упоминаний
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentions_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Mentions_2.Methods.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Mentions.Mentions'
  /add/payments_2/:
    post:
      operationId: AddPayments2
      tags:
        - Payments_2
      summary: |-
        Создание платежки и переход к оплате

        Возвращает id платежа, если указан параметр $return_id = true

        Производит редирект, если настроена форма оплаты на стороне платежной системы

        Возвращает информацию о платеже, если ожидается вывод формы оплаты на сайте

        При ошибке производит редирект на страницу с информацией об ошибке
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Payments_2.Methods.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/payments_2/:
    post:
      operationId: GetPayments2
      tags:
        - Payments_2
      summary: Получение списка платежей
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Payments_2.Methods.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Payments'
  /get/qr_2/:
    post:
      operationId: GetQr2
      tags:
        - Qr_2
      summary: |-
        Генерация QR кода по тексту

        Возвращает изображение в формате data:image/png;base64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Qr_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Qr_2.Methods.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/quiz_2/:
    post:
      operationId: AddQuiz2
      tags:
        - Quiz_2
      summary: Добавление теста
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz_2.Methods.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Quiz_2.Methods.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/quiz_2/:
    post:
      operationId: EditQuiz2
      tags:
        - Quiz_2
      summary: Редактирование теста
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz_2.Methods.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Quiz_2.Methods.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/quiz_2/:
    post:
      operationId: GetQuiz2
      tags:
        - Quiz_2
      summary: Получение тестов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Quiz_2.Methods.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Quizes'
  /edit/recurring_2/:
    post:
      operationId: EditRecurring2
      tags:
        - Recurring_2
      summary: Настройка рекуррентного платежа
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recurring_2.Methods.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Recurring_2.Methods.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /abstractregular/schedule_2/:
    post:
      operationId: AbstractregularSchedule2
      tags:
        - Schedule_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule_2.Methods.AbstractRegular'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Schedule_2.Methods.AbstractRegular.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/schedule_2/:
    post:
      operationId: DelSchedule2
      tags:
        - Schedule_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule_2.Methods.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Schedule_2.Methods.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/schedule_2/:
    post:
      operationId: EditSchedule2
      tags:
        - Schedule_2
      summary: Привязать расписание к объекту
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule_2.Methods.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Schedule_2.Methods.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/schedule_2/:
    post:
      operationId: GetSchedule2
      tags:
        - Schedule_2
      summary: Получение рассписания
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Schedule_2.Methods.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tags_2/:
    post:
      operationId: EditTags2
      tags:
        - Tags_2
      summary: Сохранение списка тегов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tags_2.Methods.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tags_2.Methods.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/tags_2/:
    post:
      operationId: GetTags2
      tags:
        - Tags_2
      summary: Получение списка тегов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tags_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tags_2.Methods.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/templates_2/:
    post:
      operationId: AddTemplates2
      tags:
        - Templates_2
      summary: Сохранение шаблона
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Templates_2.Methods.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Templates_2.Methods.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/templates_2/:
    post:
      operationId: DelTemplates2
      tags:
        - Templates_2
      summary: Удаление шаблона
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Templates_2.Methods.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Templates_2.Methods.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/templates_2/:
    post:
      operationId: EditTemplates2
      tags:
        - Templates_2
      summary: Изменение шаблона
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Templates_2.Methods.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Templates_2.Methods.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/templates_2/:
    post:
      operationId: GetTemplates2
      tags:
        - Templates_2
      summary: Получение сохраненного списка шаблонов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Templates_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Templates_2.Methods.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/tpvsr_2/:
    post:
      operationId: AddTpvsr2
      tags:
        - Tpvsr_2
      summary: Добавление ссылки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tpvsr_2.Methods.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tpvsr_2.Methods.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tpvsr_2/:
    post:
      operationId: EditTpvsr2
      tags:
        - Tpvsr_2
      summary: Редактирование ссылки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tpvsr_2.Methods.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tpvsr_2.Methods.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.ShortLink'
  /get/tpvsr_2/:
    post:
      operationId: GetTpvsr2
      tags:
        - Tpvsr_2
      summary: Получение списка ссылок пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tpvsr_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tpvsr_2.Methods.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.ShortLink'
  /add/urls_2/:
    post:
      operationId: AddUrls2
      tags:
        - Urls_2
      summary: Добавление url
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Urls_2.Methods.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Urls_2.Methods.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Urls'
  /edit/urls_2/:
    post:
      operationId: EditUrls2
      tags:
        - Urls_2
      summary: Изменение urls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Urls_2.Methods.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Urls_2.Methods.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Urls'
  /get/urls_2/:
    post:
      operationId: GetUrls2
      tags:
        - Urls_2
      summary: Получение списка urls проекта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Urls_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Urls_2.Methods.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Urls'
  /add/votes_2/:
    post:
      operationId: AddVotes2
      tags:
        - Votes_2
      summary: Оставление отзыва
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Votes_2.Methods.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Votes_2.Methods.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Votes'
  /get/votes_2/:
    post:
      operationId: GetVotes2
      tags:
        - Votes_2
      summary: Получение своих отзывов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Votes_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Votes_2.Methods.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Votes'
  /get/webscreens_2/:
    post:
      operationId: GetWebscreens2
      tags:
        - Webscreens_2
      summary: Получение скриншота (платная функция)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webscreens_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /abstractregular/admin_2/actions/:
    post:
      operationId: AbstractregularAdmin2Actions
      tags:
        - Admin_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.AbstractRegular'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.AbstractRegular.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/ghost/:
    post:
      operationId: GetAdmin2Ghost
      tags:
        - Admin_2
      summary: Получение доступа к акаунту пользователя в режиме "призрак"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Ghost.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/admin_2/i18n/:
    post:
      operationId: GetAdmin2I18n
      tags:
        - Admin_2
      summary: Получение записей словаря
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.I18n.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.I18n.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/admin_2/informer/:
    post:
      operationId: AddAdmin2Informer
      tags:
        - Admin_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Informer.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Informer.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/logs/:
    post:
      operationId: EditAdmin2Logs
      tags:
        - Admin_2
      summary: Сохранение текстового файла лога
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Logs.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Logs.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/logs/:
    post:
      operationId: GetAdmin2Logs
      tags:
        - Admin_2
      summary: Загрузка текстового файла лога
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Logs.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Logs.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/ranks/:
    post:
      operationId: GetAdmin2Ranks
      tags:
        - Admin_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Ranks.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Ranks.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Analytics.Ranks'
  /add/admin_2/staff/:
    post:
      operationId: AddAdmin2Staff
      tags:
        - Admin_2
      summary: Добавление сотрудника
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Staff.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Staff.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/staff/:
    post:
      operationId: EditAdmin2Staff
      tags:
        - Admin_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Staff.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Staff.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/staff/:
    post:
      operationId: GetAdmin2Staff
      tags:
        - Admin_2
      summary: Получение персонала, объект admin_staff
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Staff.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Staff.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Admin.Staff'
  /edit/admin_2/tariffChangeExpire/:
    post:
      operationId: EditAdmin2TariffChangeExpire
      tags:
        - Admin_2
      summary: Изменение даты следующего списания по тарифу
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.TariffChangeExpire.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.TariffChangeExpire.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/tpl/:
    post:
      operationId: GetAdmin2Tpl
      tags:
        - Admin_2
      summary: Поиск HTML шаблонов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Tpl.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Tpl.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/users/:
    post:
      operationId: EditAdmin2Users
      tags:
        - Admin_2
      summary: Редактирование пользователей, объект admin_users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Users.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Users.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Admin.Users'
  /get/admin_2/users/:
    post:
      operationId: GetAdmin2Users
      tags:
        - Admin_2
      summary: Получение пользователей
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Users.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Users.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Admin.Users'
  /get/admin_2/votes/:
    post:
      operationId: GetAdmin2Votes
      tags:
        - Admin_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Votes.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Votes.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Votes'
  /get/annotations_2/my/:
    post:
      operationId: GetAnnotations2My
      tags:
        - Annotations_2
      summary: Получение всех своих примечаний по всем проектам и сервисам
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotations_2.Methods.My.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Annotations_2.Methods.My.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Annotations'
  /get/app_2/actions/:
    post:
      operationId: GetApp2Actions
      tags:
        - App_2
      summary: |-
        Получение данных подтверждения

        Возвращает результат подтверждения в виде
        массива с сообщением (acceptAction),
        логической переменной (acceptEmail),
        null при неправильно введенном типе
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App_2.Methods.Actions.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/App_2.Methods.Actions.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/app_2/privacy/:
    post:
      operationId: GetApp2Privacy
      tags:
        - App_2
      summary: Получение текста политики конфиденциальности
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App_2.Methods.Privacy.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/App_2.Methods.Privacy.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/countUrls/:
    post:
      operationId: GetAudit2CountUrls
      tags:
        - Audit_2
      summary: Получение количества настроенных URL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.CountUrls.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.CountUrls.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/indexing/:
    post:
      operationId: GetAudit2Indexing
      tags:
        - Audit_2
      summary: |-
        Получение отчета по проверке индексации

        Необходимо указать либо date1 и date2, либо dates (вместе указывать нельзя)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Indexing.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Urls'
  /edit/audit_2/settings/:
    post:
      operationId: EditAudit2Settings
      tags:
        - Audit_2
      summary: Применение настроек Анализа сайта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Settings.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Settings.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/settings/:
    post:
      operationId: GetAudit2Settings
      tags:
        - Audit_2
      summary: Получение настроек аудита
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Settings.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Settings.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/watcher/:
    post:
      operationId: GetAudit2Watcher
      tags:
        - Audit_2
      summary: |-
        Получение результатов проверок радара

        Отчет генерируется на основе объектов urls

        Необходимо указать либо check_id1 и check_id2, либо checks_ids (вместе указывать нельзя)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Watcher.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Watcher.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/bank/:
    post:
      operationId: GetBank2Bank
      tags:
        - Bank_2
      summary: Получение данных банка по БИК или Swift
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Bank.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Bank_2.Methods.Bank.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/history/:
    post:
      operationId: GetBank2History
      tags:
        - Bank_2
      summary: Получение истории транзакций
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.History.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Bank_2.Methods.History.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.BalanceHistory'
  /get/bank_2/info/:
    post:
      operationId: GetBank2Info
      tags:
        - Bank_2
      summary: Получение информации о балансе
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Info.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Bank_2.Methods.Info.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/bank_2/requisites/:
    post:
      operationId: AddBank2Requisites
      tags:
        - Bank_2
      summary: Добавиление реквизитов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Requisites.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Bank_2.Methods.Requisites.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/bank_2/requisites/:
    post:
      operationId: DelBank2Requisites
      tags:
        - Bank_2
      summary: Закрытие договора (оферту закрыть невозможно)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Requisites.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Bank_2.Methods.Requisites.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/bank_2/requisites/:
    post:
      operationId: EditBank2Requisites
      tags:
        - Bank_2
      summary: Изменение реквизитов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Requisites.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Bank_2.Methods.Requisites.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/requisites/:
    post:
      operationId: GetBank2Requisites
      tags:
        - Bank_2
      summary: Получение списка договоров
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Requisites.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Bank_2.Methods.Requisites.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Requisites'
  /get/bank_2/ur/:
    post:
      operationId: GetBank2Ur
      tags:
        - Bank_2
      summary: Получение данных юридического лица по ИНН
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Ur.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Bank_2.Methods.Ur.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/broker_2/ads/:
    post:
      operationId: EditBroker2Ads
      tags:
        - Broker_2
      summary: Редактирование объявления
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Ads.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Ads.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/broker_2/ads/:
    post:
      operationId: GetBroker2Ads
      tags:
        - Broker_2
      summary: Получение объявления рекламной кампании
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Ads.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Ads.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Broker.Ads'
  /add/broker_2/campaigns/:
    post:
      operationId: AddBroker2Campaigns
      tags:
        - Broker_2
      summary: Добавление рекламной кампании в управление ставками
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Campaigns.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Campaigns.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Broker.Campaigns'
  /del/broker_2/campaigns/:
    post:
      operationId: DelBroker2Campaigns
      tags:
        - Broker_2
      summary: Удаление рекламной компании из управления ставками
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Campaigns.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Campaigns.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Broker.Campaigns'
  /edit/broker_2/campaigns/:
    post:
      operationId: EditBroker2Campaigns
      tags:
        - Broker_2
      summary: Редактирование рекламной кампании
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Campaigns.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Campaigns.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Broker.Campaigns'
  /get/broker_2/campaigns/:
    post:
      operationId: GetBroker2Campaigns
      tags:
        - Broker_2
      summary: Получение списка рекламных кампаний
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Campaigns.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Campaigns.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Broker.Campaigns'
  /add/broker_2/groups/:
    post:
      operationId: AddBroker2Groups
      tags:
        - Broker_2
      summary: Добавление групп рекламной кампании
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Groups.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Groups.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/broker_2/groups/:
    post:
      operationId: GetBroker2Groups
      tags:
        - Broker_2
      summary: Получение групп рекламной кампании
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Groups.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Groups.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Broker.Groups'
  /del/broker_2/keywords/:
    post:
      operationId: DelBroker2Keywords
      tags:
        - Broker_2
      summary: Удаление запросов рекламной кампании
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Keywords.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Keywords.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/broker_2/keywords/:
    post:
      operationId: EditBroker2Keywords
      tags:
        - Broker_2
      summary: Редактирование объявлений (запросов) рекламной кампании
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Keywords.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Keywords.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Broker.Keywords'
  /get/broker_2/keywords/:
    post:
      operationId: GetBroker2Keywords
      tags:
        - Broker_2
      summary: Получение запросов рекламной кампании
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Keywords.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Keywords.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Broker.Keywords'
  /get/broker_2/log/:
    post:
      operationId: GetBroker2Log
      tags:
        - Broker_2
      summary: Получение логов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Log.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Log.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Broker.Log'
  /get/comments_2/byAuthor/:
    post:
      operationId: GetComments2ByAuthor
      tags:
        - Comments_2
      summary: Получение комментариев автора. Без вложенности
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comments_2.Methods.ByAuthor.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Comments_2.Methods.ByAuthor.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Comments'
  /edit/comments_2/like/:
    post:
      operationId: EditComments2Like
      tags:
        - Comments_2
      summary: |-
        Редактирование статуса лайка для комментария

        Возвращает результат редактирования статуса лайка
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comments_2.Methods.Like.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Comments_2.Methods.Like.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/content_2/authors/:
    post:
      operationId: EditContent2Authors
      tags:
        - Content_2
      summary: Изменить настройки автора
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Authors.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Authors.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/content_2/authors/:
    post:
      operationId: GetContent2Authors
      tags:
        - Content_2
      summary: Получение данных об авторе
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Authors.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Authors.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Content.Authors'
  /edit/content_2/bookmarkAuthor/:
    post:
      operationId: EditContent2BookmarkAuthor
      tags:
        - Content_2
      summary: Редактирование статуса закладки для автора
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.BookmarkAuthor.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.BookmarkAuthor.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/content_2/bookmark/:
    post:
      operationId: EditContent2Bookmark
      tags:
        - Content_2
      summary: Редактирование статуса закладки для страницы
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Bookmark.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Bookmark.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/content_2/like/:
    post:
      operationId: EditContent2Like
      tags:
        - Content_2
      summary: Редактирование статуса лайка для страницы
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Like.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Like.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /abstractpage/content_2/pages/:
    post:
      operationId: AbstractpageContent2Pages
      tags:
        - Content_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Pages.AbstractPage'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Pages.AbstractPage.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Pages'
  /add/content_2/pages/:
    post:
      operationId: AddContent2Pages
      tags:
        - Content_2
      summary: Создание документа
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Pages.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Pages.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Pages'
  /del/content_2/pages/:
    post:
      operationId: DelContent2Pages
      tags:
        - Content_2
      summary: Перенести документ в папку /archive/
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Pages.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Pages.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Pages'
  /edit/content_2/pages/:
    post:
      operationId: EditContent2Pages
      tags:
        - Content_2
      summary: Изменение документа
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Pages.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Pages.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Pages'
  /get/content_2/pages/:
    post:
      operationId: GetContent2Pages
      tags:
        - Content_2
      summary: Получение документов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Pages.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Pages.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Pages'
  /abstractregular/content_2/redirects/:
    post:
      operationId: AbstractregularContent2Redirects
      tags:
        - Content_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Redirects.AbstractRegular'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Redirects.AbstractRegular.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/content_2/redirects/:
    post:
      operationId: AddContent2Redirects
      tags:
        - Content_2
      summary: Добавление правила редиректа (для админов)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Redirects.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Redirects.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/content_2/redirects/:
    post:
      operationId: DelContent2Redirects
      tags:
        - Content_2
      summary: Удаление редиректа
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Redirects.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Redirects.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/content_2/redirects/:
    post:
      operationId: EditContent2Redirects
      tags:
        - Content_2
      summary: Изменение правила редиректа (для админов)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Redirects.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Redirects.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/content_2/redirects/:
    post:
      operationId: GetContent2Redirects
      tags:
        - Content_2
      summary: Получение списка правил (для админов)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Redirects.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Redirects.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.ContentsRedirects'
  /get/content_2/rss/:
    post:
      operationId: GetContent2Rss
      tags:
        - Content_2
      summary: |-
        Получение RSS раздела сайта

        Для выборки страниц используется модель: Pages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Rss.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Rss.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Pages'
  /get/content_2/search/:
    post:
      operationId: GetContent2Search
      tags:
        - Content_2
      summary: Поиск страниц
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Search.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Search.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/content_2/sitemap/:
    post:
      operationId: GetContent2Sitemap
      tags:
        - Content_2
      summary: Получение xml карты сайта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Sitemap.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Sitemap.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Pages'
  /get/content_2/tags/:
    post:
      operationId: GetContent2Tags
      tags:
        - Content_2
      summary: Поиск тегов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Tags.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Tags.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/cron_2/commands/:
    post:
      operationId: AddCron2Commands
      tags:
        - Cron_2
      summary: Добавление задачи cron
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cron_2.Methods.Commands.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Cron_2.Methods.Commands.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.CronCommands'
  /del/cron_2/commands/:
    post:
      operationId: DelCron2Commands
      tags:
        - Cron_2
      summary: Удаление задачи cron
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cron_2.Methods.Commands.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Cron_2.Methods.Commands.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.CronCommands'
  /edit/cron_2/commands/:
    post:
      operationId: EditCron2Commands
      tags:
        - Cron_2
      summary: Изменение задачи cron
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cron_2.Methods.Commands.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Cron_2.Methods.Commands.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.CronCommands'
  /get/cron_2/commands/:
    post:
      operationId: GetCron2Commands
      tags:
        - Cron_2
      summary: Получение задач cron
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cron_2.Methods.Commands.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Cron_2.Methods.Commands.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.CronCommands'
  /get/cron_2/services/:
    post:
      operationId: GetCron2Services
      tags:
        - Cron_2
      summary: Получение списка имен сервисов, в которых есть команды cron
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cron_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Cron_2.Methods.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.CronCommands'
  /get/example_2/array/:
    post:
      operationId: GetExample2Array
      tags:
        - Example_2
      summary: Метод с примерами параметров типа Enum
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Example_2.Methods.Array.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Example_2.Methods.Array.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/example_2/custom/:
    post:
      operationId: GetExample2Custom
      tags:
        - Example_2
      summary: Получение текущего времени
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Example_2.Methods.Custom.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Example_2.Methods.Custom.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/example_2/enum/:
    post:
      operationId: GetExample2Enum
      tags:
        - Example_2
      summary: Метод с примерами параметров типа Enum
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Example_2.Methods.Enum.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Example_2.Methods.Enum.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/example_2/object/:
    post:
      operationId: GetExample2Object
      tags:
        - Example_2
      summary: Метод с примерами параметров типа Object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Example_2.Methods.Object.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Example_2.Methods.Object.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/example_2/projects/:
    post:
      operationId: GetExample2Projects
      tags:
        - Example_2
      summary: Получение списка проектов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Example_2.Methods.Projects.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Example_2.Methods.Projects.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /edit/informer_2/config/:
    post:
      operationId: EditInformer2Config
      tags:
        - Informer_2
      summary: Настройка уведомлений
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Informer_2.Methods.Config.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Informer_2.Methods.Config.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/informer_2/config/:
    post:
      operationId: GetInformer2Config
      tags:
        - Informer_2
      summary: Получение настроек уведомлений
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Informer_2.Methods.Config.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Informer_2.Methods.Config.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/informer_2/info/:
    post:
      operationId: GetInformer2Info
      tags:
        - Informer_2
      summary: Получение информации о сообщениях в информере
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Informer_2.Methods.Info.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Informer_2.Methods.Info.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/informer_2/informer/:
    post:
      operationId: DelInformer2Informer
      tags:
        - Informer_2
      summary: Удаление сообщений из инфомера
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Informer_2.Methods.Informer.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Informer_2.Methods.Informer.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/informer_2/informer/:
    post:
      operationId: GetInformer2Informer
      tags:
        - Informer_2
      summary: Получение списка сообщений в информере
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Informer_2.Methods.Informer.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Informer_2.Methods.Informer.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/keywords_2/keywords/:
    post:
      operationId: GetKeywords2Keywords
      tags:
        - Keywords_2
      summary: Получение списка запросов проекта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Keywords_2.Methods.Keywords.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Keywords_2.Methods.Keywords.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Keywords'
  /get/keywords_2/volumes/:
    post:
      operationId: GetKeywords2Volumes
      tags:
        - Keywords_2
      summary: Получение частоты проекта или одной группы
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Keywords_2.Methods.Volumes.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Keywords_2.Methods.Volumes.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Groups'
  /edit/mentions_2/readed/:
    post:
      operationId: EditMentions2Readed
      tags:
        - Mentions_2
      summary: Изменение флага "прочитано"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentions_2.Methods.Readed.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Mentions_2.Methods.Readed.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Mentions.Mentions'
  /add/mentions_2/rules/:
    post:
      operationId: AddMentions2Rules
      tags:
        - Mentions_2
      summary: Добавление правила
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentions_2.Methods.Rules.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Mentions_2.Methods.Rules.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/mentions_2/rules/:
    post:
      operationId: DelMentions2Rules
      tags:
        - Mentions_2
      summary: Удаление правила
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentions_2.Methods.Rules.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Mentions_2.Methods.Rules.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Mentions.Rules'
  /get/mentions_2/rules/:
    post:
      operationId: GetMentions2Rules
      tags:
        - Mentions_2
      summary: Получение списка правил
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentions_2.Methods.Rules.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Mentions_2.Methods.Rules.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Mentions.Rules'
  /add/mentions_2/searchers/:
    post:
      operationId: AddMentions2Searchers
      tags:
        - Mentions_2
      summary: |-
        Добавление поисковика

        Изменит, если уже существует
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentions_2.Methods.Searchers.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Mentions_2.Methods.Searchers.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/mentions_2/searchers/:
    post:
      operationId: DelMentions2Searchers
      tags:
        - Mentions_2
      summary: Удаление поисковика
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentions_2.Methods.Searchers.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Mentions_2.Methods.Searchers.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Mentions.Searchers'
  /get/mentions_2/searchers/:
    post:
      operationId: GetMentions2Searchers
      tags:
        - Mentions_2
      summary: Получение списка поисковиков
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentions_2.Methods.Searchers.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Mentions_2.Methods.Searchers.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Mentions.Searchers'
  /edit/mentions_2/sentiment/:
    post:
      operationId: EditMentions2Sentiment
      tags:
        - Mentions_2
      summary: Изменение тональности
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentions_2.Methods.Sentiment.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Mentions_2.Methods.Sentiment.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Mentions.Mentions'
  /get/openapi_2/download/:
    post:
      operationId: GetOpenapi2Download
      tags:
        - Openapi_2
      summary: |-
        Создать Open API схемы и скачать в zip

        В результате вернет zip файл в потоке вывода
      description: '@see https://editor.swagger.io/ Редактор Open API'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenAPI_2.Methods.Download.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/payments_2/companies/:
    post:
      operationId: GetPayments2Companies
      tags:
        - Payments_2
      summary: Получение компании пользователя, через которых, были совершены платежи
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.Companies.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Payments_2.Methods.Companies.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/payments_2/contractSign/:
    post:
      operationId: EditPayments2ContractSign
      tags:
        - Payments_2
      summary: Подписание контракта (только для админов)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.ContractSign.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Payments_2.Methods.ContractSign.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/payments_2/nextRequisitesId/:
    post:
      operationId: EditPayments2NextRequisitesId
      tags:
        - Payments_2
      summary: Изменение платежных реквизитов тарифа
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.NextRequisitesId.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Payments_2.Methods.NextRequisitesId.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/payments_2/subscriptions/:
    post:
      operationId: EditPayments2Subscriptions
      tags:
        - Payments_2
      summary: |-
        Изменения подписки сейчас

        Реализует две взаимоисключающие стратегии:

        - Проведение доплаты по текущей подписке
        - Остановка текущей подписки и создание новой
           - Новая подписка получит скидку на первый платеж с учетом амортизации оплаты на действующую подписку
           - После оплаты новой подписки действующая подписка будет досрочно завершена

        Выбор стратегии зависит от типа управления подпиской
      description: '@see Bank_2\Types\Subscriptions\Manager'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.Subscriptions.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Payments_2.Methods.Subscriptions.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/payments_2/urTinkoffCreateApplication/:
    post:
      operationId: AddPayments2UrTinkoffCreateApplication
      tags:
        - Payments_2
      summary: Отправка заявки на подключение Тинькофф Бизнес
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.UrTinkoffCreateApplication.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Payments_2.Methods.UrTinkoffCreateApplication.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/payments_2/validateMerchantCardAP/:
    post:
      operationId: GetPayments2ValidateMerchantCardAP
      tags:
        - Payments_2
      summary: Валидация домена для подтверждения оплаты Apple Pay (system = card_ap)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.ValidateMerchantCardAP.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Payments_2.Methods.ValidateMerchantCardAP.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/positions_2/searchers/:
    post:
      operationId: AddPositions2Searchers
      tags:
        - Positions_2
      summary: Добавление ПС
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Positions_2.Methods.Searchers.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Positions_2.Methods.Searchers.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/positions_2/searchers/:
    post:
      operationId: DelPositions2Searchers
      tags:
        - Positions_2
      summary: Удаление ПС
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Positions_2.Methods.Searchers.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Positions_2.Methods.Searchers.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/positions_2/settings/:
    post:
      operationId: EditPositions2Settings
      tags:
        - Positions_2
      summary: Установка общих настроек проверки позиций проекта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Positions_2.Methods.Settings.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Positions_2.Methods.Settings.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/projects_2/analytics/:
    post:
      operationId: AddProjects2Analytics
      tags:
        - Projects_2
      summary: Добавление графика
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Analytics.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Analytics.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/projects_2/analytics/:
    post:
      operationId: DelProjects2Analytics
      tags:
        - Projects_2
      summary: Удаление графика
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Analytics.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Analytics.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/projects_2/analytics/:
    post:
      operationId: EditProjects2Analytics
      tags:
        - Projects_2
      summary: Настройка графика
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Analytics.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Analytics.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/projects_2/analytics/:
    post:
      operationId: GetProjects2Analytics
      tags:
        - Projects_2
      summary: Получение списка графиков
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Analytics.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Analytics.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/projects_2/competitors/:
    post:
      operationId: AddProjects2Competitors
      tags:
        - Projects_2
      summary: |-
        Добавление конкурента

        Ограничения: не более Projects_2\Competitors::MAX_COMPETITORS_PER_PROJECT конкурентов в одном проекте
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Competitors.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Competitors.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/projects_2/competitors/:
    post:
      operationId: DelProjects2Competitors
      tags:
        - Projects_2
      summary: |-
        Удаление конкурентов

        Обязательный параметр или ids или urls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Competitors.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Competitors.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/projects_2/competitors/:
    post:
      operationId: GetProjects2Competitors
      tags:
        - Projects_2
      summary: Получение списка конкурентов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Competitors.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Competitors.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/projects_2/folders/:
    post:
      operationId: AddProjects2Folders
      tags:
        - Projects_2
      summary: Добавление папки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Folders.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Folders.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/projects_2/folders/:
    post:
      operationId: DelProjects2Folders
      tags:
        - Projects_2
      summary: Удаление папок
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Folders.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Folders.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects.Folders'
  /get/projects_2/folders/:
    post:
      operationId: GetProjects2Folders
      tags:
        - Projects_2
      summary: Получение списка папок
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Folders.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Folders.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects.Folders'
  /add/projects_2/projects/:
    post:
      operationId: AddProjects2Projects
      tags:
        - Projects_2
      summary: Добавление проекта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Projects.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Projects.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/projects_2/projects/:
    post:
      operationId: DelProjects2Projects
      tags:
        - Projects_2
      summary: Удаление проектов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Projects.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Projects.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /get/projects_2/projects/:
    post:
      operationId: GetProjects2Projects
      tags:
        - Projects_2
      summary: Получение списка проектов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Projects.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Projects.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /del/projects_2/rights/:
    post:
      operationId: DelProjects2Rights
      tags:
        - Projects_2
      summary: Удаление прав у пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Rights.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Rights.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/projects_2/rights/:
    post:
      operationId: EditProjects2Rights
      tags:
        - Projects_2
      summary: Изменение прав на проект
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Rights.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Rights.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/projects_2/rights/:
    post:
      operationId: GetProjects2Rights
      tags:
        - Projects_2
      summary: Получение информации о настройке прав и смене владельца
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Rights.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Rights.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/projects_2/status/:
    post:
      operationId: GetProjects2Status
      tags:
        - Projects_2
      summary: |-
        Получение информации о домене и SSL сертификате
        Возвращает объект с параметрами:
        - domain_expire
        - ssl_expire
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Status.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Status.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/projects_2/tasks/:
    post:
      operationId: GetProjects2Tasks
      tags:
        - Projects_2
      summary: Получение списка задач
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Tasks.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Tasks.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /abstractregular/quiz_2/questions/:
    post:
      operationId: AbstractregularQuiz2Questions
      tags:
        - Quiz_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz_2.Methods.Questions.AbstractRegular'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Quiz_2.Methods.Questions.AbstractRegular.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/quiz_2/questions/:
    post:
      operationId: AddQuiz2Questions
      tags:
        - Quiz_2
      summary: Добавление вопроса
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz_2.Methods.Questions.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Quiz_2.Methods.Questions.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/quiz_2/questions/:
    post:
      operationId: DelQuiz2Questions
      tags:
        - Quiz_2
      summary: Удаление вопроса
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz_2.Methods.Questions.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Quiz_2.Methods.Questions.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/quiz_2/questions/:
    post:
      operationId: EditQuiz2Questions
      tags:
        - Quiz_2
      summary: Редактировать вопрос
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz_2.Methods.Questions.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Quiz_2.Methods.Questions.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/quiz_2/questions/:
    post:
      operationId: GetQuiz2Questions
      tags:
        - Quiz_2
      summary: Получение вопроса
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz_2.Methods.Questions.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Quiz_2.Methods.Questions.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Quizes.Questions'
  /add/quiz_2/questionsResponses/:
    post:
      operationId: AddQuiz2QuestionsResponses
      tags:
        - Quiz_2
      summary: Добавление ответа
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz_2.Methods.QuestionsResponses.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Quiz_2.Methods.QuestionsResponses.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/quiz_2/results/:
    post:
      operationId: DelQuiz2Results
      tags:
        - Quiz_2
      summary: Удаление результатов предыдущих попытки пройти тест
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz_2.Methods.Results.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Quiz_2.Methods.Results.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/quiz_2/results/:
    post:
      operationId: GetQuiz2Results
      tags:
        - Quiz_2
      summary: Получение своих результатов прохождения теста
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz_2.Methods.Results.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Quiz_2.Methods.Results.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/quiz_2/resultsUsers/:
    post:
      operationId: GetQuiz2ResultsUsers
      tags:
        - Quiz_2
      summary: Получение участников теста
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz_2.Methods.ResultsUsers.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Quiz_2.Methods.ResultsUsers.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/quiz_2/withQuestions/:
    post:
      operationId: GetQuiz2WithQuestions
      tags:
        - Quiz_2
      summary: Получение теста с вопросами
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz_2.Methods.WithQuestions.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Quiz_2.Methods.WithQuestions.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Quizes'
  /del/recurring_2/recurringCard/:
    post:
      operationId: DelRecurring2RecurringCard
      tags:
        - Recurring_2
      summary: Удалить привязанную карту (system = card)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recurring_2.Methods.RecurringCard.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Recurring_2.Methods.RecurringCard.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/recurring_2/recurringCard/:
    post:
      operationId: GetRecurring2RecurringCard
      tags:
        - Recurring_2
      summary: Получение привязанных карт пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recurring_2.Methods.RecurringCard.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Recurring_2.Methods.RecurringCard.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/schedule_2/settings/:
    post:
      operationId: EditSchedule2Settings
      tags:
        - Schedule_2
      summary: Изменить дополнительные параметры расписания
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule_2.Methods.Settings.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Schedule_2.Methods.Settings.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/schedule_2/settings/:
    post:
      operationId: GetSchedule2Settings
      tags:
        - Schedule_2
      summary: |-
        Получить дополнительные параметры расписания

        Для каждого типа могут быть свои параметры
      description: '@see Schedule_2\Mods\Settings'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule_2.Methods.Settings.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Schedule_2.Methods.Settings.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/sms_2/checkPIN/:
    post:
      operationId: GetSms2CheckPIN
      tags:
        - Sms_2
      summary: Проверить код для подтверждения действия
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sms_2.Methods.CheckPIN.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Sms_2.Methods.CheckPIN.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/sms_2/sendPIN/:
    post:
      operationId: GetSms2SendPIN
      tags:
        - Sms_2
      summary: Отправить код для подтверждения действия
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sms_2.Methods.SendPIN.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Sms_2.Methods.SendPIN.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/templates_2/availableFieldsData/:
    post:
      operationId: GetTemplates2AvailableFieldsData
      tags:
        - Templates_2
      summary: Получение данных доступных столбцов для выборки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Templates_2.Methods.AvailableFieldsData.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Templates_2.Methods.AvailableFieldsData.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/templates_2/fields/:
    post:
      operationId: DelTemplates2Fields
      tags:
        - Templates_2
      summary: Удаление сохраненного списка столбцов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Templates_2.Methods.Fields.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Templates_2.Methods.Fields.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/templates_2/fields/:
    post:
      operationId: EditTemplates2Fields
      tags:
        - Templates_2
      summary: Сохранение списка столбцов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Templates_2.Methods.Fields.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Templates_2.Methods.Fields.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/templates_2/fields/:
    post:
      operationId: GetTemplates2Fields
      tags:
        - Templates_2
      summary: Получение сохраненного списока столбцов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Templates_2.Methods.Fields.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Templates_2.Methods.Fields.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/templates_2/fieldsProperties/:
    post:
      operationId: GetTemplates2FieldsProperties
      tags:
        - Templates_2
      summary: Получение дополнительных параметров к списку столбцов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Templates_2.Methods.FieldsProperties.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Templates_2.Methods.FieldsProperties.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/tickets_2/files/:
    post:
      operationId: AddTickets2Files
      tags:
        - Tickets_2
      summary: |-
        Загрузка файла на сервер

        Процесс создания сообщения в тикет не завершен
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Files.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Files.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/tickets_2/files/:
    post:
      operationId: DelTickets2Files
      tags:
        - Tickets_2
      summary: |-
        Удаление временных файлов для тикета

        Процесс создания поста не завершен
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Files.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Files.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/tickets_2/files/:
    post:
      operationId: GetTickets2Files
      tags:
        - Tickets_2
      summary: |-
        Получение списка временных файлов, загруженных для тикета

        Процесс создания поста не завершен
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Files.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Files.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/tickets_2/messages/:
    post:
      operationId: AddTickets2Messages
      tags:
        - Tickets_2
      summary: Добавление сообщения к тикиту
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Messages.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Messages.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tickets_2/rate/:
    post:
      operationId: EditTickets2Rate
      tags:
        - Tickets_2
      summary: Дать оценку тикету
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Rate.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Rate.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/tickets_2/tickets/:
    post:
      operationId: AddTickets2Tickets
      tags:
        - Tickets_2
      summary: Создание тикета
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Tickets.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Tickets.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tickets_2/tickets/:
    post:
      operationId: EditTickets2Tickets
      tags:
        - Tickets_2
      summary: Редактирование тикета
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Tickets.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Tickets.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/tickets_2/tickets/:
    post:
      operationId: GetTickets2Tickets
      tags:
        - Tickets_2
      summary: Получение списка тикетов с сообщениями
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Tickets.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Tickets.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Tickets'
  /get/tpvsr_2/stat/:
    post:
      operationId: GetTpvsr2Stat
      tags:
        - Tpvsr_2
      summary: Получение статистики по ссылке
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tpvsr_2.Methods.Stat.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tpvsr_2.Methods.Stat.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tpvsr_2/tags/:
    post:
      operationId: EditTpvsr2Tags
      tags:
        - Tpvsr_2
      summary: Изменение тегов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tpvsr_2.Methods.Tags.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tpvsr_2.Methods.Tags.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/tpvsr_2/title/:
    post:
      operationId: GetTpvsr2Title
      tags:
        - Tpvsr_2
      summary: Получить title ссылки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tpvsr_2.Methods.Title.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tpvsr_2.Methods.Title.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/urls_2/export/:
    post:
      operationId: GetUrls2Export
      tags:
        - Urls_2
      summary: Экспорт urls в определенном формате
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Urls_2.Methods.Export.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /add/urls_2/import/:
    post:
      operationId: AddUrls2Import
      tags:
        - Urls_2
      summary: |-
        Импортирование urls

        Доступные поля для импорта:
        - url
        - sitemap
        - audit
        - indexing
        - watcher
        - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Urls_2.Methods.Import.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Urls_2.Methods.Import.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/urls_2/tags/:
    post:
      operationId: EditUrls2Tags
      tags:
        - Urls_2
      summary: Изменение тегов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Urls_2.Methods.Tags.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Urls_2.Methods.Tags.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Urls'
  /edit/votes_2/comment/:
    post:
      operationId: EditVotes2Comment
      tags:
        - Votes_2
      summary: |-
        Добавление комментария к отзыву

        Оставить комментарий можно в течение часа поосле выставления оценки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Votes_2.Methods.Comment.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Votes_2.Methods.Comment.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/accounting/counteragents/:
    post:
      operationId: EditAdmin2AccountingCounteragents
      tags:
        - Admin_2
      summary: Изменение параметров контрагента
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Accounting.Counteragents.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Accounting.Counteragents.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/accounting/counteragents/:
    post:
      operationId: GetAdmin2AccountingCounteragents
      tags:
        - Admin_2
      summary: Получение контрагента
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Accounting.Counteragents.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Accounting.Counteragents.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Admin.Accounting.Counteragents'
  /edit/admin_2/accounting/group/:
    post:
      operationId: EditAdmin2AccountingGroup
      tags:
        - Admin_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Accounting.Group.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Accounting.Group.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/accounting/group/:
    post:
      operationId: GetAdmin2AccountingGroup
      tags:
        - Admin_2
      summary: Получение групп
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Accounting.Group.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Accounting.Group.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.EmptyModel'
  /add/admin_2/accounting/invoices/:
    post:
      operationId: AddAdmin2AccountingInvoices
      tags:
        - Admin_2
      summary: Добавление счета на оплату
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Accounting.Invoices.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Accounting.Invoices.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/admin_2/accounting/invoices/:
    post:
      operationId: DelAdmin2AccountingInvoices
      tags:
        - Admin_2
      summary: Отмена отправки счета. Разрешено только для счетов со статусом pending или sending
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Accounting.Invoices.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Accounting.Invoices.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Admin.Invoices'
  /get/admin_2/accounting/invoices/:
    post:
      operationId: GetAdmin2AccountingInvoices
      tags:
        - Admin_2
      summary: Получение счетов на оплату
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Accounting.Invoices.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Accounting.Invoices.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Admin.Invoices'
  /get/admin_2/accounting/operations/:
    post:
      operationId: GetAdmin2AccountingOperations
      tags:
        - Admin_2
      summary: Получение внутренних операций
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Accounting.Operations.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Accounting.Operations.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.EmptyModel'
  /edit/admin_2/actions/bank/:
    post:
      operationId: EditAdmin2ActionsBank
      tags:
        - Admin_2
      summary: Создание и проведение транзакции
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Bank.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Bank.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/admin_2/actions/payments/:
    post:
      operationId: DelAdmin2ActionsPayments
      tags:
        - Admin_2
      summary: Отмена проведения счета
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Payments.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Payments.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/actions/payments/:
    post:
      operationId: EditAdmin2ActionsPayments
      tags:
        - Admin_2
      summary: Проведение счета
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Payments.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Payments.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/actions/positions/:
    post:
      operationId: EditAdmin2ActionsPositions
      tags:
        - Admin_2
      summary: Востановление удаленной проверки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Positions.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Positions.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/actions/projects/:
    post:
      operationId: EditAdmin2ActionsProjects
      tags:
        - Admin_2
      summary: Востановление удаленного проекта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Projects.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Projects.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/actions/projects/:
    post:
      operationId: GetAdmin2ActionsProjects
      tags:
        - Admin_2
      summary: Сбор статистики и трафика
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Projects.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Projects.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/admin_2/actions/telegram/:
    post:
      operationId: AddAdmin2ActionsTelegram
      tags:
        - Admin_2
      summary: Добавление бота в телеграм канал
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Telegram.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Telegram.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/affiliate/referralProgramStats/:
    post:
      operationId: GetAdmin2AffiliateReferralProgramStats
      tags:
        - Admin_2
      summary: Получение общей статистики по реферальной программе
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Affiliate.ReferralProgramStats.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Affiliate.ReferralProgramStats.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/affiliate/referralsByLevel/:
    post:
      operationId: GetAdmin2AffiliateReferralsByLevel
      tags:
        - Admin_2
      summary: Получение сводки числа рефералов по своему уровню
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Affiliate.ReferralsByLevel.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Affiliate.ReferralsByLevel.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/affiliate/referrals/:
    post:
      operationId: GetAdmin2AffiliateReferrals
      tags:
        - Admin_2
      summary: Получение сводки по новым рефералам
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Affiliate.Referrals.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Affiliate.Referrals.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/affiliate/referrersByReferrals/:
    post:
      operationId: GetAdmin2AffiliateReferrersByReferrals
      tags:
        - Admin_2
      summary: Получение сводки числа партнеров по числу рефералов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Affiliate.ReferrersByReferrals.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Affiliate.ReferrersByReferrals.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/affiliate/referrers/:
    post:
      operationId: GetAdmin2AffiliateReferrers
      tags:
        - Admin_2
      summary: Получение сводки по новым партнерам
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Affiliate.Referrers.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Affiliate.Referrers.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/affiliate/referrersWithReferrals/:
    post:
      operationId: GetAdmin2AffiliateReferrersWithReferrals
      tags:
        - Admin_2
      summary: Получение партнеров c кол-вом рефералов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Affiliate.ReferrersWithReferrals.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Affiliate.ReferrersWithReferrals.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.EmptyModel'
  /get/admin_2/analytics/activity/:
    post:
      operationId: GetAdmin2AnalyticsActivity
      tags:
        - Admin_2
      summary: |-
        Получение активности пользователей по статусам активности
        статусы активности:
               1. Активный - клиент, который пополнял баланс в сервисе хотя бы раз. При этом трата средств в течение месяца не мнее 100 рублей (или $5).
               2. Активный (новый) - в эту категорию попадают клиенты, которые первый раз перешли в статус "Активного клиента".
               3. Активный (постоянный) - в эту категорию попадют клиенты, которые не меняли свой статус активности за последний месяц
               4. Активный (вернувшийся) - в эту категорию попадют клиенты, которые вернули себе статус "Активный клиент".
               5. Стал не активным - в эту категорию попадют клиенты, которые потеряли статус "Активного клиента" и на протяжении 2 месяцев не возвращали
        себе этот статус.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Activity.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Activity.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/countOnlineUsers/:
    post:
      operationId: GetAdmin2AnalyticsCountOnlineUsers
      tags:
        - Admin_2
      summary: Получение числа активных пользователей
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.CountOnlineUsers.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.CountOnlineUsers.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/events/:
    post:
      operationId: GetAdmin2AnalyticsEvents
      tags:
        - Admin_2
      summary: Получение метрик из сервиса Аналитика
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Events.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Events.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Analytics.Events'
  /get/admin_2/analytics/payments/:
    post:
      operationId: GetAdmin2AnalyticsPayments
      tags:
        - Admin_2
      summary: Получение суммы оплат за период
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Payments.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Payments.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/services/:
    post:
      operationId: GetAdmin2AnalyticsServices
      tags:
        - Admin_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/statistics/:
    post:
      operationId: GetAdmin2AnalyticsStatistics
      tags:
        - Admin_2
      summary: Получение статистики
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Statistics.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Statistics.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /abstractticketsstats/admin_2/analytics/tickets/:
    post:
      operationId: AbstractticketsstatsAdmin2AnalyticsTickets
      tags:
        - Admin_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Tickets.AbstractTicketsStats'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Tickets.AbstractTicketsStats.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/tickets/:
    post:
      operationId: GetAdmin2AnalyticsTickets
      tags:
        - Admin_2
      summary: Получение тикетов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Tickets.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Tickets.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Tickets'
  /get/admin_2/i18n/categories/:
    post:
      operationId: GetAdmin2I18nCategories
      tags:
        - Admin_2
      summary: Получение категорий словаря
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.I18n.Categories.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.I18n.Categories.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/logs/system/:
    post:
      operationId: GetAdmin2LogsSystem
      tags:
        - Admin_2
      summary: Получение данных из системного лога
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Logs.System.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Logs.System.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/ranks/activations/:
    post:
      operationId: GetAdmin2RanksActivations
      tags:
        - Admin_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Ranks.Activations.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Ranks.Activations.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Analytics.RanksUsers'
  /get/admin_2/slack/rate/:
    post:
      operationId: GetAdmin2SlackRate
      tags:
        - Admin_2
      summary: Рейтинг по сообщениям в слеке за предыдущий месяц
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Slack.Rate.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Slack.Rate.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/staff/access/:
    post:
      operationId: EditAdmin2StaffAccess
      tags:
        - Admin_2
      summary: Настройка доступа
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Staff.Access.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Staff.Access.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Admin.Staff'
  /get/admin_2/staff/byPost/:
    post:
      operationId: GetAdmin2StaffByPost
      tags:
        - Admin_2
      summary: Получение из бд данные сотрудников указанного поста
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Staff.ByPost.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Staff.ByPost.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/staff/contractPrint/:
    post:
      operationId: GetAdmin2StaffContractPrint
      tags:
        - Admin_2
      summary: Печать договора
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Staff.ContractPrint.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/admin_2/staff/posts/:
    post:
      operationId: GetAdmin2StaffPosts
      tags:
        - Admin_2
      summary: Получение возможных posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Staff.Posts.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Staff.Posts.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/admin_2/staff/vacation/:
    post:
      operationId: AddAdmin2StaffVacation
      tags:
        - Admin_2
      summary: Добавление отпуска для сотрудника
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Staff.Vacation.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Staff.Vacation.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/admin_2/staff/vacation/:
    post:
      operationId: DelAdmin2StaffVacation
      tags:
        - Admin_2
      summary: Удаление данных об отпуске
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Staff.Vacation.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Staff.Vacation.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/staff/vacationPrint/:
    post:
      operationId: GetAdmin2StaffVacationPrint
      tags:
        - Admin_2
      summary: Печать заявления на отпуск
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Staff.VacationPrint.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/admin_2/tpl/schema/:
    post:
      operationId: GetAdmin2TplSchema
      tags:
        - Admin_2
      summary: Получение схему HTML шаблона
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Tpl.Schema.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Tpl.Schema.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/admin_2/users/promocodes/:
    post:
      operationId: AddAdmin2UsersPromocodes
      tags:
        - Admin_2
      summary: Добавление промокоды к достижению
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Users.Promocodes.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Users.Promocodes.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Users.Verif'
  /get/admin_2/users/promocodes/:
    post:
      operationId: GetAdmin2UsersPromocodes
      tags:
        - Admin_2
      summary: |-
        Получение промокодов

        В params хранится строка в формате:
        - {{ rank_id }}
        - {{ rank_id }},single_code - для многоразового кода
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Users.Promocodes.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Users.Promocodes.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Users.Verif'
  /add/admin_2/users/ranks/:
    post:
      operationId: AddAdmin2UsersRanks
      tags:
        - Admin_2
      summary: Добавление достижение
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Users.Ranks.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Users.Ranks.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Admin.Users.Ranks'
  /edit/admin_2/users/ranks/:
    post:
      operationId: EditAdmin2UsersRanks
      tags:
        - Admin_2
      summary: Измение достижение
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Users.Ranks.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Users.Ranks.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Admin.Users.Ranks'
  /get/admin_2/users/ranks/:
    post:
      operationId: GetAdmin2UsersRanks
      tags:
        - Admin_2
      summary: Получение достижения
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Users.Ranks.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Users.Ranks.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Admin.Users.Ranks'
  /get/audit_2/audit/browse/:
    post:
      operationId: GetAudit2AuditBrowse
      tags:
        - Audit_2
      summary: Получение сводки анализа сайта
      description: '@deprecated'
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Browse.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Audit.Browse.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/audit/checks/:
    post:
      operationId: GetAudit2AuditChecks
      tags:
        - Audit_2
      summary: |-
        Получение общей информации о проверках
        - только для проверки, которая не завершена
        - в ответе будут заменены значения кодов ответа на текущие: count_000, count_1xx, count_2xx, count_3xx, count_4xx, count_5xx
        - в ответе будет заменено значение count_pages и count_all на текущие
        - в ответ будет добавлены значения robot_step и robot_count_tasks_allм
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Checks.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Audit.Checks.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Audit.Checks'
  /get/audit_2/audit/css/:
    post:
      operationId: GetAudit2AuditCss
      tags:
        - Audit_2
      summary: Получение проверенных css
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Css.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Audit.Css.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Audit.Css'
  /get/audit_2/audit/export/:
    post:
      operationId: GetAudit2AuditExport
      tags:
        - Audit_2
      summary: Экспорт результатов проверки файла
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Export.Get'
        required: true
      responses:
        '200':
          description: Файл результатов проверки сайта
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/audit_2/audit/images/:
    post:
      operationId: GetAudit2AuditImages
      tags:
        - Audit_2
      summary: Получение проверенных изображений
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Images.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Audit.Images.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Audit.Images'
  /get/audit_2/audit/js/:
    post:
      operationId: GetAudit2AuditJs
      tags:
        - Audit_2
      summary: Получение проверенных js
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Js.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Audit.Js.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Audit.Js'
  /get/audit_2/audit/links/:
    post:
      operationId: GetAudit2AuditLinks
      tags:
        - Audit_2
      summary: Получение проверенных ссылок
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Links.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Audit.Links.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Audit.Links'
  /get/audit_2/audit/log/:
    post:
      operationId: GetAudit2AuditLog
      tags:
        - Audit_2
      summary: Получение данных проверенных ресурсов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Log.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Audit.Log.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/audit/pages/:
    post:
      operationId: GetAudit2AuditPages
      tags:
        - Audit_2
      summary: Получение страниц, по которым был выполнен аудит
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Pages.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Audit.Pages.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Audit.Pages'
  /get/audit_2/audit/summary/:
    post:
      operationId: GetAudit2AuditSummary
      tags:
        - Audit_2
      summary: Получение сводки о выполненном аудите
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Summary.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Audit.Summary.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Audit.Checks'
  /get/audit_2/audit/summaryPage/:
    post:
      operationId: GetAudit2AuditSummaryPage
      tags:
        - Audit_2
      summary: Получение сводки страницы
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.SummaryPage.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Audit.SummaryPage.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Audit.Pages'
  /get/audit_2/indexing/export/:
    post:
      operationId: GetAudit2IndexingExport
      tags:
        - Audit_2
      summary: |-
        Экспорт результатов индексации

        Необходимо указать либо date1 и date2, либо dates (вместе указывать нельзя)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Export.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Indexing.Export.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/indexing/links/:
    post:
      operationId: GetAudit2IndexingLinks
      tags:
        - Audit_2
      summary: |-
        Создание гостевой ссылки на просмотр позиций

        Необходимо указать либо date1 и date2, либо dates (вместе указывать нельзя)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Links.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Indexing.Links.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/indexing/summary/:
    post:
      operationId: GetAudit2IndexingSummary
      tags:
        - Audit_2
      summary: Получение сводки индексации
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Summary.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Indexing.Summary.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/watcher/byURL/:
    post:
      operationId: GetAudit2WatcherByURL
      tags:
        - Audit_2
      summary: |-
        Построение отчета по одному URL

        Отличия от get/audit_2/watcher:
        - отчет генерируется на основе объекта watcher_results, а не urls
        - параметры выбора периода отчета игнорируются
        - выбор прверок регулируется параметрами запроса filters, limit и offset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Watcher.ByURL.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Watcher.ByURL.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Watcher.Results'
  /get/audit_2/watcher/checks/:
    post:
      operationId: GetAudit2WatcherChecks
      tags:
        - Audit_2
      summary: Получение проверок радара
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Watcher.Checks.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Watcher.Checks.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/watcher/summary/:
    post:
      operationId: GetAudit2WatcherSummary
      tags:
        - Audit_2
      summary: Получение сводки радара
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Watcher.Summary.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Watcher.Summary.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/diadoc/sendContract/:
    post:
      operationId: GetBank2DiadocSendContract
      tags:
        - Bank_2
      summary: Отправка договора в диадок
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Diadoc.SendContract.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Bank_2.Methods.Diadoc.SendContract.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/diadoc/sendTotalReceipt/:
    post:
      operationId: GetBank2DiadocSendTotalReceipt
      tags:
        - Bank_2
      summary: |-
        Отправка акта сверки в диадок

        Параметры см. в bank_2_requisites::protected_get_printTotalReceipt();
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Diadoc.SendTotalReceipt.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Bank_2.Methods.Diadoc.SendTotalReceipt.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/history/export/:
    post:
      operationId: GetBank2HistoryExport
      tags:
        - Bank_2
      summary: Экспорт лога банка
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.History.Export.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/bank_2/history/summary/:
    post:
      operationId: GetBank2HistorySummary
      tags:
        - Bank_2
      summary: Получение сводки проведенных операций
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.History.Summary.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Bank_2.Methods.History.Summary.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.BalanceHistory'
  /edit/bank_2/referrals/toBonus/:
    post:
      operationId: EditBank2ReferralsToBonus
      tags:
        - Bank_2
      summary: Перевод средств с реферального счета на бонусный
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Referrals.ToBonus.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Bank_2.Methods.Referrals.ToBonus.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/requisites/contractTariffId/:
    post:
      operationId: GetBank2RequisitesContractTariffId
      tags:
        - Bank_2
      summary: Получение id тарифа пользователя по типу контракта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Requisites.ContractTariffId.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Bank_2.Methods.Requisites.ContractTariffId.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/requisites/print/:
    post:
      operationId: GetBank2RequisitesPrint
      tags:
        - Bank_2
      summary: Скачивание документа в формате PDF
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Requisites.Print.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/bank_2/requisites/printTotalReceipt/:
    post:
      operationId: GetBank2RequisitesPrintTotalReceipt
      tags:
        - Bank_2
      summary: Получение акта сверки (акты по предоплате выводятся в одном платеже)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Requisites.PrintTotalReceipt.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Bank_2.Methods.Requisites.PrintTotalReceipt.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/requisites/printZip/:
    post:
      operationId: GetBank2RequisitesPrintZip
      tags:
        - Bank_2
      summary: Скачивание архива документов в формате PDF
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Requisites.PrintZip.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/bank_2/subscriptions/plans/:
    post:
      operationId: GetBank2SubscriptionsPlans
      tags:
        - Bank_2
      summary: Получение интерфейсов настройки всех планов подписки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Subscriptions.Plans.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Bank_2.Methods.Subscriptions.Plans.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/broker_2/ads/status/:
    post:
      operationId: EditBroker2AdsStatus
      tags:
        - Broker_2
      summary: Изменение статуса объявлений
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Ads.Status.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Ads.Status.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/broker_2/ads/toModerate/:
    post:
      operationId: EditBroker2AdsToModerate
      tags:
        - Broker_2
      summary: Отправка объявления на модерацию
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Ads.ToModerate.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Ads.ToModerate.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/broker_2/campaigns/updateTargeting/:
    post:
      operationId: EditBroker2CampaignsUpdateTargeting
      tags:
        - Broker_2
      summary: Обновление данных таргетинга
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Campaigns.UpdateTargeting.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Campaigns.UpdateTargeting.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Broker.Campaigns'
  /get/broker_2/groups/editor/:
    post:
      operationId: GetBroker2GroupsEditor
      tags:
        - Broker_2
      summary: Получение групп рекламной кампании для редактора
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Groups.Editor.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Groups.Editor.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/broker_2/keywords/status/:
    post:
      operationId: EditBroker2KeywordsStatus
      tags:
        - Broker_2
      summary: Изменение статуса запросов рекламной кампании
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Keywords.Status.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Keywords.Status.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/broker_2/log/export/:
    post:
      operationId: GetBroker2LogExport
      tags:
        - Broker_2
      summary: Экспортирование архива логов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Log.Export.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /add/broker_2/tasks/rateTask/:
    post:
      operationId: AddBroker2TasksRateTask
      tags:
        - Broker_2
      summary: Ручной запуск корректировки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker_2.Methods.Tasks.RateTask.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Broker_2.Methods.Tasks.RateTask.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/competitors_2/orders/pay/:
    post:
      operationId: EditCompetitors2OrdersPay
      tags:
        - Competitors_2
      summary: Оплатить отчет
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Competitors_2.Methods.Orders.Pay.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Competitors_2.Methods.Orders.Pay.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/content_2/apometr/calendar/:
    post:
      operationId: GetContent2ApometrCalendar
      tags:
        - Content_2
      summary: Получение календаря апдейтов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Apometr.Calendar.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Apometr.Calendar.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/content_2/apometr/cHHistory/:
    post:
      operationId: GetContent2ApometrCHHistory
      tags:
        - Content_2
      summary: Получение истории urls, найденных в выдаче, за конкретную проверку
      description: '@deprecated Используйте Services\Content_2\Methods\Apometr\Snapshots\Top\Get'
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Apometr.CHHistory.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Apometr.CHHistory.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Apometr.History'
  /get/content_2/apometr/history/:
    post:
      operationId: GetContent2ApometrHistory
      tags:
        - Content_2
      summary: Получение истории шторма за период в 2 суток
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Apometr.History.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Apometr.History.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/content_2/apometr/keywords/:
    post:
      operationId: GetContent2ApometrKeywords
      tags:
        - Content_2
      summary: Получение поисковых запросов апометра
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Apometr.Keywords.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Apometr.Keywords.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Apometr.Keywords'
  /get/content_2/apometr/updates/:
    post:
      operationId: GetContent2ApometrUpdates
      tags:
        - Content_2
      summary: Получение апдейтов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Apometr.Updates.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Apometr.Updates.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/content_2/journal/articles/:
    post:
      operationId: GetContent2JournalArticles
      tags:
        - Content_2
      summary: Получение статьи
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Journal.Articles.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Journal.Articles.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Pages'
  /get/content_2/journal/bookmarksAuthors/:
    post:
      operationId: GetContent2JournalBookmarksAuthors
      tags:
        - Content_2
      summary: Получение закладок авторов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Journal.BookmarksAuthors.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Journal.BookmarksAuthors.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Pages'
  /get/content_2/journal/bookmarks/:
    post:
      operationId: GetContent2JournalBookmarks
      tags:
        - Content_2
      summary: Получение закладок
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Journal.Bookmarks.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Journal.Bookmarks.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Pages'
  /get/content_2/journal/course/:
    post:
      operationId: GetContent2JournalCourse
      tags:
        - Content_2
      summary: |-
        Получение инофрмации о курсах

        Параметры выборки основаны на модели Models\Pages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Journal.Course.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Journal.Course.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Pages'
  /get/content_2/journal/rubrics/:
    post:
      operationId: GetContent2JournalRubrics
      tags:
        - Content_2
      summary: Получение рубрики
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Journal.Rubrics.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Journal.Rubrics.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Pages'
  /edit/content_2/journal/subscribe/:
    post:
      operationId: EditContent2JournalSubscribe
      tags:
        - Content_2
      summary: Изменение состояния подписки на рассылку журнала
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Journal.Subscribe.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Journal.Subscribe.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/content_2/pages/order/:
    post:
      operationId: EditContent2PagesOrder
      tags:
        - Content_2
      summary: Сортировка документов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Pages.Order.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Pages.Order.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/content_2/support/menu/:
    post:
      operationId: GetContent2SupportMenu
      tags:
        - Content_2
      summary: Получение меню справки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Support.Menu.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Support.Menu.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/informer_2/push/token/:
    post:
      operationId: AddInformer2PushToken
      tags:
        - Informer_2
      summary: Регистрация токена
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Informer_2.Methods.Push.Token.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Informer_2.Methods.Push.Token.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/informer_2/push/token/:
    post:
      operationId: DelInformer2PushToken
      tags:
        - Informer_2
      summary: Удаление токена
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Informer_2.Methods.Push.Token.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Informer_2.Methods.Push.Token.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/keywords_2/collect/go/:
    post:
      operationId: EditKeywords2CollectGo
      tags:
        - Keywords_2
      summary: Постановка задачи на подбор запросов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Keywords_2.Methods.Collect.Go.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Keywords_2.Methods.Collect.Go.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/keywords_2/collect/price/:
    post:
      operationId: GetKeywords2CollectPrice
      tags:
        - Keywords_2
      summary: Получение стоимости подбора запросов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Keywords_2.Methods.Collect.Price.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Keywords_2.Methods.Collect.Price.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/keywords_2/keywords/import/:
    post:
      operationId: AddKeywords2KeywordsImport
      tags:
        - Keywords_2
      summary: |-
        Импорт запросов (по необходимости зависимых с ними групп и папок)

        Доступные поля для импорта: group_folder_path|group_name|name|tags|target поля перекрывают аналогичные параметры в запросе
      description: '@see Keywords_2\Mods\Keywords\Import::fromHandle()'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Keywords_2.Methods.Keywords.Import.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Keywords_2.Methods.Keywords.Import.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/keywords_2/volumes/go/:
    post:
      operationId: EditKeywords2VolumesGo
      tags:
        - Keywords_2
      summary: Постановка задачи на проверку частоты запросов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Keywords_2.Methods.Volumes.Go.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Keywords_2.Methods.Volumes.Go.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Keywords'
  /get/keywords_2/volumes/price/:
    post:
      operationId: GetKeywords2VolumesPrice
      tags:
        - Keywords_2
      summary: Информация о стоимости запуска проверки позиций по проектам
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Keywords_2.Methods.Volumes.Price.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Keywords_2.Methods.Volumes.Price.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Keywords'
  /add/landings_2/hr/feedback/:
    post:
      operationId: AddLandings2HrFeedback
      tags:
        - Landings_2
      summary: Отправление письма с лэндинга вакансий на hr@topvisor.com
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Landings_2.Methods.Hr.Feedback.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Landings_2.Methods.Hr.Feedback.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/mentions_2/checker/go/:
    post:
      operationId: EditMentions2CheckerGo
      tags:
        - Mentions_2
      summary: Отправка правил на проверку
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentions_2.Methods.Checker.Go.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Mentions_2.Methods.Checker.Go.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/mentions_2/checker/price/:
    post:
      operationId: GetMentions2CheckerPrice
      tags:
        - Mentions_2
      summary: Получение стоимости проверки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentions_2.Methods.Checker.Price.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Mentions_2.Methods.Checker.Price.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/mentions_2/rules/keywords/:
    post:
      operationId: EditMentions2RulesKeywords
      tags:
        - Mentions_2
      summary: Изменение ключевых слов правила
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentions_2.Methods.Rules.Keywords.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Mentions_2.Methods.Rules.Keywords.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Mentions.Rules'
  /edit/mentions_2/rules/rename/:
    post:
      operationId: EditMentions2RulesRename
      tags:
        - Mentions_2
      summary: Изменить имя правила
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentions_2.Methods.Rules.Rename.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Mentions_2.Methods.Rules.Rename.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Mentions.Rules'
  /edit/mentions_2/searchers/depth/:
    post:
      operationId: EditMentions2SearchersDepth
      tags:
        - Mentions_2
      summary: Изменение глубины сбора упоминаний
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentions_2.Methods.Searchers.Depth.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Mentions_2.Methods.Searchers.Depth.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Mentions.Searchers'
  /edit/mentions_2/searchers/enabled/:
    post:
      operationId: EditMentions2SearchersEnabled
      tags:
        - Mentions_2
      summary: Изменить активность поисковика
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentions_2.Methods.Searchers.Enabled.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Mentions_2.Methods.Searchers.Enabled.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Mentions.Searchers'
  /edit/payments_2/recurrent/suspend/:
    post:
      operationId: EditPayments2RecurrentSuspend
      tags:
        - Payments_2
      summary: Управление приостановкой/возобновлением рекуррентных платежей
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.Recurrent.Suspend.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Payments_2.Methods.Recurrent.Suspend.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/payments_2/subscriptions/next/:
    post:
      operationId: EditPayments2SubscriptionsNext
      tags:
        - Payments_2
      summary: |-
        Изменения подписки на следующий расчетный период

        Изменение доступно только в рамках одной платежной системы

        Если требуется изменить другие параметры подписки, это можно только путем остановки этой подписки и созданием новой подписки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.Subscriptions.Next.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Payments_2.Methods.Subscriptions.Next.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/payments_2/tariff/delCard/:
    post:
      operationId: EditPayments2TariffDelCard
      tags:
        - Payments_2
      summary: Отписка от тарифа, оплаченного картой
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.Tariff.DelCard.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Payments_2.Methods.Tariff.DelCard.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/payments_2/tariff/nextToDiadoc/:
    post:
      operationId: EditPayments2TariffNextToDiadoc
      tags:
        - Payments_2
      summary: 'Настройка оплаты тарифов: выставлять ли счета через диадок'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.Tariff.NextToDiadoc.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Payments_2.Methods.Tariff.NextToDiadoc.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/payments_2/tariff/setNext/:
    post:
      operationId: EditPayments2TariffSetNext
      tags:
        - Payments_2
      summary: Смена тарифа со следующего месяца
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.Tariff.SetNext.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Payments_2.Methods.Tariff.SetNext.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/positions_2/checker/go/:
    post:
      operationId: EditPositions2CheckerGo
      tags:
        - Positions_2
      summary: Отправка проектов на проверку позиций
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Positions_2.Methods.Checker.Go.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Positions_2.Methods.Checker.Go.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /get/positions_2/checker/price/:
    post:
      operationId: GetPositions2CheckerPrice
      tags:
        - Positions_2
      summary: Информация о стоимости запуска проверки позиций по проектам
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Positions_2.Methods.Checker.Price.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Positions_2.Methods.Checker.Price.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /edit/positions_2/searchers/enabled/:
    post:
      operationId: EditPositions2SearchersEnabled
      tags:
        - Positions_2
      summary: Включение/выключение ПС
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Positions_2.Methods.Searchers.Enabled.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Positions_2.Methods.Searchers.Enabled.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/positions_2/searchers/regions/:
    post:
      operationId: AddPositions2SearchersRegions
      tags:
        - Positions_2
      summary: Добавление региона
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Positions_2.Methods.Searchers.Regions.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Positions_2.Methods.Searchers.Regions.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/positions_2/searchers/regions/:
    post:
      operationId: DelPositions2SearchersRegions
      tags:
        - Positions_2
      summary: Удаление региона
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Positions_2.Methods.Searchers.Regions.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Positions_2.Methods.Searchers.Regions.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/positions_2/searchers/regions/:
    post:
      operationId: EditPositions2SearchersRegions
      tags:
        - Positions_2
      summary: Изменение региона
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Positions_2.Methods.Searchers.Regions.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Positions_2.Methods.Searchers.Regions.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/positions_2/searchers/sort/:
    post:
      operationId: EditPositions2SearchersSort
      tags:
        - Positions_2
      summary: Настройка сортировки ПС
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Positions_2.Methods.Searchers.Sort.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Positions_2.Methods.Searchers.Sort.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/projects_2/analytics/graph/:
    post:
      operationId: GetProjects2AnalyticsGraph
      tags:
        - Projects_2
      summary: Получение данных графика
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Analytics.Graph.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Analytics.Graph.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/projects_2/competitors/move/:
    post:
      operationId: EditProjects2CompetitorsMove
      tags:
        - Projects_2
      summary: Перемещение конкурента (сортировка)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Competitors.Move.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Competitors.Move.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/projects_2/competitors/name/:
    post:
      operationId: EditProjects2CompetitorsName
      tags:
        - Projects_2
      summary: Установка имени конкурента
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Competitors.Name.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Competitors.Name.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/projects_2/competitors/on/:
    post:
      operationId: EditProjects2CompetitorsOn
      tags:
        - Projects_2
      summary: Включение/выключение конкурентов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Competitors.On.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Competitors.On.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/projects_2/folders/move/:
    post:
      operationId: EditProjects2FoldersMove
      tags:
        - Projects_2
      summary: Перемещение проектов в папку
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Folders.Move.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Folders.Move.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/projects_2/folders/moveFolder/:
    post:
      operationId: EditProjects2FoldersMoveFolder
      tags:
        - Projects_2
      summary: |-
        Переместить папку

        Вложенные папки запрещены, поэтому перемещение происходит только в пределах одного списка
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Folders.MoveFolder.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Folders.MoveFolder.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/projects_2/folders/name/:
    post:
      operationId: EditProjects2FoldersName
      tags:
        - Projects_2
      summary: Изменение имени папки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Folders.Name.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Folders.Name.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/projects_2/master/hintsCompetitors/:
    post:
      operationId: GetProjects2MasterHintsCompetitors
      tags:
        - Projects_2
      summary: |-
        Получить подсазки конкурентов для добавления в проект

        Доступ по API закрыт
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Master.HintsCompetitors.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Master.HintsCompetitors.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/projects_2/master/hintsKeywords/:
    post:
      operationId: GetProjects2MasterHintsKeywords
      tags:
        - Projects_2
      summary: |-
        Получить подсазки запросов для добавления в проект
        Доступ по API закрыт
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Master.HintsKeywords.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Master.HintsKeywords.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/projects_2/projects/copy/:
    post:
      operationId: AddProjects2ProjectsCopy
      tags:
        - Projects_2
      summary: Копирование проекта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Projects.Copy.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Projects.Copy.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/projects_2/projects/favorite/:
    post:
      operationId: EditProjects2ProjectsFavorite
      tags:
        - Projects_2
      summary: Настройка избранных проектов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Projects.Favorite.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Projects.Favorite.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /edit/projects_2/projects/move/:
    post:
      operationId: EditProjects2ProjectsMove
      tags:
        - Projects_2
      summary: Перемещение проекта (сортировка)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Projects.Move.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Projects.Move.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/projects_2/projects/name/:
    post:
      operationId: EditProjects2ProjectsName
      tags:
        - Projects_2
      summary: Установка имени проекта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Projects.Name.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Projects.Name.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/projects_2/projects/on/:
    post:
      operationId: EditProjects2ProjectsOn
      tags:
        - Projects_2
      summary: Редактирование "on" проектов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Projects.On.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Projects.On.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /edit/projects_2/projects/sort/:
    post:
      operationId: EditProjects2ProjectsSort
      tags:
        - Projects_2
      summary: Изменение сортировки проектов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Projects.Sort.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Projects.Sort.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /edit/projects_2/projects/tags/:
    post:
      operationId: EditProjects2ProjectsTags
      tags:
        - Projects_2
      summary: Редактирование тегов проектов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Projects.Tags.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Projects.Tags.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/projects_2/projects/url/:
    post:
      operationId: EditProjects2ProjectsUrl
      tags:
        - Projects_2
      summary: Редактирование ссылки проекта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Projects.Url.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Projects.Url.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/projects_2/rights/changeOwner/:
    post:
      operationId: DelProjects2RightsChangeOwner
      tags:
        - Projects_2
      summary: Отмена передачи проекта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Rights.ChangeOwner.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Rights.ChangeOwner.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/projects_2/rights/changeOwner/:
    post:
      operationId: EditProjects2RightsChangeOwner
      tags:
        - Projects_2
      summary: Инициализация передачи проекта другому пользователю
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Rights.ChangeOwner.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Rights.ChangeOwner.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/projects_2/status/registrar/:
    post:
      operationId: GetProjects2StatusRegistrar
      tags:
        - Projects_2
      summary: |-
        Получение информации о регистрации домена

        Возвращает объект с параметрами:
        - wait_time, если данные не готовы
        - created, если данные готовы
        - paidtill, если данные готовы
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Status.Registrar.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Status.Registrar.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/projects_2/status/ssl/:
    post:
      operationId: GetProjects2StatusSsl
      tags:
        - Projects_2
      summary: |-
        Получение информации об SSL сертификате
        Возваращает объект с параметрами:
        - expire
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Status.Ssl.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Status.Ssl.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/projects_2/tasks/volumes/:
    post:
      operationId: AddProjects2TasksVolumes
      tags:
        - Projects_2
      summary: Создание задачи
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Tasks.Volumes.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Tasks.Volumes.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/quiz_2/questionsResponses/multi/:
    post:
      operationId: AddQuiz2QuestionsResponsesMulti
      tags:
        - Quiz_2
      summary: Добавление нескольких ответов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz_2.Methods.QuestionsResponses.Multi.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Quiz_2.Methods.QuestionsResponses.Multi.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/redmine_2/users/groups/:
    post:
      operationId: GetRedmine2UsersGroups
      tags:
        - Redmine_2
      summary: Получить список групп с пользователями
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Redmine_2.Methods.Users.Groups.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Redmine_2.Methods.Users.Groups.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/reports_2/positions/sendTest/:
    post:
      operationId: EditReports2PositionsSendTest
      tags:
        - Reports_2
      summary: Отправить тестовый отчет
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reports_2.Methods.Positions.SendTest.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Reports_2.Methods.Positions.SendTest.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/schedule_2/settings/emailsHints/:
    post:
      operationId: GetSchedule2SettingsEmailsHints
      tags:
        - Schedule_2
      summary: Получить список email, используемых в любых расписаниях, к которым есть доступ у аккаунта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule_2.Methods.Settings.EmailsHints.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Schedule_2.Methods.Settings.EmailsHints.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/tickets_2/admin/message/:
    post:
      operationId: DelTickets2AdminMessage
      tags:
        - Tickets_2
      summary: Удаление ответа в тикете, только для админов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Admin.Message.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Admin.Message.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tickets_2/admin/message/:
    post:
      operationId: EditTickets2AdminMessage
      tags:
        - Tickets_2
      summary: Редактирование текста ответа в тикете, только для админов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Admin.Message.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Admin.Message.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/tickets_2/admin/templates/:
    post:
      operationId: AddTickets2AdminTemplates
      tags:
        - Tickets_2
      summary: Добавление шаблона тикета
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Admin.Templates.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Admin.Templates.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/tickets_2/admin/templates/:
    post:
      operationId: DelTickets2AdminTemplates
      tags:
        - Tickets_2
      summary: Удаление шаблона
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Admin.Templates.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Admin.Templates.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tickets_2/admin/templates/:
    post:
      operationId: EditTickets2AdminTemplates
      tags:
        - Tickets_2
      summary: Изменение шаблона
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Admin.Templates.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Admin.Templates.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/tickets_2/admin/templates/:
    post:
      operationId: GetTickets2AdminTemplates
      tags:
        - Tickets_2
      summary: Получение шаблона тикета
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Admin.Templates.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Admin.Templates.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tickets_2/admin/ticket/:
    post:
      operationId: EditTickets2AdminTicket
      tags:
        - Tickets_2
      summary: Редактирование тикета (для админов)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Admin.Ticket.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Admin.Ticket.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tickets_2/admin/ticketSplit/:
    post:
      operationId: EditTickets2AdminTicketSplit
      tags:
        - Tickets_2
      summary: Перенос последниего сообщения (до 1 сообщения автора) в новый тикет
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Admin.TicketSplit.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Admin.TicketSplit.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/tickets_2/admin/user/:
    post:
      operationId: GetTickets2AdminUser
      tags:
        - Tickets_2
      summary: Получение инфомрации о пользователе
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Admin.User.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Admin.User.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tickets_2/admin/userId/:
    post:
      operationId: EditTickets2AdminUserId
      tags:
        - Tickets_2
      summary: Установка userId для тикетов без userId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Admin.UserId.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Admin.UserId.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tickets_2/tickets/adminComment/:
    post:
      operationId: EditTickets2TicketsAdminComment
      tags:
        - Tickets_2
      summary: Редактирваоние комменатрий админа
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Tickets.AdminComment.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Tickets.AdminComment.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/tickets_2/tickets/info/:
    post:
      operationId: GetTickets2TicketsInfo
      tags:
        - Tickets_2
      summary: |-
        Получение краткой информации о тикетах

        id последнего непрочитанного тикета, число непрочитанных тикетов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Tickets.Info.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Tickets.Info.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tickets_2/tickets/setReaded/:
    post:
      operationId: EditTickets2TicketsSetReaded
      tags:
        - Tickets_2
      summary: Пометка тикета как "прочитанный" для автора тикета или админов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Tickets.SetReaded.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Tickets.SetReaded.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tickets_2/tickets/writing/:
    post:
      operationId: EditTickets2TicketsWriting
      tags:
        - Tickets_2
      summary: Написание текста
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Tickets.Writing.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Tickets.Writing.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/tpvsr_2/stat/referers/:
    post:
      operationId: GetTpvsr2StatReferers
      tags:
        - Tpvsr_2
      summary: Получение всех источников по индексу источника
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tpvsr_2.Methods.Stat.Referers.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tpvsr_2.Methods.Stat.Referers.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/urls_2/import/recognizeLinkSitemapXml/:
    post:
      operationId: GetUrls2ImportRecognizeLinkSitemapXml
      tags:
        - Urls_2
      summary: Получение URL к карте сайта по файлу robots.txt для указанного домена
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Urls_2.Methods.Import.RecognizeLinkSitemapXml.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Urls_2.Methods.Import.RecognizeLinkSitemapXml.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/users_2/join/email/:
    post:
      operationId: AddUsers2JoinEmail
      tags:
        - Users_2
      summary: Привязка email к аккаунту
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users_2.Methods.Join.Email.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Users_2.Methods.Join.Email.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/admin_2/accounting/group/filter/:
    post:
      operationId: AddAdmin2AccountingGroupFilter
      tags:
        - Admin_2
      summary: Добавление фильтра группы
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Accounting.Group.Filter.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Accounting.Group.Filter.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/admin_2/accounting/group/filter/:
    post:
      operationId: DelAdmin2AccountingGroupFilter
      tags:
        - Admin_2
      summary: Удаление фильтра группы
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Accounting.Group.Filter.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Accounting.Group.Filter.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/accounting/group/filter/:
    post:
      operationId: EditAdmin2AccountingGroupFilter
      tags:
        - Admin_2
      summary: Изменение фильтра группы
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Accounting.Group.Filter.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Accounting.Group.Filter.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/accounting/invoices/file/:
    post:
      operationId: GetAdmin2AccountingInvoicesFile
      tags:
        - Admin_2
      summary: Скачивание документа
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Accounting.Invoices.File.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/admin_2/accounting/operations/export/:
    post:
      operationId: GetAdmin2AccountingOperationsExport
      tags:
        - Admin_2
      summary: Скачивание реестра исходящих операций
      description: |-
        @POST string month - месяц в формате: YYYY-mm
        столбцы CSV: 'Дата акта', 'Номер акта', 'Контрагент', 'ИНН', 'Товар/услуга', 'Номенклатура', 'Кол-во', 'Цена', 'НДС', 'Сумма', 'Способ оплаты'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Accounting.Operations.Export.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Accounting.Operations.Export.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/actions/backup/keywords/:
    post:
      operationId: EditAdmin2ActionsBackupKeywords
      tags:
        - Admin_2
      summary: Востановление поисковых запросов из бэкапа
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Backup.Keywords.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Backup.Keywords.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/actions/backup/loader/:
    post:
      operationId: EditAdmin2ActionsBackupLoader
      tags:
        - Admin_2
      summary: Загрузить и разместить бекап в БД бекапов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Backup.Loader.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Backup.Loader.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/actions/backup/project/:
    post:
      operationId: EditAdmin2ActionsBackupProject
      tags:
        - Admin_2
      summary: Востановление удаленного проекта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Backup.Project.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Backup.Project.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/actions/bank/referral/:
    post:
      operationId: EditAdmin2ActionsBankReferral
      tags:
        - Admin_2
      summary: Оплата реферального счета
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Bank.Referral.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Bank.Referral.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/admin_2/actions/payments/diadoc/:
    post:
      operationId: AddAdmin2ActionsPaymentsDiadoc
      tags:
        - Admin_2
      summary: Отправка акты в диадок
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Payments.Diadoc.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Payments.Diadoc.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/admin_2/actions/positions/history/:
    post:
      operationId: AddAdmin2ActionsPositionsHistory
      tags:
        - Admin_2
      summary: Импортирование историй позиций из CSV
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Positions.History.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Positions.History.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/actions/positions/status/:
    post:
      operationId: EditAdmin2ActionsPositionsStatus
      tags:
        - Admin_2
      summary: Сброс статуса проверки позиций
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Positions.Status.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Positions.Status.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/actions/projects/domain/:
    post:
      operationId: EditAdmin2ActionsProjectsDomain
      tags:
        - Admin_2
      summary: Изменение домена проекта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Projects.Domain.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Projects.Domain.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/actions/regions/commitGoogle/:
    post:
      operationId: EditAdmin2ActionsRegionsCommitGoogle
      tags:
        - Admin_2
      summary: Добавить регионы Google в сервис
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Regions.CommitGoogle.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Regions.CommitGoogle.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/actions/regions/updateGoogle/:
    post:
      operationId: EditAdmin2ActionsRegionsUpdateGoogle
      tags:
        - Admin_2
      summary: Обновление регионов Google
      description: '@see https://developers.google.com/google-ads/api/data/geotargets'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Regions.UpdateGoogle.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Regions.UpdateGoogle.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/actions/robot/checks/:
    post:
      operationId: EditAdmin2ActionsRobotChecks
      tags:
        - Admin_2
      summary: Перевод проверок позиций яндекс
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Robot.Checks.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Robot.Checks.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/actions/robot/priority/:
    post:
      operationId: EditAdmin2ActionsRobotPriority
      tags:
        - Admin_2
      summary: Изменение приоритета задач
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Robot.Priority.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Robot.Priority.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/actions/robot/task/:
    post:
      operationId: EditAdmin2ActionsRobotTask
      tags:
        - Admin_2
      summary: Снятие задачи с дэбага
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Robot.Task.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Robot.Task.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/admin_2/actions/slack/files/:
    post:
      operationId: DelAdmin2ActionsSlackFiles
      tags:
        - Admin_2
      summary: Удаление файлов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Slack.Files.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Slack.Files.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/admin_2/actions/slack/messages/:
    post:
      operationId: DelAdmin2ActionsSlackMessages
      tags:
        - Admin_2
      summary: Удаление сообщений
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Slack.Messages.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Slack.Messages.Del.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/actions/user/currency/:
    post:
      operationId: EditAdmin2ActionsUserCurrency
      tags:
        - Admin_2
      summary: Изменение валюты пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.User.Currency.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.User.Currency.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/actions/user/email/:
    post:
      operationId: EditAdmin2ActionsUserEmail
      tags:
        - Admin_2
      summary: Замена email пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.User.Email.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.User.Email.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/accounting/summaryForChart/:
    post:
      operationId: GetAdmin2AnalyticsAccountingSummaryForChart
      tags:
        - Admin_2
      summary: Получение сводки по группам
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Accounting.SummaryForChart.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Accounting.SummaryForChart.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/activity/chartByPeriod/:
    post:
      operationId: GetAdmin2AnalyticsActivityChartByPeriod
      tags:
        - Admin_2
      summary: Получение активности пользователей в формате для графика
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Activity.ChartByPeriod.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Activity.ChartByPeriod.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/competitors/summaryForOrdersChart/:
    post:
      operationId: GetAdmin2AnalyticsCompetitorsSummaryForOrdersChart
      tags:
        - Admin_2
      summary: Получение конкурентов для графика
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Competitors.SummaryForOrdersChart.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Competitors.SummaryForOrdersChart.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/payments/systems/:
    post:
      operationId: GetAdmin2AnalyticsPaymentsSystems
      tags:
        - Admin_2
      summary: Получение суммы оплат по системам платежей за период
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Payments.Systems.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Payments.Systems.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/payments/tariff/:
    post:
      operationId: GetAdmin2AnalyticsPaymentsTariff
      tags:
        - Admin_2
      summary: Получение суммы оплат по тарифам за период
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Payments.Tariff.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Payments.Tariff.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/positions/chartByDayByHourAuto/:
    post:
      operationId: GetAdmin2AnalyticsPositionsChartByDayByHourAuto
      tags:
        - Admin_2
      summary: Получение числа автоматических проверока по дням по часам
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Positions.ChartByDayByHourAuto.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Positions.ChartByDayByHourAuto.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/positions/chartByHourAuto/:
    post:
      operationId: GetAdmin2AnalyticsPositionsChartByHourAuto
      tags:
        - Admin_2
      summary: Получение числа автоматических проверок по часам
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Positions.ChartByHourAuto.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Positions.ChartByHourAuto.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/positions/chartByHour/:
    post:
      operationId: GetAdmin2AnalyticsPositionsChartByHour
      tags:
        - Admin_2
      summary: Получение числа проверок за месяц по часам
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Positions.ChartByHour.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Positions.ChartByHour.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/positions/chartCountUsersByHour/:
    post:
      operationId: GetAdmin2AnalyticsPositionsChartCountUsersByHour
      tags:
        - Admin_2
      summary: Получение числа проверок по часам по пользователям
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Positions.ChartCountUsersByHour.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Positions.ChartCountUsersByHour.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/tickets/chartByMigrations/:
    post:
      operationId: GetAdmin2AnalyticsTicketsChartByMigrations
      tags:
        - Admin_2
      summary: Получение статистики тикетов по миграциям
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Tickets.ChartByMigrations.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Tickets.ChartByMigrations.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/tickets/chartByNew/:
    post:
      operationId: GetAdmin2AnalyticsTicketsChartByNew
      tags:
        - Admin_2
      summary: Получение статистики по кол-ву пользователей, открывших первый тикет
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Tickets.ChartByNew.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Tickets.ChartByNew.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/tickets/chartByRates/:
    post:
      operationId: GetAdmin2AnalyticsTicketsChartByRates
      tags:
        - Admin_2
      summary: Получение статистики тикетов по оценкам
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Tickets.ChartByRates.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Tickets.ChartByRates.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/tickets/chartByTags/:
    post:
      operationId: GetAdmin2AnalyticsTicketsChartByTags
      tags:
        - Admin_2
      summary: Получение статистику тикетов по тегам
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Tickets.ChartByTags.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Tickets.ChartByTags.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/tickets/chartByWaitTime/:
    post:
      operationId: GetAdmin2AnalyticsTicketsChartByWaitTime
      tags:
        - Admin_2
      summary: Получение статистики по среднему времени ожидания ответа на вопросы в тикетах
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Tickets.ChartByWaitTime.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Tickets.ChartByWaitTime.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/analytics/tickets/messages/:
    post:
      operationId: GetAdmin2AnalyticsTicketsMessages
      tags:
        - Admin_2
      summary: Получение статистики ответов на тикеты
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Analytics.Tickets.Messages.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Analytics.Tickets.Messages.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/admin_2/logs/system/checked/:
    post:
      operationId: EditAdmin2LogsSystemChecked
      tags:
        - Admin_2
      summary: Помечание лога как обработанного
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Logs.System.Checked.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Logs.System.Checked.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/users/informer/subscriptions/:
    post:
      operationId: GetAdmin2UsersInformerSubscriptions
      tags:
        - Admin_2
      summary: |-
        Получение графика с количеством подписок на рубрики с сегментцией по способам рассылки

        График кешируется, первый запрос может выполняться дольше
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Users.Informer.Subscriptions.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Users.Informer.Subscriptions.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/audit_2/audit/checker/go/:
    post:
      operationId: EditAudit2AuditCheckerGo
      tags:
        - Audit_2
      summary: Запуск проверки аудита
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Checker.Go.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Audit.Checker.Go.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /get/audit_2/audit/checker/price/:
    post:
      operationId: GetAudit2AuditCheckerPrice
      tags:
        - Audit_2
      summary: Информация о стоимости запуска аудита по проектам
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Checker.Price.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Audit.Checker.Price.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /get/audit_2/audit/export/links/:
    post:
      operationId: GetAudit2AuditExportLinks
      tags:
        - Audit_2
      summary: Получение гостевой ссылки на просмотр аудита позиций
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Export.Links.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Audit.Export.Links.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/audit/export/summary/:
    post:
      operationId: GetAudit2AuditExportSummary
      tags:
        - Audit_2
      summary: Экспорт отчета Анализа сайта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Export.Summary.Get'
        required: true
      responses:
        '200':
          description: Файл отчета анализа сайта
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/audit_2/audit/log/actualError/:
    post:
      operationId: GetAudit2AuditLogActualError
      tags:
        - Audit_2
      summary: Получение информации о текущей ошибке на роботе
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Log.ActualError.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Audit.Log.ActualError.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/audit/log/chart/:
    post:
      operationId: GetAudit2AuditLogChart
      tags:
        - Audit_2
      summary: Получение данных для графика
      description: '@deprecated'
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Log.Chart.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Audit.Log.Chart.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/audit/results/export/:
    post:
      operationId: GetAudit2AuditResultsExport
      tags:
        - Audit_2
      summary: Экспорт результатов аудита
      description: '@deprecated'
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Results.Export.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Audit.Results.Export.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/audit/results/page/:
    post:
      operationId: GetAudit2AuditResultsPage
      tags:
        - Audit_2
      summary: Получение результатов анализа страницы
      description: '@deprecated'
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Results.Page.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Audit.Results.Page.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/audit_2/indexing/checker/go/:
    post:
      operationId: EditAudit2IndexingCheckerGo
      tags:
        - Audit_2
      summary: Отправка проектов на проверку индексации
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Checker.Go.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Indexing.Checker.Go.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /get/audit_2/indexing/checker/price/:
    post:
      operationId: GetAudit2IndexingCheckerPrice
      tags:
        - Audit_2
      summary: Информация о стоимости запуска индексации по проектам
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Checker.Price.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Indexing.Checker.Price.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /get/audit_2/indexing/export/links/:
    post:
      operationId: GetAudit2IndexingExportLinks
      tags:
        - Audit_2
      summary: |-
        Получение гостевой ссылки на просмотр индексации

        Необходимо указать либо date1 и date2, либо dates (вместе указывать нельзя)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Export.Links.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Indexing.Export.Links.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/indexing/export/toRepository/:
    post:
      operationId: GetAudit2IndexingExportToRepository
      tags:
        - Audit_2
      summary: Экспорт файла в хранилище
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Export.ToRepository.Get'
        required: true
      responses:
        '200':
          description: Будет произведен редиркт на файл в хранилище
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/audit_2/indexing/summary/chart/:
    post:
      operationId: GetAudit2IndexingSummaryChart
      tags:
        - Audit_2
      summary: Получение сводок индексации для графика
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Summary.Chart.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Indexing.Summary.Chart.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/audit_2/sitemap/checker/go/:
    post:
      operationId: EditAudit2SitemapCheckerGo
      tags:
        - Audit_2
      summary: Отправка проектов на проверку карты сайта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Sitemap.Checker.Go.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Sitemap.Checker.Go.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /get/audit_2/sitemap/checker/price/:
    post:
      operationId: GetAudit2SitemapCheckerPrice
      tags:
        - Audit_2
      summary: Информация о стоимости запуска индексации по проектам
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Sitemap.Checker.Price.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Sitemap.Checker.Price.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /edit/audit_2/watcher/checker/go/:
    post:
      operationId: EditAudit2WatcherCheckerGo
      tags:
        - Audit_2
      summary: Отправка проектов на проверку радара
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Watcher.Checker.Go.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Watcher.Checker.Go.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /get/audit_2/watcher/checker/price/:
    post:
      operationId: GetAudit2WatcherCheckerPrice
      tags:
        - Audit_2
      summary: Информация о стоимости запуска индексации по проектам
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Watcher.Checker.Price.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Watcher.Checker.Price.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /get/audit_2/watcher/export/links/:
    post:
      operationId: GetAudit2WatcherExportLinks
      tags:
        - Audit_2
      summary: Создание гостевой ссылки на просмотр радара
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Watcher.Export.Links.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Watcher.Export.Links.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/watcher/summary/chart/:
    post:
      operationId: GetAudit2WatcherSummaryChart
      tags:
        - Audit_2
      summary: Получение сводок радара для графика
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Watcher.Summary.Chart.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Audit_2.Methods.Watcher.Summary.Chart.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/content_2/apometr/snapshots/top/:
    post:
      operationId: GetContent2ApometrSnapshotsTop
      tags:
        - Content_2
      summary: Получение топа выдачи сайтов за определенную проверку
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Apometr.Snapshots.Top.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Apometr.Snapshots.Top.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/content_2/apometr/text/calendar/:
    post:
      operationId: GetContent2ApometrTextCalendar
      tags:
        - Content_2
      summary: Получение календаря текстовых апдейтов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Apometr.Text.Calendar.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Apometr.Text.Calendar.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/content_2/apometr/text/updates/:
    post:
      operationId: GetContent2ApometrTextUpdates
      tags:
        - Content_2
      summary: Получение текстовых апдейтов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Apometr.Text.Updates.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Apometr.Text.Updates.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/content_2/apometr/updates/dates/:
    post:
      operationId: GetContent2ApometrUpdatesDates
      tags:
        - Content_2
      summary: Получение дат апдейтов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Apometr.Updates.Dates.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Apometr.Updates.Dates.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/content_2/journal/course/certificates/:
    post:
      operationId: AddContent2JournalCourseCertificates
      tags:
        - Content_2
      summary: |-
        Создание сертификата

        Можно создавать только для пройденных курсов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Journal.Course.Certificates.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Journal.Course.Certificates.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Pages'
  /edit/content_2/journal/course/certificates/:
    post:
      operationId: EditContent2JournalCourseCertificates
      tags:
        - Content_2
      summary: |-
        Изменение сертификата

        Можно менять только имя, если оно не указано
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Journal.Course.Certificates.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Journal.Course.Certificates.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/content_2/journal/course/certificates/:
    post:
      operationId: GetContent2JournalCourseCertificates
      tags:
        - Content_2
      summary: Получение своего сертификата
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Journal.Course.Certificates.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Journal.Course.Certificates.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/content_2/journal/course/chapters/:
    post:
      operationId: GetContent2JournalCourseChapters
      tags:
        - Content_2
      summary: |-
        Получение модулей курса

        Дополнительные поля:
         - lessons - см. includeLessons()
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Journal.Course.Chapters.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Journal.Course.Chapters.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Pages'
  /get/content_2/journal/dictionary/articlesByLetter/:
    post:
      operationId: GetContent2JournalDictionaryArticlesByLetter
      tags:
        - Content_2
      summary: |-
        Получение списка страниц по буквам для модуля SEO словарь
        Результат функции кешируется
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Journal.Dictionary.ArticlesByLetter.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Journal.Dictionary.ArticlesByLetter.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Pages'
  /get/content_2/journal/dictionary/wordOfday/:
    post:
      operationId: GetContent2JournalDictionaryWordOfday
      tags:
        - Content_2
      summary: Получение стаьи для "Слово дня" в модуле SEO словарь
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Journal.Dictionary.WordOfday.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Journal.Dictionary.WordOfday.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Pages'
  /edit/keywords_2/collect/ext/go/:
    post:
      operationId: EditKeywords2CollectExtGo
      tags:
        - Keywords_2
      summary: Постановка задачи на расширение группы
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Keywords_2.Methods.Collect.Ext.Go.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Keywords_2.Methods.Collect.Ext.Go.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/keywords_2/collect/ext/price/:
    post:
      operationId: GetKeywords2CollectExtPrice
      tags:
        - Keywords_2
      summary: Получение цены на расширение группы
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Keywords_2.Methods.Collect.Ext.Price.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Keywords_2.Methods.Collect.Ext.Price.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/positions_2/searchers/regions/export/:
    post:
      operationId: GetPositions2SearchersRegionsExport
      tags:
        - Positions_2
      summary: |-
        Экспорт регионов (CSV)

        - searcher_key, name_or_key (название или код)[, country_code (2 буквенный код страны), lang, device, depth]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Positions_2.Methods.Searchers.Regions.Export.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /add/positions_2/searchers/regions/import/:
    post:
      operationId: AddPositions2SearchersRegionsImport
      tags:
        - Positions_2
      summary: Импорт регионов (CSV)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Positions_2.Methods.Searchers.Regions.Import.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Positions_2.Methods.Searchers.Regions.Import.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/positions_2/searchers/regions/sort/:
    post:
      operationId: EditPositions2SearchersRegionsSort
      tags:
        - Positions_2
      summary: Настройка сортировки регионов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Positions_2.Methods.Searchers.Regions.Sort.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Positions_2.Methods.Searchers.Regions.Sort.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/projects_2/tasks/volumes/price/:
    post:
      operationId: GetProjects2TasksVolumesPrice
      tags:
        - Projects_2
      summary: Получение проверки частоты задачи без проекта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Tasks.Volumes.Price.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Tasks.Volumes.Price.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/projects_2/tasks/volumes/status/:
    post:
      operationId: GetProjects2TasksVolumesStatus
      tags:
        - Projects_2
      summary: Получение статуса проверки частоты задачи
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Tasks.Volumes.Status.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Projects_2.Methods.Tasks.Volumes.Status.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
  /edit/tickets_2/admin/templates/sort/:
    post:
      operationId: EditTickets2AdminTemplatesSort
      tags:
        - Tickets_2
      summary: Изменение сортировки шаблонов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Admin.Templates.Sort.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Admin.Templates.Sort.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tickets_2/admin/ticket/resourceAdmin/:
    post:
      operationId: EditTickets2AdminTicketResourceAdmin
      tags:
        - Tickets_2
      summary: Изменение админской ссылки к тикетам. Только для админов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Admin.Ticket.ResourceAdmin.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tickets_2.Methods.Admin.Ticket.ResourceAdmin.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/tpvsr_2/stat/export/guestLinks/:
    post:
      operationId: GetTpvsr2StatExportGuestLinks
      tags:
        - Tpvsr_2
      summary: Поучение гостевой ссылки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tpvsr_2.Methods.Stat.Export.GuestLinks.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tpvsr_2.Methods.Stat.Export.GuestLinks.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/tpvsr_2/stat/export/referrers/:
    post:
      operationId: GetTpvsr2StatExportReferrers
      tags:
        - Tpvsr_2
      summary: Получение списка источников
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tpvsr_2.Methods.Stat.Export.Referrers.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Tpvsr_2.Methods.Stat.Export.Referrers.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/admin_2/actions/positions/history/copy/:
    post:
      operationId: AddAdmin2ActionsPositionsHistoryCopy
      tags:
        - Admin_2
      summary: Копирование истории позиций
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Positions.History.Copy.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Admin_2.Methods.Actions.Positions.History.Copy.Add.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/content_2/journal/course/certificates/byID/:
    post:
      operationId: GetContent2JournalCourseCertificatesByID
      tags:
        - Content_2
      summary: Получение сертификата по id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Journal.Course.Certificates.ByID.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Journal.Course.Certificates.ByID.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/content_2/journal/course/certificates/image/:
    post:
      operationId: GetContent2JournalCourseCertificatesImage
      tags:
        - Content_2
      summary: Получение сертификата в виде изображения
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Journal.Course.Certificates.Image.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Content_2.Methods.Journal.Course.Certificates.Image.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/informer_2/push/safari/webService/authToken/:
    post:
      operationId: GetInformer2PushSafariWebServiceAuthToken
      tags:
        - Informer_2
      summary: |-
        Получение токена авторизации для работы с safari web push

        Создаст токен, если его не существует
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Informer_2.Methods.Push.Safari.WebService.AuthToken.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Informer_2.Methods.Push.Safari.WebService.AuthToken.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/snapshots_2/hiddenDomains/:
    post:
      operationId: EditSnapshots2HiddenDomains
      tags:
        - Snapshots_2
      summary: Выделение сайтов (доменов) как неважные
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshots_2.Methods.HiddenDomains.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Snapshots_2.Methods.HiddenDomains.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/snapshots_2/hiddenDomains/:
    post:
      operationId: GetSnapshots2HiddenDomains
      tags:
        - Snapshots_2
      summary: Получение списка сайтов (доменов), которые выделены как неважные
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshots_2.Methods.HiddenDomains.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Snapshots_2.Methods.HiddenDomains.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/users_2/:
    post:
      operationId: GetUsers2
      tags:
        - Users_2
      summary: Получение данных пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Users_2.Methods.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/users_2/auth/:
    post:
      operationId: GetUsers2Auth
      tags:
        - Users_2
      summary: Проверка на авторизацию пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users_2.Methods.Auth.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Users_2.Methods.Auth.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/snapshots_2/competitors/:
    post:
      operationId: GetSnapshots2Competitors
      tags:
        - Snapshots_2
      summary: |-
        Получение списка конкурентов

        Метод базируется на объекте keywords (доступны только фильтры)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshots_2.Methods.Competitors.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Snapshots_2.Methods.Competitors.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/system_2/tpl/:
    post:
      operationId: GetSystem2Tpl
      tags:
        - System_2
      summary: Получение кешируемого HTML-шаблона
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/System_2.Methods.Tpl.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/System_2.Methods.Tpl.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/snapshots_2/competitors/chart/:
    post:
      operationId: GetSnapshots2CompetitorsChart
      tags:
        - Snapshots_2
      summary: Получение данных сводки конкурентов для графика
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshots_2.Methods.Competitors.Chart.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Snapshots_2.Methods.Competitors.Chart.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/system_2/api/genKey/:
    post:
      operationId: EditSystem2ApiGenKey
      tags:
        - System_2
      summary: Генерация нового API ключа
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/System_2.Methods.Api.GenKey.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/System_2.Methods.Api.GenKey.Edit.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /abstractregular/snapshots_2/competitors/:
    post:
      operationId: AbstractregularSnapshots2Competitors
      tags:
        - Snapshots_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshots_2.Methods.Competitors.AbstractRegular'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Snapshots_2.Methods.Competitors.AbstractRegular.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/snapshots_2/competitors/export/:
    post:
      operationId: GetSnapshots2CompetitorsExport
      tags:
        - Snapshots_2
      summary: Экспорт списка конкурентов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshots_2.Methods.Competitors.Export.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Snapshots_2.Methods.Competitors.Export.Get.Exec'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/snapshots_2/competitors/chart/export/:
    post:
      operationId: GetSnapshots2CompetitorsChartExport
      tags:
        - Snapshots_2
      summary: |-
        Экспорт сводки с графика

        Описание параметров смотреть в get/snapshots_2/competitors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshots_2.Methods.Competitors.Chart.Export.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/snapshots_2/competitors/export/toRepository/:
    post:
      operationId: GetSnapshots2CompetitorsExportToRepository
      tags:
        - Snapshots_2
      summary: |-
        Экспорт в хранилище

        Производит редирект на файл в кранилище
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshots_2.Methods.Competitors.Export.ToRepository.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
components:
  securitySchemes:
    authToken:
      type: apiKey
      description: 'Авторизаци по API ключу в формате: `Bearer userId:AccessToken`'
      name: Authorization
      in: header
    authLogin:
      type: apiKey
      description: Пользовательская авторизиаця через ввода Логина и пароля или через сторонний сервис
      name: auth
      in: cookie
  schemas:
    Analytics_2.Methods.Add:
      type: object
      properties:
        ec:
          title: Категория
          nullable: true
          type: string
        ea:
          title: Дейсвтие
          nullable: true
          type: string
        el:
          title: Ярлык в base64
          nullable: true
          type: string
        uid:
          title: ID пользователя
          nullable: true
          type: integer
        hash_id:
          title: Хеш для уникализации события
          nullable: true
          type: integer
        hash:
          title: Хэш для проверки подлинности события
          nullable: true
          type: integer
      required: []
      title: Фиксация события
    Analytics_2.Methods.Add.Exec:
      nullable: true
      type: integer
    TV.API.Types.StringArray:
      type: array
      items:
        type: string
      title: 'Тип массива: string[]'
      description: |-
        @extends AbstractTypedArray<string>
        @method string[] getValues()
        @method string current()
    ResponseSuccess:
      type: object
      properties:
        errors:
          title: |-
            Результат ответа API метода

            Тип результата зависит от типа запроса и его настроек
          nullable: true
          type: 'null'
        messages:
          title: Список сообщений, полученных при выполнении запроса
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.StringArray'
      required: []
      title: Результат успешного API запроса
    stdClass:
      type: object
      properties: {}
      required: []
    Error:
      type: object
      properties:
        code:
          title: |-
            Код ошибки

            Код ошибки 0 - deprecated
          type: integer
        string:
          title: Описание ошибки
          type: string
        detail:
          title: Объект с дополнительной информацией
          allOf:
            - $ref: '#/components/schemas/stdClass'
      required:
        - code
        - string
        - detail
      title: Информация об ошибке
    Errors:
      type: array
      items:
        $ref: '#/components/schemas/Error'
      title: Список ошибок
    ResponseError:
      type: object
      properties:
        result:
          title: При ошибке результат отсутствует
          nullable: true
          type: 'null'
        errors:
          title: Список ошибок, полученных при выполнении запроса
          description: '@requires'
          allOf:
            - $ref: '#/components/schemas/Errors'
        messages:
          title: Список сообщений, полученных при выполнении запроса
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.StringArray'
      required:
        - errors
      title: Результат API запроса с ошибкой
    Annotations_2.Types.ServiceName:
      type: string
      enum:
        - positions
        - audit
        - watcher
        - indexing
    Annotations_2.Methods.Add:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        service:
          title: Имя сервиса
          allOf:
            - $ref: '#/components/schemas/Annotations_2.Types.ServiceName'
        target_id:
          title: Идентификатор отчета в сервисе
          type: string
        text:
          title: Комментарий, если не указан, комментарий добавлен не будет
          type: string
      required:
        - project_id
        - service
        - target_id
      title: Добавление примечания
    Annotations_2.Methods.Add.Exec:
      nullable: true
      type: integer
    Annotations_2.Methods.Del:
      type: object
      properties:
        id:
          title: ID примечания
          type: integer
        project_id:
          title: ID проекта
          type: integer
        service:
          title: Имя сервиса
          allOf:
            - $ref: '#/components/schemas/Annotations_2.Types.ServiceName'
      required:
        - id
        - project_id
        - service
      title: Удаление примечания
    Annotations_2.Methods.Del.Exec:
      nullable: true
      type: integer
    Annotations_2.Methods.Edit:
      type: object
      properties:
        id:
          title: ID примечания
          type: integer
        project_id:
          title: ID проекта
          type: integer
        service:
          title: Имя сервиса
          allOf:
            - $ref: '#/components/schemas/Annotations_2.Types.ServiceName'
        text:
          title: |-
            Текст комментария

            Если не текст указан, комментарий будет удален
          type: string
      required:
        - id
        - project_id
        - service
      title: Редактирование примечания
    Annotations_2.Methods.Edit.Exec:
      nullable: true
      type: integer
    fields:
      title: |-
        Список полей объекта, которые надо вернуть в результате

        Если запрос поддерижвает параметр fetch_style, формат ответа может быть разным, fields будет влиять на содержание данных в этом ответе

        Использует поля модели
      description: '@see AbstractMethod::MODEL'
      type: array
    orders:
      title: |-
        Список полей объекта, по которым необходимо выполнить сортировку

        Поля могут быть строками или объектом: {name: string, direction: 'ASC' | 'DESC', orderValues: array}

        Использует поля модели
      description: '@see AbstractMethod::MODEL'
      type: array
    filters:
      title: |-
        Список фильтров по полям объекта

        {name: string, operator: Field::AVAILABLE_OPERATORS, values: array}

        Использует поля модели

        Поля обязатлеьное, если $id не указан
      description: |-
        @see AbstractMethod::MODEL
        @see Field::AVAILABLE_OPERATORS
      type: array
    id:
      title: |-
        Id объекта, для фильтрации объектов по id

        Только для моделей с полем id
      nullable: true
      type: integer
    limit:
      title: |-
        Количество объектов, которые необходимо получить в результате

        Используется в паре с offset
      nullable: true
      type: integer
    offset:
      title: |-
        Число объектов, которое необходимо пропустить при получении резальтата

        Используется в паре с limit
      type: integer
    fetch_style:
      title: |-
        Определяет формат результата: коллекция, объект, значение

        Примеры:
        - fetchAll - получить коллекцию объектов
        - fetch - получить один объект
        - fetchColumn - получить свойсвто объекта
      description: |-
        @see Selector::AVAILABLE_FETCH_STYLES
        @see Selector::execFetch() - см. реализацию
      nullable: true
      type: string
    Annotations_2.Methods.Get:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        service:
          title: Имя сервиса
          allOf:
            - $ref: '#/components/schemas/Annotations_2.Types.ServiceName'
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - project_id
        - service
        - fields
        - orders
        - filters
        - offset
      title: Получение примечаний
    Annotations_2.Methods.Get.Exec:
      nullable: true
      type: array
    Pagination:
      type: object
      properties:
        nextOffset:
          title: |-
            Смещение для получения следующий порции данных

            Вернется только в случае существования следующей порции
          nullable: true
          type: integer
        total:
          title: Общее число результатов, без учета применения пагинации
          nullable: true
          type: integer
      required: []
      title: Результаты пагинации
    Models.Annotations:
      properties:
        id: {}
        user_id:
          nullable: true
        project_id:
          nullable: true
        service:
          nullable: true
        target_id:
          nullable: true
        text:
          nullable: true
        create_time:
          nullable: true
    App_2.Methods.Get:
      type: object
      properties: {}
      required: []
      title: Получение заархивированного приложения
    TV.API.Types.Topvisor.Subdomain:
      type: string
      enum:
        - ''
        - journal
    Comments_2.Methods.Add:
      type: object
      properties:
        subdomain:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Topvisor.Subdomain'
        text:
          title: Текст комментария
          type: string
        page_url:
          title: Адрес страницы (нельзя указывать совместно с reply_id)
          nullable: true
          type: string
        reply_id:
          title: Привязать к комментарию с id = reply_id  (нельзя указывать совместно с page_url)
          nullable: true
          type: integer
      required:
        - text
      title: Добавление комментария
    Comments_2.Methods.Add.Exec:
      title: Id вставленного комментария
      nullable: true
      type: integer
    Comments_2.Methods.Del:
      type: object
      properties:
        id:
          title: ID комментария
          type: integer
      required:
        - id
      title: |-
        Удаление комментария

        Удалять комментарии можно только в течение ограниченного времени

        Админы могут удалять комментарии в любое время
    Comments_2.Methods.Del.Exec:
      nullable: true
      type: integer
    Comments_2.Methods.Edit:
      type: object
      properties:
        id:
          title: ID комментария
          type: integer
        text:
          title: Текст комментария, не может быть пустой строкой
          type: string
      required:
        - id
        - text
      title: |-
        Изменение комментария

        Изменять комментарий можно только в течение ограниченного времени
    Comments_2.Methods.Edit.Exec:
      nullable: true
      type: integer
    Comments_2.Methods.Get:
      type: object
      properties:
        subdomain:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Topvisor.Subdomain'
        page_url:
          title: Адрес страницы (нельзя указывать совместно с reply_id)
          nullable: true
          type: string
        reply_id:
          title: Получить ответы на комменатрий с id = reply_id (нельзя указывать совместно с page_url)
          nullable: true
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: |-
        Получение комментариев

        Возвращает набор комментариев со всеми подкомменатриями, limit, offset не виляют на получение вложенных комментариев
    Comments_2.Methods.Get.Exec:
      type: array
    Models.Comments:
      properties:
        id: {}
        site:
          nullable: true
        subdomain:
          nullable: true
        page_url:
          nullable: true
        reply_id:
          nullable: true
        user_id:
          nullable: true
        time:
          nullable: true
        text:
          nullable: true
        count_likes:
          nullable: true
        status:
          nullable: true
        user_name:
          nullable: true
        user_avatar:
          nullable: true
        author_alias:
          nullable: true
        author_count_pages:
          nullable: true
        like:
          nullable: true
        page_title:
          nullable: true
    Content_2.Types.Subdomain:
      type: string
      enum:
        - ''
        - journal
    TV.API.Types.Lang:
      type: string
      enum:
        - ru
        - en
    Content_2.Methods.Get:
      type: object
      properties:
        subdomain:
          title: Поддомен страницы
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Subdomain'
        url:
          title: Url страницы
          type: string
        lang:
          title: Язык страницы
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Lang'
        render_tpl:
          title: Выполнить исполнение шаблона
          default: true
          type: boolean
      required:
        - subdomain
        - url
        - lang
      title: Получить полные данные об одной странице
    Content_2.Methods.Get.Exec:
      title: |-
        Возможные парамеры $config:

        Общие:
           - user_id
           - create
           - title
           - description
           - html
           - menu_name
           - order
           - image
           - og_title
           - og_description
           - og_image
           - array tags
           - enum(ACTIVE,DEV,DEFER,DEL) state, если установлен DEV - статья не будет отображаться в меню и поиске на сайте

        Для справки:
           - apiFullMethodName
           - apiRequestParams - массив

        Для журнала:
           - count_views
           - count_unique_views
           - count_likes
      type: array
    Mentions_2.Methods.Get:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - project_id
        - fields
        - orders
        - filters
        - offset
      title: Получение списка упоминаний
    Mentions_2.Methods.Get.Exec:
      type: array
    Models.Mentions.Mentions:
      properties:
        id: {}
        project_id:
          nullable: true
        rule_id:
          nullable: true
        searcher_key:
          nullable: true
        post_user_id:
          nullable: true
        post_id:
          nullable: true
        name:
          nullable: true
        avatar:
          nullable: true
        date:
          nullable: true
        text:
          nullable: true
        sentiment:
          nullable: true
        readed:
          nullable: true
        time_parse:
          nullable: true
        need_send_report:
          nullable: true
    Payments_2.Types.System:
      type: string
      enum:
        - balance
        - card
        - card_ios
        - card_android
        - card_ap
        - card_gp
        - invoice
        - tinkoff_business
        - ap
        - ym
        - qw
        - sb
        - wm2
        - pp
        - pd
        - pd_invoice
        - rk
        - pt
        - lp
        - ppg
        - pr
    Payments_2.Types.Country:
      type: string
      enum:
        - RU
        - UA
        - BY
        - KZ
        - other
    Bank_2.Types.Subscriptions.Cycle:
      type: integer
      enum:
        - 1
        - 12
      title: |-
        Цикл подписки в месяцах

        Оплата происходит сразу за весь период цикла

        Если подписка не отменена в течение идущего цикла, то после его завершения она будет автоматически продляться путем повторения платежа

        Все лимиты, выданные по подписке обновляются без учета этого цикла подписки
    TV.API.Types.Email:
      type: string
      title: E-mail
      example: name@example.com
    Payments_2.Methods.Add:
      type: object
      properties:
        system:
          title: Платежная система
          allOf:
            - $ref: '#/components/schemas/Payments_2.Types.System'
        sum:
          title: Сумма платежа
          type: number
        country:
          title: Страна реквизитов
          allOf:
            - $ref: '#/components/schemas/Payments_2.Types.Country'
        requisites_id:
          title: Номер договора/оферты для платежа
          type: string
        tariff_id:
          title: |-
            ID тарифа

            Если указан, сумма будет переопределена

            Нельзя использовать вместе с `subscription_plan_id`
          type: integer
        tariff_count_month:
          title: |-
            Число предоплаченных месяцев по тарифу

            Примеры:
            - при оплате тарифа на 1 месяц должен быть равен 1
            - при оплате тарифа на 2 месяца должен быть равен 2
          type: integer
        subscription_plan_id:
          title: |-
            ID плана подписки

            Если указан, сумма будет переопределена

            Нельзя использовать вместе с `tariff_id` и `items`
          description: '@see \Services\Bank_2\Objects\Subscriptions\Plan'
          nullable: true
          type: string
        subscription_cycle:
          title: Период цикла подписки
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Bank_2.Types.Subscriptions.Cycle'
        comment:
          title: Комментарий
          type: string
        items:
          title: Элементы платежа
          type: array
        card_id:
          title: ID карты в системе оплаты для привязки
          type: string
        payment_data:
          title: Пробрасываемые данные в redirectToPay() для FinishAuthorize Tinkoff для Apple Pay и Google Pay
          type: string
        email:
          title: Email (указывается, если у пользователя не привязан email)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Email'
        phone:
          title: Телефон (указывается для определенных систем оплаты)
          type: string
        is_cancelable:
          title: Флаг - отменяемый платеж, используется для сохранения данных банковской карты пользователя, сумма платежа вернется пользователю после отмены
          type: boolean
        return_id:
          title: Возвратить id платежа, не выполняя redirectToPay()
          type: boolean
      required:
        - system
        - sum
        - country
      title: |-
        Создание платежки и переход к оплате

        Возвращает id платежа, если указан параметр $return_id = true

        Производит редирект, если настроена форма оплаты на стороне платежной системы

        Возвращает информацию о платеже, если ожидается вывод формы оплаты на сайте

        При ошибке производит редирект на страницу с информацией об ошибке
    Payments_2.Methods.Add.Exec:
      nullable: true
    Payments_2.Methods.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение списка платежей
    Payments_2.Methods.Get.Exec:
      nullable: true
    Models.Payments:
      properties:
        COUNT(*):
          nullable: true
        HAS_DOC():
          nullable: true
        id: {}
        external_id:
          nullable: true
        user_id:
          nullable: true
        system:
          nullable: true
        requisites_id:
          nullable: true
        data:
          nullable: true
        items:
          nullable: true
        sum:
          nullable: true
        currency:
          nullable: true
        status:
          nullable: true
        recurrent_type:
          nullable: true
        tariff_id:
          nullable: true
        tariff_count_month:
          nullable: true
        subscription_plan_id:
          nullable: true
        subscription_cycle:
          nullable: true
        date:
          nullable: true
        date_month:
          nullable: true
        date_finished:
          nullable: true
        date_month_finished:
          nullable: true
        fromBase64Data:
          nullable: true
    Qr_2.Types.TplN:
      type: integer
      enum:
        - 0
        - 1
        - 2
    Qr_2.Methods.Get:
      type: object
      properties:
        text:
          title: Кодируемый текст
          type: string
        tpl_n:
          title: |-
            Кодируемый текст

            - 0 - черно-белый
            - 1 - шашечки
            - 2 - группы с закруглениями
          allOf:
            - $ref: '#/components/schemas/Qr_2.Types.TplN'
        use_brand:
          title: Использовать ли брендированное лого
          type: boolean
        use_logo_colors:
          title: Использовать ли цвета из лого
          type: boolean
        color:
          title: Использовать указанный цвет, цвет задается массивом из 3 элементов [r, g, b]
          nullable: true
          type: array
        point_size:
          title: Размер точек QR кода в пикселях
          default: 4
          type: integer
      required:
        - text
      title: |-
        Генерация QR кода по тексту

        Возвращает изображение в формате data:image/png;base64
    Qr_2.Methods.Get.Exec:
      nullable: true
      type: string
    Quiz_2.Types.Quiz.Status:
      type: string
      enum:
        - DEV
        - ACTIVE
        - DELETED
      title: Статус квиза
    Quiz_2.Methods.Add:
      type: object
      properties:
        name:
          title: Имя теста
          type: string
        text:
          title: Описание теста
          nullable: true
          type: string
        status:
          title: Статус теста
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Quiz_2.Types.Quiz.Status'
      required:
        - name
      title: Добавление теста
    Quiz_2.Methods.Add.Exec:
      nullable: true
      type: string
    Quiz_2.Methods.Edit:
      type: object
      properties:
        quiz_id:
          title: ID теста
          type: string
        name:
          title: Имя теста
          nullable: true
          type: string
        text:
          title: Описание теста
          nullable: true
          type: string
        status:
          title: Статус теста
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Quiz_2.Types.Quiz.Status'
        min_score:
          title: Минимальное число очков
          nullable: true
          type: integer
        available_reset_second:
          title: Число секунд, через которое тест можно перепройти, 0 - тест перепройти нельзя
          nullable: true
          type: integer
      required:
        - quiz_id
      title: Редактирование теста
    Quiz_2.Methods.Edit.Exec:
      nullable: true
      type: integer
    Quiz_2.Methods.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение тестов
    Quiz_2.Methods.Get.Exec:
      nullable: true
    Models.Quizes:
      properties:
        AVAILABLE_RESET():
          nullable: true
        id: {}
        user_id:
          nullable: true
        name:
          nullable: true
        text:
          nullable: true
        count_questions:
          nullable: true
        total_score:
          nullable: true
        min_score:
          nullable: true
        available_reset_second:
          nullable: true
        status:
          nullable: true
        count_questions_is_passed:
          nullable: true
        score:
          nullable: true
        is_passed:
          nullable: true
        update:
          nullable: true
        is_finished:
          nullable: true
        is_passed_earlier:
          nullable: true
    Recurring_2.Types.System:
      type: string
      enum:
        - card
        - invoice
      title: Платежная система рекуррентного платежа
    Recurring_2.Types.Type:
      type: string
      enum:
        - refill
      title: Тип рекуррентного платежа
    TV.API.Types.Url:
      type: string
      title: |-
        Краткий URL в punycode, не может содержать UTF-символы:
        - без схемы
        - без "www." в домене
        - без слешей на конце
        - без "<" и ">"

        Будет проивзедено автоматическое приведение к формату

        Разрешен ввод пустой строки, для удаления значения url
    Recurring_2.Methods.Edit:
      type: object
      properties:
        system:
          allOf:
            - $ref: '#/components/schemas/Recurring_2.Types.System'
        type:
          allOf:
            - $ref: '#/components/schemas/Recurring_2.Types.Type'
        min_sum:
          title: Сумма, при достижении которой произойдет автоплатеж
          nullable: true
          type: integer
        refill_sum:
          title: Cумма автоплатежа
          nullable: true
          type: integer
        target:
          title: Объект доменного платежа (в случае domainRenew - домен)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Url'
        cardId:
          title: Id карты в системе Тинькофф
          nullable: true
          type: integer
      required:
        - system
        - type
      title: Настройка рекуррентного платежа
    Recurring_2.Methods.Edit.Exec:
      type: integer
    Schedule_2.Methods.AbstractRegular:
      type: object
      properties:
        type:
          title: Тип расписания
          description: '@see Schedule_2\Mods\Schedule::$availableTypes'
          type: string
        target_id:
          title: Id объекта, к которому будет привязано расписание
          type: integer
        target_id_2:
          title: Id второго объекта, к которому будет привязано расписание (для mentions)
          nullable: true
          type: integer
      required:
        - type
        - target_id
    Schedule_2.Methods.AbstractRegular.Exec:
      title: |-
        Непосредственный вызов API функции

        Запрещено делать публичной, это приведет к поломке preCall()

        В описании к функции отвечать на вопрос: `Что является результатом запроса?` Например: `Список пользователей`

        Не менять `protected`, проверка проводится при генерации схем в `TV\API\Objects\ClassAPIMethodInfo`
      nullable: true
    Schedule_2.Methods.Del:
      type: object
      properties:
        type:
          title: Тип расписания
          description: '@see Schedule_2\Mods\Schedule::$availableTypes'
          type: string
        target_id:
          title: Id объекта, к которому будет привязано расписание
          type: integer
        target_id_2:
          title: Id второго объекта, к которому будет привязано расписание (для mentions)
          nullable: true
          type: integer
      required:
        - type
        - target_id
    Schedule_2.Methods.Del.Exec:
      nullable: true
      type: integer
    Schedule_2.Methods.Edit:
      type: object
      properties:
        schedule:
          title: |-
            Каждый элемент содержит:
            - times: Массив времени, где каждый элемент — ассоциативный массив с ключами:
            - - hour: Час из перечисления доступных часов (см. $availableHours)
            - - minute: Минута из перечисления доступных минут (см. $availableMinutes)
            - days: Массив дней из перечисления доступных дней (см. $availableDays)
          description: |-
            @var array<int, array{times: array<int, array{hour: string, minute: string}>, days: string[]}> $schedule Массив расписания, содержащий элементы с данными о времени и днях.
            @see Schedule_2\Mods\Schedule::$availableHours
            @see Schedule_2\Mods\Schedule::$availableMinutes
            @see Schedule_2\Mods\Schedule::$availableDays
          type: array
        type:
          title: Тип расписания
          description: '@see Schedule_2\Mods\Schedule::$availableTypes'
          type: string
        target_id:
          title: Id объекта, к которому будет привязано расписание
          type: integer
        target_id_2:
          title: Id второго объекта, к которому будет привязано расписание (для mentions)
          nullable: true
          type: integer
      required:
        - schedule
        - type
        - target_id
      title: Привязать расписание к объекту
    Schedule_2.Methods.Edit.Exec:
      nullable: true
      type: integer
    Schedule_2.Methods.Get:
      type: object
      properties:
        type:
          title: Тип расписания
          description: '@see Schedule_2\Mods\Schedule::$availableTypes'
          type: string
        target_id:
          title: Id объекта, для которого требуется получить расписание
          type: integer
        target_id_2:
          title: Id второго объекта, для которого требуется получить расписание (обзятельно для mentions)
          nullable: true
          type: integer
      required:
        - type
        - target_id
      title: Получение рассписания
    Schedule_2.Methods.Get.Exec:
      type: array
    Tags_2.Types.Type:
      type: string
      enum:
        - tickets
        - projects
        - keywords
        - snippets
        - shortLinks
        - urls
      title: Тип тега, к каким объектам применяется
    Tags_2.Methods.Edit:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Tags_2.Types.Type'
        tags:
          title: |-
            Список тегов в формате:
            <code>
            {
               id:id,
               name:name,
               color_id:color_id
            }
            </code>
          type: array
        project_id:
          nullable: true
          type: integer
      required:
        - type
        - tags
      title: Сохранение списка тегов
    Tags_2.Methods.Edit.Exec:
      nullable: true
    Tags_2.Methods.Get:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Tags_2.Types.Type'
        project_id:
          nullable: true
          type: integer
      required:
        - type
      title: Получение списка тегов
    Tags_2.Methods.Get.Exec:
      nullable: true
      type: array
    Templates_2.Types.TargetType:
      type: string
      enum:
        - templates
        - groups
        - keywords
        - competitors_keywords
        - competitors_wordstat
      title: Тип данных (место использования)
    Templates_2.Methods.Add:
      type: object
      properties:
        target_type:
          allOf:
            - $ref: '#/components/schemas/Templates_2.Types.TargetType'
        name:
          title: Название шаблона
          type: string
        target_subtype:
          title: Подтип данных (место использования)
          type: integer
        is_default:
          title: Является ли шаблоном по умолчанию
          nullable: true
          type: boolean
        ord:
          title: Использовать ли сортировку
          nullable: true
          type: boolean
        fields:
          title: Поля шаблона
          type: array
        properties:
          title: Свойства шаблона
          type: array
      required:
        - target_type
        - name
      title: Сохранение шаблона
    Templates_2.Methods.Add.Exec:
      nullable: true
      type: integer
    Templates_2.Methods.Del:
      type: object
      properties:
        id:
          title: Id шаблона
          type: integer
      required:
        - id
      title: Удаление шаблона
    Templates_2.Methods.Del.Exec:
      nullable: true
      type: integer
    Templates_2.Methods.Edit:
      type: object
      properties:
        id:
          title: Id шаблона
          type: integer
        name:
          title: Название шаблона
          nullable: true
          type: string
        is_default:
          title: Является ли шаблоном по умолчанию
          nullable: true
          type: boolean
        ord:
          title: Использовать ли сортировку
          nullable: true
          type: boolean
        fields:
          title: Поля шаблона
          type: array
        properties:
          title: Свойства шаблона
          type: array
      required:
        - id
      title: Изменение шаблона
    Templates_2.Methods.Edit.Exec:
      type: integer
    Templates_2.Methods.Get:
      type: object
      properties:
        target_type:
          allOf:
            - $ref: '#/components/schemas/Templates_2.Types.TargetType'
        target_subtype:
          title: Подтип данных (место использования)
          type: integer
        include_fields:
          title: Включать ли поля
          default: true
          type: boolean
      required:
        - target_type
      title: Получение сохраненного списка шаблонов
    Templates_2.Methods.Get.Exec:
      type: array
    Tpvsr_2.Types.Tag:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
      title: Тэг для установки
    Tpvsr_2.Types.Tags:
      type: array
      items:
        $ref: '#/components/schemas/Tpvsr_2.Types.Tag'
      title: Тэги для установки
      description: '@see Tag'
    Tpvsr_2.Methods.Add:
      type: object
      properties:
        link:
          title: Ссылка
          type: string
        title:
          title: Название ссылки
          nullable: true
          type: string
        add_secret:
          title: Добавить секретную строку
          type: boolean
        tags:
          title: Тэги ссылки
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Tpvsr_2.Types.Tags'
        fields:
          title: Поля, которые нужно получить
          nullable: true
          type: array
      required:
        - link
      title: Добавление ссылки
    Tpvsr_2.Methods.Add.Exec:
      nullable: true
    Tpvsr_2.Methods.Edit:
      type: object
      properties:
        favorite:
          title: Избранная ссылка
          nullable: true
          type: boolean
        deleted:
          title: Удаленная ссылка
          nullable: true
          type: boolean
        title:
          title: Заголовок ссылки
          nullable: true
          type: string
        hash:
          title: Хэш ссылки
          nullable: true
          type: string
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Редактирование ссылки
    Tpvsr_2.Methods.Edit.Exec:
      nullable: true
      type: integer
    Models.ShortLink:
      properties:
        COUNT(*):
          nullable: true
        GEN_SEARCH_STRING():
          nullable: true
        short_link:
          nullable: true
        link:
          nullable: true
        user_id:
          nullable: true
        create:
          nullable: true
        title:
          nullable: true
        favorite:
          nullable: true
        deleted:
          nullable: true
        hash:
          nullable: true
        count:
          nullable: true
        secret:
          nullable: true
        ban:
          nullable: true
        tags:
          nullable: true
    Tpvsr_2.Methods.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение списка ссылок пользователя
    Tpvsr_2.Methods.Get.Exec:
      type: array
    Urls_2.Types.Flag:
      type: integer
      enum:
        - -1
        - 0
        - 1
        - 2
      title: Флаг активности
    Tags_2.Types.TagId:
      type: string
      enum:
        - '1'
        - '2'
        - '3'
        - '4'
        - '5'
        - '6'
        - '7'
        - '8'
        - '9'
        - '10'
        - '11'
        - '12'
        - '13'
        - '14'
        - '15'
        - '16'
        - '17'
        - '18'
        - '19'
        - '20'
      title: Id тега
    Tags_2.Types.TagsIds:
      type: array
      items:
        $ref: '#/components/schemas/Tags_2.Types.TagId'
      title: |-
        Список id тегов

        Тип массива: TagId[]
      description: '@see TagId'
    project_id:
      title: ID проекта
      type: integer
    Urls_2.Methods.Add:
      type: object
      properties:
        url:
          title: URL соответствующий домену проекта
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Url'
        sitemap:
          title: |-
            Флаг активности в карте сайта
            - 1 - присутствовал в прошлых версиях карты сайта
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        audit:
          title: Флаг активности в аудите
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        indexing:
          title: Флаг активности в радаре
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        watcher:
          title: Флаг активности в индексации
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        tags:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Tags_2.Types.TagsIds'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - url
        - project_id
      title: Добавление url
    Urls_2.Methods.Add.Exec:
      nullable: true
      type: integer
    Models.Urls:
      properties:
        COUNT(*):
          nullable: true
        WATCHER_HTTP_CODES_HUNDREDS():
          type: array
          nullable: true
          example:
            need set qualifiers:
              - check_id
        id:
          type: integer
        url:
          type: string
          nullable: true
        project_id:
          type: integer
          nullable: true
        sitemap:
          nullable: true
        audit:
          nullable: true
        watcher:
          nullable: true
        indexing:
          nullable: true
        tags:
          nullable: true
        sitemap_lastmod:
          nullable: true
        sitemap_changefreq:
          nullable: true
        sitemap_priority:
          nullable: true
        indexing_data:
          type: integer
          nullable: true
          example:
            need set qualifiers:
              - date
              - searcher_key
        indexing_alert:
          type: integer
          nullable: true
          example:
            need set qualifiers:
              - date
              - searcher_key
        watcher_http_codes:
          type: array
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_http_codes_changed:
          type: integer
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_redirects:
          type: array
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_h1:
          type: string
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_h1_changed:
          type: integer
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_title:
          type: string
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_title_changed:
          type: integer
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_description:
          type: string
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_description_changed:
          type: integer
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_content:
          type: string
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_content_changed:
          type: integer
          nullable: true
          example:
            need set qualifiers:
              - check_id
    Urls_2.Methods.Edit:
      type: object
      properties:
        sitemap:
          title: |-
            Флаг активности в карте сайта
            - 1 - присутствовал в прошлых версиях карты сайта
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        audit:
          title: Флаг активности в аудите
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        indexing:
          title: Флаг активности в радаре
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        watcher:
          title: Флаг активности в индексации
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - filters
        - project_id
      title: Изменение urls
    Urls_2.Methods.Edit.Exec:
      nullable: true
      type: integer
    Urls_2.Methods.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - fields
        - orders
        - filters
        - offset
        - project_id
      title: Получение списка urls проекта
    Urls_2.Methods.Get.Exec:
      title: Список urls проекта
      nullable: true
    Votes_2.Types.Rate:
      type: string
      enum:
        - '1'
        - '2'
        - '3'
        - '4'
        - '5'
      title: Оценка отзыва
    Votes_2.Methods.Add:
      type: object
      properties:
        subdomain:
          title: Поддомен с которого оставлен отзыв
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Topvisor.Subdomain'
        url:
          title: Url (путь) с которого оставлен отзыв
          type: string
        comment:
          title: Комментарий
          type: string
        rate:
          title: Оценка
          allOf:
            - $ref: '#/components/schemas/Votes_2.Types.Rate'
      required:
        - url
        - rate
      title: Оставление отзыва
    Votes_2.Methods.Add.Exec:
      nullable: true
      type: integer
    Models.Votes:
      properties:
        id: {}
        site:
          nullable: true
        subdomain:
          nullable: true
        url:
          nullable: true
        user_id:
          nullable: true
        rate:
          nullable: true
        created_time:
          nullable: true
        comment:
          nullable: true
        is_viewed:
          nullable: true
    Votes_2.Methods.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение своих отзывов
    Votes_2.Methods.Get.Exec:
      nullable: true
      type: array
    Webscreens_2.Methods.Get:
      type: object
      properties:
        url:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Url'
        w:
          title: Ширина экрна
          type: integer
        h:
          title: Высота экрна
          type: integer
        timeout_ms:
          title: Таймаут, от 1 до 30000
          default: 1500
          type: integer
        full_page:
          title: |-
            Сделать ли полноразмерный скриншот страницы

            Параметры clip и full_page нельзя использовать одновременно
          type: boolean
        lang:
          title: Язык браузера, например ru, по умолчанию язык пользователя
          nullable: true
          type: string
        clip_w:
          title: |-
            Ширины фрагмента

            Параметры clip и full_page нельзя использовать одновременно
          nullable: true
          type: integer
        clip_h:
          title: |-
            Высота фрашгмента

            Параметры clip и full_page нельзя использовать одновременно
          nullable: true
          type: integer
        clip_x:
          title: |-
            Координата x фрагмента

            Параметры clip и full_page нельзя использовать одновременно
          nullable: true
          type: integer
        clip_y:
          title: |-
            Координата y фрагмента

            Параметры clip и full_page нельзя использовать одновременно
          nullable: true
          type: integer
      required:
        - url
        - w
        - h
      title: Получение скриншота (платная функция)
    Admin_2.Methods.Actions.AbstractRegular:
      type: object
      properties:
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - test
    Admin_2.Methods.Actions.AbstractRegular.Exec:
      title: |-
        Непосредственный вызов API функции

        Запрещено делать публичной, это приведет к поломке preCall()

        В описании к функции отвечать на вопрос: `Что является результатом запроса?` Например: `Список пользователей`

        Не менять `protected`, проверка проводится при генерации схем в `TV\API\Objects\ClassAPIMethodInfo`
      nullable: true
    Admin_2.Methods.Ghost.Get:
      type: object
      properties:
        user_search:
          title: UserId, email или ИНН пользователя (параметр взаимоисключающий с project_id)
          nullable: true
          type: string
        redirect_to:
          title: UserId, email или ИНН пользователя в аккаунт которого входим
          nullable: true
          type: string
        project_id:
          title: ID проекта пользователя (параметр взаимоисключающий с user_search)
          nullable: true
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение доступа к акаунту пользователя в режиме "призрак"
    Admin_2.Methods.I18n.Get:
      type: object
      properties:
        lang:
          title: Язык словаря
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Lang'
        category:
          title: Категория словаря
          nullable: true
          type: string
        search:
          title: Поиск по словарю
          nullable: true
          type: string
        only_duplicates:
          type: boolean
      required: []
      title: Получение записей словаря
    Admin_2.Methods.I18n.Get.Exec:
      type: object
      properties:
        lang:
          type: string
        category:
          type: string
        name:
          type: string
        value:
          type: string
      required:
        - lang
        - category
        - name
        - value
    TV.API.Types.IntArray:
      type: array
      items:
        type: integer
      title: |-
        Тип массива: int

        Принимает: Любые целые числа и числа в строках
      description: |-
        @extends AbstractTypedArray<int>
        @method int[] getValues()
        @method int current()
    Admin_2.Methods.Informer.Add:
      type: object
      properties:
        type:
          title: |-
            Тип рассылки

            - me
            - admin
            - news
            - api
          type: string
        send_in:
          title: |-
            Канал рассылки

            - all
            - email
            - informer
          type: string
        lang:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Lang'
        subject:
          title: Объект отправки
          type: string
        preview_text:
          title: Текст превью для письма
          nullable: true
          type: string
        message:
          title: |-
            Текст письма
            Обязательно для email
          nullable: true
          type: string
        message_informer:
          title: |-
            Текст письма
            Обязательно для informer
          nullable: true
          type: string
        link:
          title: Ссылка
          nullable: true
          type: string
        link_text:
          title: Текст для добавляемой ссылки для E-mail
          nullable: true
          type: string
        users_ids:
          title: Ограничение рассылки по id пользоваталей
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        only_ur:
          title: Ограничение рассылки по пользоваталям с договорами
          nullable: true
          type: boolean
        debug:
          title: Отладка email
          nullable: true
          type: boolean
      required:
        - type
        - send_in
        - lang
        - subject
    Admin_2.Methods.Informer.Add.Exec:
      type: array
    Admin_2.Methods.Logs.Edit:
      type: object
      properties:
        log_file:
          title: Файл лога
          type: string
        log_text:
          title: Текст
          type: string
      required:
        - log_file
        - log_text
      title: Сохранение текстового файла лога
    Admin_2.Methods.Logs.Edit.Exec:
      nullable: true
      type: integer
    Admin_2.Methods.Logs.Get:
      type: object
      properties:
        log_file:
          title: Файл лога
          type: string
      required:
        - log_file
      title: Загрузка текстового файла лога
    Admin_2.Methods.Logs.Get.Exec:
      type: string
    Admin_2.Methods.Ranks.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
    Admin_2.Methods.Ranks.Get.Exec:
      nullable: true
      type: array
    Models.Analytics.Ranks:
      properties:
        ACTIVATIONS():
          nullable: true
        id: {}
        name_ru:
          nullable: true
        name_en:
          nullable: true
        bonus_RUB:
          nullable: true
        bonus_USD:
          nullable: true
        to_date:
          nullable: true
        limit:
          nullable: true
        site:
          nullable: true
        code:
          nullable: true
        retention_week:
          nullable: true
        retention_month:
          nullable: true
        payment_week:
          nullable: true
        payment_month:
          nullable: true
        payment_month_6:
          nullable: true
        payment_year:
          nullable: true
        new_user:
          nullable: true
        returned_user:
          nullable: true
        quitted_user:
          nullable: true
    Admin_2.Types.Staff.Post:
      type: string
      enum:
        - DEVELOPER
        - SUPPORT
        - GHOST
        - CONTENT
        - DOCUMENTATION
        - HR
        - ACCOUNTING
      title: Возможное право доступа
    Admin_2.Types.Staff.Posts:
      type: array
      items:
        $ref: '#/components/schemas/Admin_2.Types.Staff.Post'
      title: Возможные права доступа
      description: '@see Post'
    Admin_2.Methods.Staff.Add:
      type: object
      properties:
        id:
          title: Номер договора
          type: integer
        email:
          title: Корпоративный e-mail
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Email'
        staff_email:
          title: Личный e-mail
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Email'
        post:
          title: Должность
          type: string
        surname:
          title: Фамилия
          type: string
        name:
          title: Имя
          type: string
        patronymic:
          title: Отчество
          type: string
        post_2:
          title: Должность (родительный падеж)
          type: string
        surname_2:
          title: Фамилия (родительный падеж)
          type: string
        name_2:
          title: Имя (родительный падеж)
          type: string
        patronymic_2:
          title: Отчество (родительный падеж)
          type: string
        department:
          title: Название отдела
          type: string
        posts:
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Staff.Posts'
      required:
        - id
        - email
        - staff_email
        - post
        - surname
        - name
        - patronymic
        - post_2
        - surname_2
        - name_2
        - patronymic_2
        - department
        - posts
      title: Добавление сотрудника
    Admin_2.Methods.Staff.Add.Exec:
      nullable: true
      type: integer
    Admin_2.Methods.Staff.Edit:
      type: object
      properties:
        id:
          title: Номер договора
          type: integer
        email:
          title: Корпоративный e-mail
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Email'
        staff_email:
          title: Личный e-mail
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Email'
        post:
          title: Должность
          type: string
        surname:
          title: Фамилия
          type: string
        name:
          title: Имя
          type: string
        patronymic:
          title: Отчество
          type: string
        post_2:
          title: Должность (родительный падеж)
          type: string
        surname_2:
          title: Фамилия (родительный падеж)
          type: string
        name_2:
          title: Имя (родительный падеж)
          type: string
        patronymic_2:
          title: Отчество (родительный падеж)
          type: string
        department:
          title: Название отдела
          type: string
        posts:
          title: Привелегии
          type: array
        group:
          title: Группа
          nullable: true
          type: integer
      required:
        - id
        - email
        - staff_email
        - post
        - surname
        - name
        - patronymic
        - post_2
        - surname_2
        - name_2
        - patronymic_2
        - department
        - posts
    Admin_2.Methods.Staff.Edit.Exec:
      nullable: true
      type: integer
    Admin_2.Methods.Staff.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение персонала, объект admin_staff
    Admin_2.Methods.Staff.Get.Exec:
      nullable: true
    Models.Admin.Staff:
      properties:
        VACATIONS():
          nullable: true
        id: {}
        site:
          nullable: true
        name:
          nullable: true
        lang:
          nullable: true
        timezone:
          nullable: true
        dateformat:
          nullable: true
        date_reg:
          nullable: true
        group:
          nullable: true
        phone:
          nullable: true
        email:
          nullable: true
        avatar:
          nullable: true
        staff_id:
          nullable: true
        staff_email:
          nullable: true
        staff_department:
          nullable: true
        staff_posts:
          type: array
          nullable: true
        staff_post:
          nullable: true
        staff_name:
          nullable: true
        staff_surname:
          nullable: true
        staff_patronymic:
          nullable: true
        staff_post_2:
          nullable: true
        staff_name_2:
          nullable: true
        staff_surname_2:
          nullable: true
        staff_patronymic_2:
          nullable: true
        staff_access:
          nullable: true
    TV.API.Types.Date:
      type: string
      title: Дата
      example: '2000-01-01'
    Admin_2.Methods.TariffChangeExpire.Edit:
      type: object
      properties:
        state_time_end:
          title: Дата следующего списания по тарифу
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
      required:
        - state_time_end
      title: Изменение даты следующего списания по тарифу
    Admin_2.Methods.TariffChangeExpire.Edit.Exec:
      nullable: true
      type: integer
    Admin_2.Methods.Tpl.Get:
      type: object
      properties:
        tpl:
          title: Путь к шаблону
          type: string
      required:
        - tpl
      title: Поиск HTML шаблонов
    Admin_2.Methods.Tpl.Get.Exec:
      type: array
    Admin_2.Methods.Users.Edit:
      type: object
      properties:
        deleted:
          title: Удалить пользователя
          nullable: true
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Редактирование пользователей, объект admin_users
    Admin_2.Methods.Users.Edit.Exec:
      nullable: true
    Models.Admin.Users:
      properties:
        REQUISITES():
          nullable: true
        ORG_NAME():
          nullable: true
        id: {}
        site:
          nullable: true
        currency:
          nullable: true
        name:
          nullable: true
        lang:
          nullable: true
        timezone:
          nullable: true
        dateformat:
          nullable: true
        date_reg:
          nullable: true
        page_reg:
          nullable: true
        has_EDF:
          nullable: true
        group:
          nullable: true
        phone:
          nullable: true
        email:
          nullable: true
        avatar:
          nullable: true
        deleted:
          nullable: true
        balance_all:
          nullable: true
        balance_bonus:
          nullable: true
        balance_tariff:
          nullable: true
        tariff_id:
          nullable: true
        status:
          nullable: true
        status_paid:
          nullable: true
        status_used:
          nullable: true
        sum_payments:
          nullable: true
        average_expenses_3:
          nullable: true
        tariff_state_time_end:
          nullable: true
        referrer_id:
          nullable: true
    Admin_2.Methods.Users.Get:
      type: object
      properties:
        project:
          title: Имя или id проекта
          nullable: true
          type: string
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение пользователей
    Admin_2.Methods.Users.Get.Exec:
      nullable: true
    Admin_2.Methods.Votes.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
    Admin_2.Methods.Votes.Get.Exec:
      nullable: true
      type: array
    Annotations_2.Methods.My.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение всех своих примечаний по всем проектам и сервисам
    Annotations_2.Methods.My.Get.Exec:
      nullable: true
      type: array
    App_2.Methods.Actions.Get:
      type: object
      properties:
        email:
          title: Email пользователя
          type: string
        code:
          title: Код для генерации ссылки подтверждения
          type: string
        type_action:
          title: Тип подтверждения
          nullable: true
          default: acceptAction
          type: string
      required:
        - email
        - code
      title: |-
        Получение данных подтверждения

        Возвращает результат подтверждения в виде
        массива с сообщением (acceptAction),
        логической переменной (acceptEmail),
        null при неправильно введенном типе
    App_2.Methods.Actions.Get.Exec:
      nullable: true
    App_2.Methods.Privacy.Get:
      type: object
      properties:
        lang:
          title: Язык страницы
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Lang'
      required: []
      title: Получение текста политики конфиденциальности
    Controller_2.Objects.Location:
      type: object
      properties: {}
      required: []
    Controller_2.Objects.OpenGraph:
      type: object
      properties: {}
      required: []
    Controller_2.Objects.Page.Options:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        keywords:
          type: string
        noindex:
          type: boolean
        canonical:
          type: string
        alternates:
          type: array
      required:
        - title
        - description
        - keywords
        - noindex
        - canonical
        - alternates
    Controller_2.Objects.Page.Article:
      type: object
      properties:
        type:
          default: module
          type: string
        duration:
          nullable: true
          type: string
        word_count:
          nullable: true
          type: string
        htmlRaw:
          type: string
        url:
          type: string
        parent_url:
          type: string
        publish_time:
          nullable: true
          type: string
        h1:
          type: string
        description:
          nullable: true
          type: string
        menu_name:
          nullable: true
          type: string
        intro:
          nullable: true
          type: string
        html:
          type: string
        image:
          type: string
        tags:
          type: array
        count_views:
          type: integer
        count_unique_views:
          nullable: true
          type: integer
        count_likes:
          type: integer
        count_comments:
          nullable: true
          type: integer
        theme:
          type: string
        noindex:
          type: boolean
        quiz_id:
          type: string
        state:
          default: ACTIVE
          type: string
        rubric_name:
          type: string
        user_id:
          type: integer
        user_name:
          nullable: true
          type: string
        user_description:
          type: string
        user_avatar:
          type: string
        view:
          type: integer
        like:
          type: integer
        bookmark:
          type: string
        bookmark_author:
          type: string
        author_alias:
          type: string
        user_id_2:
          nullable: true
          type: integer
        user_id_3:
          nullable: true
          type: integer
      required:
        - type
        - htmlRaw
        - url
        - parent_url
        - h1
        - html
        - image
        - tags
        - count_views
        - count_likes
        - theme
        - noindex
        - quiz_id
        - state
        - rubric_name
        - user_id
        - user_description
        - user_avatar
        - view
        - like
        - bookmark
        - bookmark_author
        - author_alias
    Tpl.Core.SecondMenu:
      type: object
      properties: {}
      required: []
    Tpl.Core.LeftMenu:
      type: object
      properties:
        items:
          type: array
      required:
        - items
    TV.Core.Sites.Site:
      type: object
      properties:
        host:
          title: Базовый домен сайта
          type: string
        config:
          title: '@type class-string<TV\Types\Config\Site> config - Интерфейс конфигурации сайта, пример: `Config\Sites\{{ SiteName }}\ConfigSite::class`'
          type: string
        configTPA:
          title: Настройки интеграций
          description: |-
            @type array{
                yandex_client_id:string,
                yandex_client_id_auth:string,
                yandex_client_secret:string,
                google_client_id:string,
                google_client_secret:string,
                sms_client:string,
                selectel_api_key:string,
                vk_pixel_id:string,
                vk_group_id:string,
                vk_service_token:string,
                vk_group_token:string,
                telegram_token:string,
                telegram_token_apometr:string,
                tinkoff_business_token:string,
                tinkoff_openapi_token:string,
                tinkoff_security_key:string,
                tinkoff_ap_cert_pass:string,
                tinkoff_partner_key:string,
                tinkoff_partner_secret:string,
                botan_token_TopvisorBot:string,
                botan_token_ApometrBot:string,
                diadoc:string,
                fbAppId:string,
                fbTokens:array,
                twTokens:array
            }
          type: array
      required:
        - host
        - config
        - configTPA
    Controller_2.Objects.TplEngine:
      type: object
      properties: {}
      required: []
      title: |-
        Движок работы с шаблонизатором

        Является неотъемлемой частью Page
    Controller_2.Objects.Page:
      type: object
      properties:
        location:
          allOf:
            - $ref: '#/components/schemas/Controller_2.Objects.Location'
        _GET:
          type: array
        openGraph:
          allOf:
            - $ref: '#/components/schemas/Controller_2.Objects.OpenGraph'
        options:
          allOf:
            - $ref: '#/components/schemas/Controller_2.Objects.Page.Options'
        article:
          allOf:
            - $ref: '#/components/schemas/Controller_2.Objects.Page.Article'
        secondMenu:
          allOf:
            - $ref: '#/components/schemas/Tpl.Core.SecondMenu'
        leftMenu:
          allOf:
            - $ref: '#/components/schemas/Tpl.Core.LeftMenu'
        params:
          type: array
        site:
          allOf:
            - $ref: '#/components/schemas/TV.Core.Sites.Site'
        subdomain:
          type: string
        langContext:
          type: string
        langUrl:
          type: string
        modUrl:
          type: string
        mod:
          type: string
        subMod:
          type: string
        theme:
          default: regular
          type: string
        topPanelStyling:
          title: Стиль шапки
          default: default
          type: string
        topPanelSeparation:
          title: Разделитель шапки
          default: default
          type: string
        jsonLDs:
          type: array
        htmlAttributes:
          type: array
        logo:
          type: string
        redirect:
          type: string
        redirectCode:
          default: 302
          type: integer
        tplEngine:
          allOf:
            - $ref: '#/components/schemas/Controller_2.Objects.TplEngine'
        tplStaticPath:
          type: string
        tplStatic:
          type: string
        tplStaticRendered:
          type: string
        tplPath:
          default: mods/content.php
          type: string
        tplRendered:
          type: string
        tplSiteRendered:
          type: string
        data:
          type: array
        rightsLabels:
          type: array
        isFullSize:
          type: boolean
        showFooter:
          type: boolean
        isAdaptive:
          type: boolean
        additionalHeadCode:
          type: string
        v:
          type: string
        vJS:
          type: string
      required:
        - location
        - _GET
        - openGraph
        - options
        - article
        - secondMenu
        - leftMenu
        - params
        - site
        - subdomain
        - langContext
        - langUrl
        - modUrl
        - mod
        - subMod
        - theme
        - topPanelStyling
        - topPanelSeparation
        - jsonLDs
        - htmlAttributes
        - logo
        - redirect
        - redirectCode
        - tplEngine
        - tplStaticPath
        - tplStatic
        - tplStaticRendered
        - tplPath
        - tplRendered
        - tplSiteRendered
        - data
        - rightsLabels
        - isFullSize
        - showFooter
        - isAdaptive
        - additionalHeadCode
        - v
        - vJS
    App_2.Methods.Privacy.Get.Exec:
      nullable: true
      allOf:
        - $ref: '#/components/schemas/Controller_2.Objects.Page'
    Audit_2.Types.Type:
      type: string
      enum:
        - audit
        - indexing
        - sitemap
        - watcher
      title: Модуль аудита
    Audit_2.Methods.CountUrls.Get:
      type: object
      properties:
        audit_type:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Type'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - audit_type
        - project_id
      title: Получение количества настроенных URL
    Audit_2.Methods.CountUrls.Get.Exec:
      title: Количество настроенных URL
      nullable: true
      type: integer
    Audit_2.Types.Indexing.SearcherKey:
      type: string
      enum:
        - '0'
        - '1'
        - '5'
      title: Ключ поисковой системы для индексации
    Audit_2.Types.Indexing.SearcherKeys:
      type: array
      items:
        $ref: '#/components/schemas/Audit_2.Types.Indexing.SearcherKey'
      title: Id поисковых систем для индексации
      description: '@see SearcherKey'
    Audit_2.Types.Indexing.TypeRange:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 7
        - 100
      title: Тип диапазона индексации
    Audit_2.Methods.Indexing.Get:
      type: object
      properties:
        searchers_keys:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.SearcherKeys'
        indexing_fields:
          title: |-
            Список полей индексации, которые необъодимо получить

            См. поля indexing_* в объекте Urls
          default:
            - data
          type: array
        show_headers:
          title: Вернуть ли заголовки отчета
          type: boolean
        show_counts_indexing:
          title: Вернуть ли суммарное количество страниц в индексе по URL
          type: boolean
        show_exists_dates:
          title: Вернуть ли даты проверок
          type: boolean
        filter_by_alert:
          title: |-
            Фильтр по изменениям в указанной ПС в указанную дату

            Формат записи: `{{ date }}:{{ searcher_key }}`
          type: string
        dates:
          title: Произвольные даты без использования диапазона
          nullable: true
          type: array
        date1:
          title: Дата начала диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        date2:
          title: Дата окончания диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        period_days:
          title: Период в днях
          default: 7
          type: integer
        type_range:
          title: Тип диапазона дат
          default: 7
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.TypeRange'
        count_dates:
          title: Количество дней в диапазоне
          default: 60
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - searchers_keys
        - fields
        - orders
        - filters
        - offset
        - project_id
      title: |-
        Получение отчета по проверке индексации

        Необходимо указать либо date1 и date2, либо dates (вместе указывать нельзя)
    Audit_2.Methods.Indexing.Get.Exec:
      title: Список ссылок с данными по ним
      type: array
    Audit_2.Types.Settings.WatcherType:
      type: string
      enum:
        - title
        - description
        - h1
        - content
      title: Тип отчета радара
    Audit_2.Types.Settings.WatcherTypes:
      type: array
      items:
        $ref: '#/components/schemas/Audit_2.Types.Settings.WatcherType'
      title: Типы отчетов радара
      description: '@see WatcherType'
    TV.API.Types.RegExp:
      type: string
      title: |-
        Регулярное выражение

        Пустое значение разрешено

        Управляющие символы "/" в начале и в конце строки будут удалены
      example: /^year_(\d\d\d\d)$/
    Audit_2.Types.Settings.ServerLocation:
      type: string
      enum:
        - EASTERN_EUROPE
        - WESTERN_EUROPE
      title: Местоположение сервера для выполнения задач инструментов аудита
    Audit_2.Methods.Settings.Edit:
      type: object
      properties:
        audit_user_agent:
          title: |-
            User-Agent (аудит)

            Можно указать id устройства
          description: '@see Audit_2\Types\Settings\Device'
          nullable: true
          type: string
        audit_use_cookie:
          title: Сохранять куки между запросами (аудит)
          nullable: true
          type: boolean
        audit_scan_links:
          title: Проверять ссылки (аудит)
          nullable: true
          type: boolean
        audit_scan_images:
          title: Проверять изображения (аудит)
          nullable: true
          type: boolean
        audit_scan_js:
          title: Проверять JS (аудит)
          nullable: true
          type: boolean
        audit_scan_css:
          title: Проверять css (аудит)
          nullable: true
          type: boolean
        audit_api_key:
          title: Ключ api для https://developers.google.com/speed/docs/insights/v5/get-started (аудит)
          nullable: true
          type: string
        audit_page_delay:
          title: Паузы между проверками страниц сайта (аудит)
          nullable: true
          type: number
        audit_resource_delay:
          title: Паузы между првоерками ресурсов страниц сайта (аудит)
          nullable: true
          type: number
        audit_cookies:
          title: Дополнитлеьные Cookies (аудит)
          nullable: true
          type: string
        audit_auto_collect_pages:
          title: Использовать ли при запуске аудита автоматический сбор URL (аудит)
          nullable: true
          type: boolean
        audit_auto_collect_pages_limit:
          title: Лимит страниц при автоматическом проходе по сайту (аудит)
          nullable: true
          type: integer
        audit_auto_collect_pages_start_url:
          title: Страница, с которой начинается автоматический сбор URL (аудит)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Url'
        indexing_searchers_keys:
          title: Поисковые системы (индексация)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.SearcherKeys'
        watcher_user_agent:
          title: |-
            User-Agent (радар)

            Можно указать id устройства
          description: '@see Audit_2\Types\Settings\Device'
          nullable: true
          type: string
        watcher_max_redirects:
          nullable: true
          type: integer
        watcher_types:
          title: Типы отчетов, которые необходимо построить (радар)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Settings.WatcherTypes'
        watcher_regexp:
          title: |-
            Регулярное выражение для сбора контента (радар)

            Если не указано, будут ипользоваться теги разметки
          description: '@see https://topvisor.com/support/watcher/settings/#tags'
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.RegExp'
        watcher_ignore_js:
          title: Вырезать из кода страницы javascript (радар)
          nullable: true
          type: boolean
        watcher_strip_tags_from_result:
          title: Вырезать из результатов html-тэги (радар)
          nullable: true
          type: boolean
        watcher_cookies:
          title: Дополнитлеьные cookies (радар)
          nullable: true
          type: string
        server_location:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Settings.ServerLocation'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - project_id
      title: Применение настроек Анализа сайта
    Audit_2.Methods.Settings.Edit.Exec:
      title: Количество применных настроек
      nullable: true
      type: integer
    Audit_2.Types.Settings.FieldName:
      type: string
      enum:
        - audit_user_agent
        - audit_use_cookie
        - audit_cookies
        - audit_scan_links
        - audit_scan_images
        - audit_scan_js
        - audit_scan_css
        - audit_api_key
        - audit_page_delay
        - audit_resource_delay
        - audit_auto_collect_pages
        - audit_auto_collect_pages_limit
        - audit_auto_collect_pages_start_url
        - indexing_searchers_keys
        - watcher_user_agent
        - watcher_cookies
        - watcher_max_redirects
        - watcher_types
        - watcher_regexp
        - watcher_ignore_js
        - watcher_strip_tags_from_result
        - server_location
      title: Имя настройки для интсрумента аудита
    Audit_2.Types.Settings.FieldNames:
      type: array
      items:
        $ref: '#/components/schemas/Audit_2.Types.Settings.FieldName'
      title: Имена настроек для инструментов аудита
      description: '@see FieldName'
    Audit_2.Methods.Settings.Get:
      type: object
      properties:
        fields:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Settings.FieldNames'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - fields
        - project_id
      title: Получение настроек аудита
    Audit_2.Methods.Settings.Get.Exec:
      title: Настройки аудита
      nullable: true
      type: array
    Audit_2.Types.Watcher.TypeRange:
      type: integer
      enum:
        - 0
        - 2
        - 3
        - 4
        - 7
        - 100
      title: Тип диапазона радара
    Audit_2.Types.Watcher.Type:
      type: string
      enum:
        - http_codes
        - redirects
        - h1
        - title
        - description
        - content
      title: Тип проверки радара
    Audit_2.Types.Watcher.ShowDiff:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
      title: Добавить в результат различия данных
    Audit_2.Methods.Watcher.Get:
      type: object
      properties:
        checks_ids:
          title: ID проверок в произвольном порядке
          nullable: true
          type: array
        check_id1:
          title: ID проверки начала диапазона
          nullable: true
          type: integer
        check_id2:
          title: ID проверки конца диапазона
          nullable: true
          type: integer
        type_range:
          default: 7
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Watcher.TypeRange'
        count_ids:
          title: Максимальное число возвращаемых проверок (не более 60)
          default: 60
          type: integer
        watcher_type:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Watcher.Type'
        watcher_fields:
          title: Выбор столбцов данных с результатами проверки
          default:
            - http_codes
            - redirects
          type: array
        show_headers:
          title: Добавить в результат заголовки отчета
          type: boolean
        show_diff:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Watcher.ShowDiff'
        show_counts_watcher:
          title: Добавить в результат количество проверок
          type: boolean
        project_id:
          $ref: '#/components/schemas/project_id'
        fields:
          $ref: '#/components/schemas/fields'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        orders:
          $ref: '#/components/schemas/orders'
        offset:
          $ref: '#/components/schemas/offset'
      required:
        - watcher_type
        - project_id
      title: |-
        Получение результатов проверок радара

        Отчет генерируется на основе объектов urls

        Необходимо указать либо check_id1 и check_id2, либо checks_ids (вместе указывать нельзя)
    Audit_2.Methods.Watcher.Get.Exec:
      title: Генерируемый на основе urls, список результатов проверок радара
      nullable: true
      type: array
    Bank_2.Methods.Bank.Get:
      type: object
      properties:
        bik:
          title: БИК или Swift банка
          type: string
      required: []
      title: Получение данных банка по БИК или Swift
    Bank_2.Methods.Bank.Get.Exec:
      nullable: true
    Bank_2.Methods.History.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение истории транзакций
    Bank_2.Methods.History.Get.Exec:
      nullable: true
    Models.BalanceHistory:
      properties:
        COUNT(*):
          nullable: true
        TOTAL():
          nullable: true
        plus:
          nullable: true
        sum_group:
          nullable: true
        user_id:
          type: integer
          nullable: true
        by_user_id:
          nullable: true
        sum:
          nullable: true
        discount:
          nullable: true
        currency:
          nullable: true
        limits:
          nullable: true
        limit_name:
          nullable: true
        type:
          nullable: true
        info:
          nullable: true
        target:
          nullable: true
        target_id:
          type: integer
          nullable: true
        date:
          nullable: true
        project_name:
          nullable: true
        project_tags:
          nullable: true
        project_folder_id:
          nullable: true
        by_user_email:
          nullable: true
    Bank_2.Methods.Info.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
      required: []
      title: Получение информации о балансе
    Bank_2.Objects.Subscriptions.Plan:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        priceUSD:
          type: integer
        annualDiscount:
          title: |-
            Скидка за годовую подписку в процентах от 0 до 1

            При расчете финальной стоимости может использоваться округление
          type: number
        maxByName:
          title: Выдаваемые лимиты
          type: array
        suffixName:
          title: Суффикс, характеризующий настройки тарифа
          type: string
      required:
        - id
        - name
        - priceUSD
        - annualDiscount
        - maxByName
        - suffixName
      title: |-
        Класс настройки плана подписки

        Используйте этот класс для описания настроек в namespace `Config\Sites\Common\Subscriptions\Plan`

        В плане нужно указать его имя, стоимость и лимиты

        Планы можно группировать:

        - в одном и том же плане может быть разное количество запросов и других лимитов
        - в этом случае для каждого варианта создается отдельный класс с добавлением порядкового номера в имени файла
        - все вариации такого плана должны иметь одно и то же имя
        - это делается для визуального упрощения работы с планами, на самом деле каждая вариация плана, это уникальный план со своими настройками

        В примерах указаны примерные соотношения между лимитами:

        - для удобства можно использовать математическими выражения
        - для гибкости можно указывать произвольные значения

        Рекомендация по названию классов, для удобства настройки:
         - `A_{{ PlanName }}{{ Number }}`
         - `B_{{ PlanName }}{{ Number }}`
         - `C_{{ PlanName }}{{ Number }}`

        Префикс имени класса будет определять id группы, который можно использовать для оформления групп планов

        Пример имени класса, оно же id плана: `A_StarterPack1`

        При выводе на сайте тарифы выводятся в нужном порядке, например с сортировкой по стоимости
    Datetime:
      type: object
      properties: {}
      required: []
    Bank_2.Types.Subscriptions.Status:
      type: string
      enum:
        - active
        - suspended
        - stopped
        - terminated
      title: Статус подписки
    Bank_2.Types.Subscriptions.Type:
      type: string
      enum:
        - auto
        - manual
      title: |-
        Тип подписки

        Определяет способ списания средств и порядок продления подписки
    Bank_2.Types.Subscriptions.Manager:
      type: string
      enum:
        - system
        - api
      title: |-
        Кто управляет подпиской, а именно:

        - Запуск списания с карты / электронного кошелька
        - Создание счета
        - Отправка предложения об оплате
    Bank_2.Objects.Requisites.Payment.RecurrentState:
      type: object
      properties:
        timeStart:
          title: Начало расчетного периода, обычно время оплаты
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Datetime'
        timeEnd:
          title: Окончание расчетного периода
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Datetime'
        methodInfo:
          title: |-
            Краткая информация о способе платежа

            - id платежа
            - неполный номер карты и срок действия
            - номер договора
          type: string
        status:
          allOf:
            - $ref: '#/components/schemas/Bank_2.Types.Subscriptions.Status'
        type:
          allOf:
            - $ref: '#/components/schemas/Bank_2.Types.Subscriptions.Type'
        manager:
          allOf:
            - $ref: '#/components/schemas/Bank_2.Types.Subscriptions.Manager'
      required:
        - methodInfo
        - status
        - type
        - manager
      title: |-
        Состояние рекуррентного платежа

        - создается при подтверждении проведения оплаты или при других обновлениях подписки, содержит только данные, которые надо обновить
        - используется при выводе состояния подписки

        Определяет логику работы с рекуррентными платежами
    Bank_2.Objects.Subscriptions.Subscription:
      type: object
      properties:
        paymentId:
          title: id платежа, подписки
          type: integer
        paymentSystem:
          title: Платежная система
          type: string
        externalPaymentId:
          title: Id платежа в платежной системе
          type: string
        paymentRequisitesId:
          title: Id реквизитов юр. лица, указанные при оплате
          type: string
        depreciationCost:
          title: |-
            Стоимость амортизации

            Используется для расчета первого платежа при переподписки на другой план

            Указывается в валюте подписки
          type: integer
        plan:
          title: Текущий план подписки
          allOf:
            - $ref: '#/components/schemas/Bank_2.Objects.Subscriptions.Plan'
        nextPlan:
          title: Следующий план подписки
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Bank_2.Objects.Subscriptions.Plan'
        recurrentState:
          title: Состояние подписки
          allOf:
            - $ref: '#/components/schemas/Bank_2.Objects.Requisites.Payment.RecurrentState'
        cycle:
          title: Текущий цикл для подписки
          allOf:
            - $ref: '#/components/schemas/Bank_2.Types.Subscriptions.Cycle'
        nextCycle:
          title: Цикл для следующей подписки
          allOf:
            - $ref: '#/components/schemas/Bank_2.Types.Subscriptions.Cycle'
        price:
          title: Стоимость текущей подписки
          type: integer
        renewPrice:
          title: Стоимость продления подписки
          type: integer
        limitUsedByName:
          title: |-
            Использованные лимиты

            Доступные лимиты см. в `plan`

            Для нетарифицируемых лимитов значение всегда `null`
          description: '@type Array<Bank_2\Types\Subscriptions\Limit\Name, int>'
          type: array
        limitTypeByName:
          title: Типы лимитов
          type: array
      required:
        - paymentId
        - paymentSystem
        - externalPaymentId
        - paymentRequisitesId
        - depreciationCost
        - plan
        - recurrentState
        - cycle
        - nextCycle
        - price
        - renewPrice
        - limitUsedByName
        - limitTypeByName
      title: Информация о текущей подписки пользователя и ее лимитах
    Bank_2.Methods.Info.Get.Exec:
      title: Информация о балансе и тарифе пользователя.
      type: object
      properties:
        balance_all:
          type: number
        balance_personal:
          type: number
        balance_bonus:
          type: number
        balance_tariff:
          type: number
        tariff:
          type: array
        subscription:
          $ref: '#/components/schemas/Bank_2.Objects.Subscriptions.Subscription'
        subscription_name:
          type: string
      required:
        - balance_all
        - balance_personal
        - balance_bonus
        - balance_tariff
        - tariff
    Bank_2.Types.Requisites.Type:
      type: string
      enum:
        - contract
        - offer
        - partnerOffer
        - fl223
        - domainsContract
        - domainsOffer
        - domainsPersonContract
        - domainsPersonOffer
      title: Тип реквизитов
    Bank_2.Methods.Requisites.Add:
      type: object
      properties:
        data:
          title: см. объект Bank_2\Objects\Requisites
          type: string
        type:
          allOf:
            - $ref: '#/components/schemas/Bank_2.Types.Requisites.Type'
        tariff_id:
          title: Id тарифа, для договоров, ассоциируемых с тарифом (например fl223)
          type: integer
      required:
        - data
        - type
      title: Добавиление реквизитов
    Bank_2.Methods.Requisites.Add.Exec:
      nullable: true
      type: string
    Bank_2.Methods.Requisites.Del:
      type: object
      properties:
        id:
          title: Id реквезитов
          type: string
      required:
        - id
      title: Закрытие договора (оферту закрыть невозможно)
    Bank_2.Methods.Requisites.Del.Exec:
      nullable: true
    Bank_2.Methods.Requisites.Edit:
      type: object
      properties:
        id:
          title: Id реквезитов
          type: string
        data:
          title: |-
            Данные реквезитов

            см. объект Bank_2\Objects\Requisites
          type: string
      required:
        - id
        - data
      title: Изменение реквизитов
    Bank_2.Methods.Requisites.Edit.Exec:
      nullable: true
    Bank_2.Methods.Requisites.Get:
      type: object
      properties:
        include_edc_data:
          title: Добавить информацию о доступных контрагентах организации для ЭДО
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение списка договоров
    Bank_2.Methods.Requisites.Get.Exec:
      nullable: true
    Models.Requisites:
      properties:
        LABEL():
          nullable: true
        id: {}
        user_id:
          nullable: true
        country:
          nullable: true
        contract_date:
          nullable: true
        contract_type:
          nullable: true
        contract_balance:
          nullable: true
        contract_tariff_id:
          nullable: true
        data:
          nullable: true
        signed:
          nullable: true
        deleted:
          nullable: true
        edc_connected:
          nullable: true
        fromBase64Data:
          nullable: true
    Bank_2.Methods.Ur.Get:
      type: object
      properties:
        inn:
          title: ИНН юридического лица
          type: string
      required:
        - inn
      title: Получение данных юридического лица по ИНН
    Bank_2.Methods.Ur.Get.Exec:
      nullable: true
    Broker_2.Types.Ads.Type:
      type: string
      enum:
        - TEXT_AD
        - SMART_AD
        - MOBILE_APP_AD
        - DYNAMIC_TEXT_AD
        - IMAGE_AD
        - CPC_VIDEO_AD
        - CPM_BANNER_AD
        - CPM_VIDEO_AD
        - SHOPPING_AD
        - LISTING_AD
      title: Тип объявления
      description: '@see https://yandex.ru/dev/direct/doc/ru/objects/ad#types'
    Broker_2.Methods.Ads.Edit:
      type: object
      properties:
        campaign_tv_id:
          title: Id рекламной кампании
          type: integer
        group_id:
          title: Id группы
          type: integer
        id:
          title: Id объявления
          type: integer
        type:
          allOf:
            - $ref: '#/components/schemas/Broker_2.Types.Ads.Type'
        title:
          title: Заголовок
          nullable: true
          type: string
        text:
          title: Текст
          nullable: true
          type: string
        href:
          title: Ссылка
          nullable: true
          type: string
        display_url:
          title: Url для отображения
          nullable: true
          type: string
      required:
        - campaign_tv_id
        - group_id
        - id
        - type
      title: Редактирование объявления
    Broker_2.Methods.Ads.Edit.Exec:
      title: выводит int, если функция провайдера не определена
      nullable: true
      anyOf:
        - type: array
        - type: integer
        - type: 'null'
    Broker_2.Methods.Ads.Get:
      type: object
      properties:
        campaign_tv_id:
          title: Id рекламной кампании
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - campaign_tv_id
        - fields
        - orders
        - filters
        - offset
      title: Получение объявления рекламной кампании
    Broker_2.Methods.Ads.Get.Exec:
      nullable: true
      type: array
    Models.Broker.Ads:
      properties:
        id: {}
        campaign_tv_id:
          nullable: true
        group_id:
          nullable: true
        title:
          nullable: true
        text:
          nullable: true
        text2:
          nullable: true
        href:
          nullable: true
        domain:
          nullable: true
        display_url:
          nullable: true
        type:
          nullable: true
        subtype:
          nullable: true
        status:
          nullable: true
        state:
          nullable: true
        'on':
          nullable: true
        'off':
          nullable: true
        for_off:
          nullable: true
        timestamp:
          nullable: true
    Broker_2.Methods.Campaigns.Add:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
      title: Добавление рекламной кампании в управление ставками
    Broker_2.Methods.Campaigns.Add.Exec:
      nullable: true
      type: integer
    Models.Broker.Campaigns:
      properties:
        id: {}
        project_id:
          nullable: true
        provider_n:
          nullable: true
        campaign_tv_id:
          nullable: true
        client_id:
          nullable: true
        login:
          nullable: true
        agency_name:
          nullable: true
        name:
          nullable: true
        shows:
          nullable: true
        clicks:
          nullable: true
        count_tasks:
          nullable: true
        frequency:
          nullable: true
        rest:
          nullable: true
        price:
          nullable: true
        timezone:
          nullable: true
        currency:
          nullable: true
        state:
          nullable: true
        servingStatus:
          nullable: true
        status_name:
          nullable: true
        manualBids:
          nullable: true
        no_manage_suspended_keywords:
          nullable: true
        added:
          nullable: true
        'on':
          nullable: true
        on_tv:
          nullable: true
        'off':
          nullable: true
        for_off:
          nullable: true
        groups_load_time:
          nullable: true
        keywords_statistics_update:
          nullable: true
        count_keywords:
          nullable: true
        count_keywords_autocorrect:
          nullable: true
        targeting:
          nullable: true
        limits:
          nullable: true
        limits_max:
          nullable: true
    Broker_2.Methods.Campaigns.Del:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - project_id
        - filters
      title: Удаление рекламной компании из управления ставками
    Broker_2.Methods.Campaigns.Del.Exec:
      nullable: true
      type: integer
    Broker_2.Methods.Campaigns.Edit:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        update_targeting:
          title: Обновить ли данные таргетинга (только для Директа)
          type: boolean
        on_tv:
          title: Включить ли
          nullable: true
          type: boolean
        frequency:
          title: 'Частота корректировок (1: раз в час, 2: два раза в час, -1: раз в день, -2: два раза в день)'
          nullable: true
          type: integer
        no_manage_suspended_keywords:
          title: Не управлять ли отключенными ключевыми фразами
          nullable: true
          type: boolean
        include_used_in_other_projects:
          title: Получить ли информацию о том, в каких проектах интегрированы указанные компании
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - project_id
        - filters
      title: Редактирование рекламной кампании
    Broker_2.Methods.Campaigns.Edit.Exec:
      type: integer
    Broker_2.Methods.Campaigns.Get:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        include_used_in_other_projects:
          title: Получить ли информацию о том, в каких проектах интегрированы указанные компании
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - project_id
        - fields
        - orders
        - filters
        - offset
      title: Получение списка рекламных кампаний
    Broker_2.Methods.Campaigns.Get.Exec:
      type: array
    Broker_2.Methods.Groups.Add:
      type: object
      properties:
        campaign_tv_id:
          title: Id кампании
          type: integer
        groups_names:
          title: Имена групп
          type: array
      required:
        - campaign_tv_id
        - groups_names
      title: Добавление групп рекламной кампании
    Broker_2.Methods.Groups.Add.Exec:
      title: выводит int, если функция провайдера не определена
      nullable: true
      anyOf:
        - type: array
        - type: integer
        - type: 'null'
    Broker_2.Methods.Groups.Get:
      type: object
      properties:
        campaign_tv_id:
          title: Id рекламной кампании
          type: integer
        filters_by_keywords:
          title: Поиск групп по запросам
          nullable: true
          type: array
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - campaign_tv_id
        - fields
        - orders
        - filters
        - offset
      title: Получение групп рекламной кампании
    Broker_2.Methods.Groups.Get.Exec:
      type: array
    Models.Broker.Groups:
      properties:
        GEN_SEARCH_STRING():
          nullable: true
        id: {}
        campaign_tv_id:
          nullable: true
        name:
          nullable: true
        geo:
          nullable: true
        type:
          nullable: true
        status:
          nullable: true
        servingStatus:
          nullable: true
        count:
          nullable: true
        'on':
          nullable: true
        'off':
          nullable: true
        for_off:
          nullable: true
        timestamp:
          nullable: true
        keyword:
          nullable: true
        keywords_off:
          nullable: true
        price_max:
          nullable: true
        P21:
          nullable: true
        P11:
          nullable: true
        P1L:
          nullable: true
        P2L:
          nullable: true
    Broker_2.Methods.Keywords.Del:
      type: object
      properties:
        campaign_tv_id:
          title: Id кампании
          type: integer
        keywords_data:
          title: Информация о запросах (id группы и id запросов)
          type: array
      required:
        - campaign_tv_id
        - keywords_data
      title: Удаление запросов рекламной кампании
    Broker_2.Methods.Keywords.Del.Exec:
      title: выводит int, если функция провайдера не определена
      nullable: true
      anyOf:
        - type: array
        - type: integer
        - type: 'null'
    Broker_2.Types.Keywords.Tactics2:
      type: string
      enum:
        - maxBid
        - minBid
        - lowerPos
        - suspend
      title: Тактика при превышении максимальной цены
    Broker_2.Methods.Keywords.Edit:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        provider_n:
          title: Провайдер
          type: integer
        tactics:
          title: |-
            Объем трафика

            - 0: max
            - 1: ~75%
            - 2: ~15%
            - 3: ~5%
            - 4: ~95%
            - 5: ~90%
          nullable: true
          type: integer
        tactics_2:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Broker_2.Types.Keywords.Tactics2'
        percent:
          title: Корректировка объявлений (проценты)
          nullable: true
          type: integer
        price_max:
          title: Максимальная цена
          nullable: true
          type: number
        price_risk:
          title: Ставка риска
          nullable: true
          type: number
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - provider_n
        - filters
      title: Редактирование объявлений (запросов) рекламной кампании
    Broker_2.Methods.Keywords.Edit.Exec:
      type: integer
    Models.Broker.Keywords:
      properties:
        id: {}
        campaign_tv_id:
          nullable: true
        keyword_id:
          nullable: true
        group_id:
          nullable: true
        keyword:
          nullable: true
        status:
          nullable: true
        state:
          nullable: true
        shows:
          nullable: true
        clicks:
          nullable: true
        P11:
          nullable: true
        P12:
          nullable: true
        P13:
          nullable: true
        P1L:
          nullable: true
        P21:
          nullable: true
        P2L:
          nullable: true
        P11_f:
          nullable: true
        P12_f:
          nullable: true
        P13_f:
          nullable: true
        P1L_f:
          nullable: true
        P21_f:
          nullable: true
        P2L_f:
          nullable: true
        TrafficVolumes:
          nullable: true
        bid:
          nullable: true
        contextBid:
          nullable: true
        price:
          nullable: true
        price_max:
          nullable: true
        price_risk:
          nullable: true
        percent:
          nullable: true
        tactics:
          nullable: true
        tactics_2_old:
          nullable: true
        tactics_2:
          nullable: true
        'on':
          nullable: true
        'off':
          nullable: true
        for_off:
          nullable: true
    Broker_2.Methods.Keywords.Get:
      type: object
      properties:
        campaign_tv_id:
          title: Id рекламной кампании
          type: integer
        group_by:
          title: Группировка
          nullable: true
          type: string
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - campaign_tv_id
        - fields
        - orders
        - filters
        - offset
      title: Получение запросов рекламной кампании
    Broker_2.Methods.Keywords.Get.Exec:
      type: array
    Broker_2.Methods.Log.Get:
      type: object
      properties:
        campaign_tv_id:
          title: Id кампании
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - campaign_tv_id
        - fields
        - orders
        - filters
        - offset
      title: Получение логов
    Broker_2.Methods.Log.Get.Exec:
      nullable: true
      type: array
    Models.Broker.Log:
      properties:
        COUNT(*):
          nullable: true
        datetime:
          nullable: true
        campaign_tv_id:
          nullable: true
        text:
          nullable: true
        error:
          nullable: true
    Comments_2.Methods.ByAuthor.Get:
      type: object
      properties:
        user_id:
          title: ID автора
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - user_id
        - fields
        - orders
        - filters
        - offset
      title: Получение комментариев автора. Без вложенности
    Comments_2.Methods.ByAuthor.Get.Exec:
      nullable: true
      type: array
    Comments_2.Methods.Like.Edit:
      type: object
      properties:
        id:
          title: Id комментария
          type: integer
        like:
          title: |-
            Установка лайка
            - 0: снять лайк
            - 1: поставить лайк
          type: boolean
      required:
        - id
        - like
      title: |-
        Редактирование статуса лайка для комментария

        Возвращает результат редактирования статуса лайка
    Comments_2.Methods.Like.Edit.Exec:
      nullable: true
      type: integer
    Content_2.Methods.Authors.Edit:
      type: object
      properties:
        alias:
          title: |-
            Имя для url страницы автора

            Только латинские буквы, цифры и символ дефиса
          nullable: true
          type: string
        promo_text:
          title: Промо текст
          nullable: true
          type: string
        promo_label:
          title: Текс для промо кнопки
          nullable: true
          type: string
        promo_link:
          title: Ссылка для промо кнопки
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Url'
        show_in_author_list:
          title: Отображать ли автора в списке авторов
          nullable: true
          type: boolean
      required: []
      title: Изменить настройки автора
    Content_2.Methods.Authors.Edit.Exec:
      nullable: true
      type: integer
    Content_2.Methods.Authors.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение данных об авторе
    Content_2.Methods.Authors.Get.Exec:
      nullable: true
    Models.Content.Authors:
      properties:
        IS_ACTIVE():
          type: integer
          nullable: true
        user_id:
          type: integer
          nullable: true
        alias:
          type: string
          nullable: true
        promo_text:
          type: string
          nullable: true
        promo_label:
          type: string
          nullable: true
        promo_link:
          type: string
          nullable: true
        count_pages:
          type: integer
          nullable: true
        count_views:
          type: integer
          nullable: true
        count_unique_views:
          type: string
          nullable: true
        count_likes:
          type: integer
          nullable: true
        show_in_author_list:
          type: integer
          nullable: true
        user_site:
          type: string
          nullable: true
        user_name:
          type: string
          nullable: true
        user_avatar:
          type: string
          nullable: true
        user_description:
          type: string
          nullable: true
        bookmark_author:
          type: integer
          nullable: true
    Content_2.Methods.BookmarkAuthor.Edit:
      type: object
      properties:
        user_id:
          title: Id автора
          type: integer
        bookmark:
          title: |-
            Установлена ли закладка

            - false: снять закладку
            - true: сохранить закладку
          type: boolean
      required:
        - user_id
        - bookmark
      title: Редактирование статуса закладки для автора
    Content_2.Methods.BookmarkAuthor.Edit.Exec:
      nullable: true
      type: integer
    Content_2.Methods.Bookmark.Edit:
      type: object
      properties:
        subdomain:
          title: Поддомен страницы
          type: string
        url:
          title: Url страницы
          type: string
        bookmark:
          title: |-
            Установлена ли закладка

            - false: снять закладку
            - true: сохранить закладку
          type: boolean
      required:
        - subdomain
        - url
        - bookmark
      title: Редактирование статуса закладки для страницы
    Content_2.Methods.Bookmark.Edit.Exec:
      nullable: true
      type: integer
    Content_2.Methods.Like.Edit:
      type: object
      properties:
        subdomain:
          title: Поддомен страницы
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Subdomain'
        url:
          title: Url страницы
          type: string
        like:
          title: Установлен ли лайк
          type: boolean
      required:
        - subdomain
        - url
        - like
      title: Редактирование статуса лайка для страницы
    Content_2.Methods.Like.Edit.Exec:
      nullable: true
      type: integer
    TV.API.Types.Datetime:
      type: string
      title: Дата с временем
      example: '2000-01-01 00:00:00'
    Content_2.Types.Pages.RequiredPost:
      type: string
      enum:
        - DEVELOPER
        - SUPPORT
        - ACCOUNTING
        - HR
        - DOCUMENTATION
      title: Требуемая должность для просмотра страницы
    Content_2.Types.Pages.RequiredPosts:
      type: array
      items:
        $ref: '#/components/schemas/Content_2.Types.Pages.RequiredPost'
      title: Требуемые должности для просмотра страницы
      description: '@see RequiredPost'
    Content_2.Methods.Pages.AbstractPage:
      type: object
      properties:
        url:
          title: Адрес документа
          type: string
        subdomain:
          title: Поддомен документа
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Subdomain'
        lang:
          title: Язык документа
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Lang'
        user_id:
          title: Id автора
          nullable: true
          type: integer
        user_id_2:
          title: Id второго автора
          nullable: true
          type: integer
        user_id_3:
          title: Id третьего автора
          nullable: true
          type: integer
        create:
          title: Дата публикации
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        publish_time:
          title: Время публикации
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Datetime'
        h1:
          title: Заголовок страницы
          nullable: true
          type: string
        title:
          title: Заголовок страницы для браузера
          nullable: true
          type: string
        description:
          title: Описание страницы (meta - description)
          nullable: true
          type: string
        intro:
          title: Вступительный текст
          nullable: true
          type: string
        html:
          title: Контент страницы
          nullable: true
          type: string
        menu_name:
          title: Заголовок для меню
          nullable: true
          type: string
        order:
          title: Позиция сортировки документа
          nullable: true
          type: integer
        image:
          title: Ссылка на основное изображение (обычно относительный путь до изображения от корня сайта)
          nullable: true
          type: string
        og:
          title: object(name => value) og - объект с данными Open Graph
          nullable: true
          type: array
        c:
          title: Массив тегов
          nullable: true
          type: array
        tags:
          title: Список тегов
          nullable: true
          type: array
        noindex:
          title: Не индексировать страницу
          type: boolean
        theme:
          title: Тема оформления страницы
          nullable: true
          type: string
        quiz_id:
          title: Id теста
          nullable: true
          type: string
        state:
          title: Статус документа
          nullable: true
          type: string
        required_posts_any:
          title: |-
            Ограничение доступа

            Доступно всем, если не заполнено
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Pages.RequiredPosts'
      required: []
    Content_2.Methods.Pages.AbstractPage.Exec:
      title: |-
        Непосредственный вызов API функции

        Запрещено делать публичной, это приведет к поломке preCall()

        В описании к функции отвечать на вопрос: `Что является результатом запроса?` Например: `Список пользователей`

        Не менять `protected`, проверка проводится при генерации схем в `TV\API\Objects\ClassAPIMethodInfo`
      nullable: true
    Models.Pages:
      properties:
        COUNT(*):
          nullable: true
        RAND():
          nullable: true
        DURATION():
          nullable: true
        WORD_COUNT():
          nullable: true
        HTML_RAW():
          nullable: true
        AUTHOR_LIKES():
          nullable: true
        AUTHOR_VIEWS():
          nullable: true
        AUTHOR_UNIQUE_VIEWS():
          nullable: true
        USERS_IDS():
          nullable: true
        site:
          nullable: true
        subdomain:
          nullable: true
        url:
          nullable: true
        lang:
          nullable: true
        parent_url:
          nullable: true
        user_id:
          nullable: true
        user_id_2:
          nullable: true
        user_id_3:
          nullable: true
        create:
          nullable: true
        publish_time:
          nullable: true
        noindex:
          nullable: true
        theme:
          nullable: true
        quiz_id:
          nullable: true
        state:
          nullable: true
        required_posts_any:
          nullable: true
        h1:
          nullable: true
        title:
          nullable: true
        description:
          nullable: true
        intro:
          nullable: true
        html:
          nullable: true
        text:
          nullable: true
        menu_name:
          nullable: true
        order:
          nullable: true
        image:
          nullable: true
        og_json:
          nullable: true
        og:
          nullable: true
        tags:
          nullable: true
        count_views:
          nullable: true
        count_unique_views:
          nullable: true
        count_comments:
          nullable: true
        count_likes:
          nullable: true
        rubric_name:
          nullable: true
        user_name:
          nullable: true
        user_avatar:
          nullable: true
        user_description:
          nullable: true
        author_alias:
          nullable: true
        author_promo_text:
          nullable: true
        author_promo_label:
          nullable: true
        author_promo_link:
          nullable: true
        view:
          nullable: true
        like:
          nullable: true
        bookmark:
          nullable: true
        bookmark_author:
          nullable: true
    Content_2.Methods.Pages.Add:
      type: object
      properties:
        url:
          title: Адрес документа
          type: string
        subdomain:
          title: Поддомен документа
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Subdomain'
        lang:
          title: Язык документа
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Lang'
        user_id:
          title: Id автора
          nullable: true
          type: integer
        user_id_2:
          title: Id второго автора
          nullable: true
          type: integer
        user_id_3:
          title: Id третьего автора
          nullable: true
          type: integer
        create:
          title: Дата публикации
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        publish_time:
          title: Время публикации
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Datetime'
        h1:
          title: Заголовок страницы
          nullable: true
          type: string
        title:
          title: Заголовок страницы для браузера
          nullable: true
          type: string
        description:
          title: Описание страницы (meta - description)
          nullable: true
          type: string
        intro:
          title: Вступительный текст
          nullable: true
          type: string
        html:
          title: Контент страницы
          nullable: true
          type: string
        menu_name:
          title: Заголовок для меню
          nullable: true
          type: string
        order:
          title: Позиция сортировки документа
          nullable: true
          type: integer
        image:
          title: Ссылка на основное изображение (обычно относительный путь до изображения от корня сайта)
          nullable: true
          type: string
        og:
          title: object(name => value) og - объект с данными Open Graph
          nullable: true
          type: array
        c:
          title: Массив тегов
          nullable: true
          type: array
        tags:
          title: Список тегов
          nullable: true
          type: array
        noindex:
          title: Не индексировать страницу
          type: boolean
        theme:
          title: Тема оформления страницы
          nullable: true
          type: string
        quiz_id:
          title: Id теста
          nullable: true
          type: string
        state:
          title: Статус документа
          nullable: true
          type: string
        required_posts_any:
          title: |-
            Ограничение доступа

            Доступно всем, если не заполнено
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Pages.RequiredPosts'
      required: []
      title: Создание документа
    Content_2.Methods.Pages.Add.Exec:
      type: integer
    Content_2.Methods.Pages.Del:
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Перенести документ в папку /archive/
    Content_2.Methods.Pages.Del.Exec:
      nullable: true
      type: integer
    Content_2.Methods.Pages.Edit:
      type: object
      properties:
        url:
          title: Адрес документа
          type: string
        subdomain:
          title: Поддомен документа
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Subdomain'
        lang:
          title: Язык документа
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Lang'
        user_id:
          title: Id автора
          nullable: true
          type: integer
        user_id_2:
          title: Id второго автора
          nullable: true
          type: integer
        user_id_3:
          title: Id третьего автора
          nullable: true
          type: integer
        create:
          title: Дата публикации
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        publish_time:
          title: Время публикации
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Datetime'
        h1:
          title: Заголовок страницы
          nullable: true
          type: string
        title:
          title: Заголовок страницы для браузера
          nullable: true
          type: string
        description:
          title: Описание страницы (meta - description)
          nullable: true
          type: string
        intro:
          title: Вступительный текст
          nullable: true
          type: string
        html:
          title: Контент страницы
          nullable: true
          type: string
        menu_name:
          title: Заголовок для меню
          nullable: true
          type: string
        order:
          title: Позиция сортировки документа
          nullable: true
          type: integer
        image:
          title: Ссылка на основное изображение (обычно относительный путь до изображения от корня сайта)
          nullable: true
          type: string
        og:
          title: object(name => value) og - объект с данными Open Graph
          nullable: true
          type: array
        c:
          title: Массив тегов
          nullable: true
          type: array
        tags:
          title: Список тегов
          nullable: true
          type: array
        noindex:
          title: Не индексировать страницу
          type: boolean
        theme:
          title: Тема оформления страницы
          nullable: true
          type: string
        quiz_id:
          title: Id теста
          nullable: true
          type: string
        state:
          title: Статус документа
          nullable: true
          type: string
        required_posts_any:
          title: |-
            Ограничение доступа

            Доступно всем, если не заполнено
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Pages.RequiredPosts'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required: []
      title: Изменение документа
    Content_2.Methods.Pages.Edit.Exec:
      nullable: true
      type: integer
    Content_2.Methods.Pages.Get:
      type: object
      properties:
        render_tpl:
          title: Выполнить ли исполнение шаблона
          default: true
          type: boolean
        url_for_edit:
          title: Только для редакторов, добавить в результаты данные для модуля редактора старинцы
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Url'
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение документов
    Content_2.Methods.Pages.Get.Exec:
      nullable: true
      type: array
    Content_2.Methods.Redirects.AbstractRegular:
      type: object
      properties:
        site:
          title: |-
            Сайт

            - topvisor
            - thundo
          type: string
        subdomain:
          title: |-
            С поддомена

            - 'journal'
            - ''
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Subdomain'
        path_mask:
          title: С пути (маска, * - любой символ)
          type: string
      required:
        - site
        - subdomain
        - path_mask
    Content_2.Methods.Redirects.AbstractRegular.Exec:
      title: |-
        Непосредственный вызов API функции

        Запрещено делать публичной, это приведет к поломке preCall()

        В описании к функции отвечать на вопрос: `Что является результатом запроса?` Например: `Список пользователей`

        Не менять `protected`, проверка проводится при генерации схем в `TV\API\Objects\ClassAPIMethodInfo`
      nullable: true
    Content_2.Methods.Redirects.Add:
      type: object
      properties:
        redirect_path:
          title: На путь
          type: string
        redirect_subdomain:
          title: На поддомен
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Subdomain'
        site:
          title: |-
            Сайт

            - topvisor
            - thundo
          type: string
        subdomain:
          title: |-
            С поддомена

            - 'journal'
            - ''
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Subdomain'
        path_mask:
          title: С пути (маска, * - любой символ)
          type: string
      required:
        - redirect_path
        - redirect_subdomain
        - site
        - subdomain
        - path_mask
      title: Добавление правила редиректа (для админов)
    Content_2.Methods.Redirects.Add.Exec:
      nullable: true
      type: integer
    Content_2.Methods.Redirects.Del:
      type: object
      properties:
        site:
          title: |-
            Сайт

            - topvisor
            - thundo
          type: string
        subdomain:
          title: |-
            С поддомена

            - 'journal'
            - ''
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Subdomain'
        path_mask:
          title: С пути (маска, * - любой символ)
          type: string
      required:
        - site
        - subdomain
        - path_mask
      title: Удаление редиректа
    Content_2.Methods.Redirects.Del.Exec:
      nullable: true
      type: integer
    Content_2.Methods.Redirects.Edit:
      type: object
      properties:
        redirect_path:
          title: На путь
          type: string
        redirect_subdomain:
          title: На поддомен
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Subdomain'
        comments:
          title: Комментарий
          type: string
        site:
          title: |-
            Сайт

            - topvisor
            - thundo
          type: string
        subdomain:
          title: |-
            С поддомена

            - 'journal'
            - ''
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Subdomain'
        path_mask:
          title: С пути (маска, * - любой символ)
          type: string
      required:
        - redirect_path
        - redirect_subdomain
        - comments
        - site
        - subdomain
        - path_mask
      title: Изменение правила редиректа (для админов)
    Content_2.Methods.Redirects.Edit.Exec:
      nullable: true
      type: integer
    Content_2.Methods.Redirects.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение списка правил (для админов)
    Content_2.Methods.Redirects.Get.Exec:
      nullable: true
      type: array
    Models.ContentsRedirects:
      properties:
        PATH_MASK():
          nullable: true
        PATH_MASK_SLASHES_COUNT():
          nullable: true
        site:
          nullable: true
        subdomain:
          nullable: true
        redirect_subdomain:
          nullable: true
        redirect_path:
          nullable: true
        comments:
          nullable: true
    Content_2.Methods.Rss.Get:
      type: object
      properties:
        url:
          title: Страницы раздела сайта в формате XML RSS
          nullable: true
          default: /
          type: string
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: |-
        Получение RSS раздела сайта

        Для выборки страниц используется модель: Pages
    Content_2.Methods.Rss.Get.Exec:
      nullable: true
      type: string
    Content_2.Methods.Search.Get:
      type: object
      properties:
        subdomain:
          title: Фильтр по поддомену
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Subdomain'
        lang:
          title: Язык документа
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Lang'
        search:
          title: Искомая строка
          type: string
        folder:
          title: Папка в которой производить поиск
          nullable: true
          type: string
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - subdomain
        - lang
        - search
        - fields
        - orders
        - filters
        - offset
      title: Поиск страниц
    Content_2.Methods.Search.Get.Exec:
      type: array
    Content_2.Methods.Sitemap.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение xml карты сайта
    Content_2.Methods.Sitemap.Get.Exec:
      nullable: true
      type: string
    Content_2.Methods.Tags.Get:
      type: object
      properties:
        subdomain:
          title: Фильтр по поддомену
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Subdomain'
        tag:
          title: Искомый тэг
          type: string
        url:
          title: Фильтр по каталогу url
          nullable: true
          type: string
      required: []
      title: Поиск тегов
    Content_2.Methods.Tags.Get.Exec:
      nullable: true
      type: array
    Cron_2.Types.Day:
      type: string
      enum:
        - '1'
        - '2'
        - '3'
        - '4'
        - '5'
        - '6'
        - '7'
      title: День недели, в который должен производиться запуск cron
    Cron_2.Types.Days:
      type: array
      items:
        $ref: '#/components/schemas/Cron_2.Types.Day'
      title: Дни недели, в которые должен производиться запуск cron
    Cron_2.Types.Hour:
      type: string
      title: |-
        Час в который должен производиться запуск cron

        Пустое значение зарезервированно для запуска cron каждый час

        Значение должно находиться в диапазоне от 0 до 23 включительно
    Cron_2.Types.Minute:
      type: string
      title: |-
        Минута или интервал в минутах в который должен производиться запуск cron

        Значение должно находится в диапазоне от 0 до 59 включительно

        Если значение является интервалом, в начало ставится символ '*'
    command:
      title: Имя команды cron
      type: string
    Cron_2.Methods.Commands.Add:
      type: object
      properties:
        description:
          title: Описание задачи
          type: string
        days:
          allOf:
            - $ref: '#/components/schemas/Cron_2.Types.Days'
        hh:
          allOf:
            - $ref: '#/components/schemas/Cron_2.Types.Hour'
        i:
          allOf:
            - $ref: '#/components/schemas/Cron_2.Types.Minute'
        'on':
          title: Статус активности задачи
          type: boolean
        command:
          $ref: '#/components/schemas/command'
      required:
        - description
        - days
        - hh
        - i
        - command
      title: Добавление задачи cron
    Cron_2.Methods.Commands.Add.Exec:
      nullable: true
      type: integer
    Models.CronCommands:
      properties:
        SERVICE():
          nullable: true
        command:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        days:
          type: string
          nullable: true
        hh:
          type: string
          nullable: true
        i:
          type: string
          nullable: true
        'on':
          type: integer
          nullable: true
        task_create_time:
          nullable: true
        task_start_time:
          nullable: true
        task_status:
          type: string
          nullable: true
    Cron_2.Methods.Commands.Del:
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        command:
          $ref: '#/components/schemas/command'
      required:
        - filters
        - command
      title: Удаление задачи cron
    Cron_2.Methods.Commands.Del.Exec:
      nullable: true
      type: integer
    Cron_2.Methods.Commands.Edit:
      type: object
      properties:
        description:
          title: Описание задачи
          nullable: true
          type: string
        days:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Cron_2.Types.Days'
        hh:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Cron_2.Types.Hour'
        i:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Cron_2.Types.Minute'
        'on':
          title: Статус активности задачи
          nullable: true
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        command:
          $ref: '#/components/schemas/command'
      required:
        - filters
        - command
      title: Изменение задачи cron
    Cron_2.Methods.Commands.Edit.Exec:
      nullable: true
      type: integer
    Cron_2.Methods.Commands.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение задач cron
    Cron_2.Methods.Commands.Get.Exec:
      title: Список задач cron
      nullable: true
      type: array
    Cron_2.Methods.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение списка имен сервисов, в которых есть команды cron
    Cron_2.Methods.Get.Exec:
      title: Список имен сервисов
      nullable: true
      type: array
    TV.API.Types.BoolArray:
      type: array
      items:
        type: boolean
      title: |-
        Тип массива: boolean

        Принимает: 0|1|false|true
      description: |-
        @extends AbstractTypedArray<boolean>
        @method bool[] getValues()
        @method bool current()
    Example_2.Types.Number:
      type: integer
      enum:
        - 1
        - 2
        - 3
    Example_2.Types.EnumNumberArray:
      type: array
      items:
        $ref: '#/components/schemas/Example_2.Types.Number'
      title: |-
        Тип: enum

        Принимает: 0|1|false|true

        Хранит: false|true
    Example_2.Methods.Array.Get:
      type: object
      properties:
        ints:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        strings:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.StringArray'
        booleans:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.BoolArray'
        enum_numbers:
          allOf:
            - $ref: '#/components/schemas/Example_2.Types.EnumNumberArray'
      required:
        - ints
        - strings
        - booleans
        - enum_numbers
      title: Метод с примерами параметров типа Enum
    Example_2.Methods.Array.Get.Exec:
      title: Ассоциативный массив с результирующими переданными параетрами, и результатоми implodeQuotes() и genSet()
      description: '@type array<string, array<string, mixed>>'
      type: array
    Example_2.Methods.Custom.Get:
      type: object
      properties:
        format:
          title: |-
            Формат даты

            Не обязательный параметр строкового типа со значением по умолчанию

            Можно не указывать, но в exec() он не может быть пустым
          default: Y-m-d H:i:s
          type: string
      required: []
      title: Получение текущего времени
    Example_2.Methods.Custom.Get.Exec:
      type: string
    Example_2.Types.Letter:
      type: string
      enum:
        - a
        - b
        - c
    Example_2.Methods.Enum.Get:
      type: object
      properties:
        number:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Example_2.Types.Number'
        number2:
          allOf:
            - $ref: '#/components/schemas/Example_2.Types.Number'
        letter:
          allOf:
            - $ref: '#/components/schemas/Example_2.Types.Letter'
      required:
        - number2
        - letter
      title: Метод с примерами параметров типа Enum
    Example_2.Methods.Enum.Get.Exec:
      title: Ассоциативный массив с результирующими переданными параетрами и результатом genSet()
      type: array
    Example_2.Objects.Address:
      type: object
      properties:
        city:
          type: string
        street:
          nullable: true
          type: string
      required:
        - city
    Example_2.Objects.User:
      type: object
      properties:
        name:
          type: string
        email:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Email'
        age:
          type: integer
        address:
          allOf:
            - $ref: '#/components/schemas/Example_2.Objects.Address'
      required:
        - name
        - email
        - age
        - address
    Example_2.Methods.Object.Get:
      type: object
      properties:
        user:
          allOf:
            - $ref: '#/components/schemas/Example_2.Objects.User'
      required:
        - user
      title: Метод с примерами параметров типа Object
    Example_2.Methods.Object.Get.Exec:
      title: Ассоциативный массив с результирующими переданными параетрами и результатом genSet()
      type: array
    Example_2.Methods.Projects.Get:
      type: object
      properties:
        name:
          title: |-
            Имя проекта

            Используется для фильтрации по имени проекта, см. self::exec()

            Не обязательный параметр метода строкового типа
          nullable: true
          type: string
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение списка проектов
    Example_2.Methods.Projects.Get.Exec:
      nullable: true
      type: array
    Models.Projects:
      properties:
        COUNT(*):
          nullable: true
        IS_YOUTUBE():
          nullable: true
        IS_APP_STORE():
          nullable: true
        IS_GOOGLE_PLAY():
          nullable: true
        GEN_SEARCH_STRING():
          nullable: true
        id: {}
        user_id:
          nullable: true
        name:
          type: string
          nullable: true
        url:
          nullable: true
        date:
          nullable: true
        last_view:
          nullable: true
        folder_id:
          type: integer
          nullable: true
        folder_name:
          nullable: true
        task_time_delete:
          nullable: true
        task_method_name:
          nullable: true
        task_method_params_json:
          nullable: true
        site:
          nullable: true
        update:
          nullable: true
        status_positions:
          type: string
          nullable: true
        positions_time:
          nullable: true
        positions_date:
          nullable: true
        positions_percent:
          nullable: true
        status_positions_time:
          nullable: true
        status_positions_date:
          nullable: true
        status_positions_percent:
          nullable: true
        status_positions_by_keywords:
          nullable: true
        status_volumes:
          nullable: true
        status_claster:
          nullable: true
        status_audit:
          nullable: true
        status_audit_time:
          nullable: true
        status_audit_percent:
          nullable: true
        status_watcher:
          nullable: true
        status_watcher_percent:
          nullable: true
        status_indexing:
          nullable: true
        status_indexing_percent:
          nullable: true
        status_sitemap:
          nullable: true
        status_sitemap_percent:
          nullable: true
        status_urlsUpdater:
          nullable: true
        'on':
          nullable: true
        subdomains:
          nullable: true
        filter:
          nullable: true
        auto_correct:
          nullable: true
        with_snippets:
          nullable: true
        do_snapshots:
          nullable: true
        do_snapshots_with_snippets:
          nullable: true
        report_last_time:
          nullable: true
        common_traffic:
          nullable: true
        guest_link_right:
          nullable: true
        is_task:
          nullable: true
        count_keywords:
          nullable: true
        right:
          nullable: true
        ord:
          nullable: true
        favorite:
          nullable: true
        tags:
          nullable: true
        user_email:
          nullable: true
        user_currency:
          nullable: true
        broker_count_campaigns:
          nullable: true
        broker_count_banners:
          nullable: true
        broker_count_banners_off:
          nullable: true
        domain_expire:
          nullable: true
        ssl_expire:
          nullable: true
        competitor:
          nullable: true
        competitor_ord:
          nullable: true
        pos_summary_up:
          nullable: true
        pos_summary_stay:
          nullable: true
        pos_summary_down:
          nullable: true
        pos_summary_avg:
          nullable: true
        pos_summary_visibility:
          nullable: true
        audit_server_location:
          nullable: true
        audit_auto_collect_pages:
          type: integer
          nullable: true
        audit_auto_collect_pages_limit:
          type: integer
          nullable: true
        indexing_searchers_keys:
          type: array
          nullable: true
        watcher_types:
          type: array
          nullable: true
    Informer_2.Methods.Config.Edit:
      type: object
      properties:
        name:
          title: Название типа. Содержит название провайдера и метода
          type: string
        value:
          title: Значение
          type: integer
      required:
        - name
        - value
      title: Настройка уведомлений
    Informer_2.Methods.Config.Edit.Exec:
      nullable: true
      type: integer
    Informer_2.Methods.Config.Get:
      type: object
      properties: {}
      required: []
      title: Получение настроек уведомлений
    Informer_2.Methods.Config.Get.Exec:
      type: array
    Informer_2.Methods.Info.Get:
      type: object
      properties: {}
      required: []
      title: Получение информации о сообщениях в информере
    Informer_2.Methods.Info.Get.Exec:
      type: array
    Informer_2.Methods.Informer.Del:
      type: object
      properties:
        ids:
          title: ID сообщений для удаления
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
      required:
        - ids
      title: Удаление сообщений из инфомера
    Informer_2.Methods.Informer.Del.Exec:
      type: integer
    Informer_2.Methods.Informer.Get:
      type: object
      properties:
        limit:
          $ref: '#/components/schemas/limit'
      required: []
      title: Получение списка сообщений в информере
    Informer_2.Methods.Informer.Get.Exec:
      type: array
    Keywords_2.Methods.Keywords.Get:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        group_folder_id_depth:
          title: При фильтрации по ID папок также искать в подпапках
          type: boolean
        show_trash:
          title: Искать в корзине
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - project_id
        - fields
        - orders
        - filters
        - offset
      title: Получение списка запросов проекта
    Keywords_2.Methods.Keywords.Get.Exec:
      nullable: true
    Models.Keywords:
      properties:
        COUNT(*):
          nullable: true
        LENGTH(name):
          nullable: true
        tagsNames():
          nullable: true
        id: {}
        phrase_id:
          nullable: true
        project_id:
          nullable: true
        group_id:
          nullable: true
        tags:
          nullable: true
        target:
          nullable: true
        ord:
          nullable: true
        name:
          nullable: true
        group_name:
          nullable: true
        group_on:
          nullable: true
        group_ord:
          nullable: true
        group_folder_id:
          nullable: true
        group_folder_path:
          nullable: true
        group_folder_ord:
          nullable: true
        target_status:
          nullable: true
          example:
            need set qualifiers:
              - region_index
        position:
          type: integer
          nullable: true
          example:
            need set qualifiers:
              - date
              - project_id
              - region_index
        relevant_url:
          type: string
          nullable: true
          example:
            need set qualifiers:
              - date
              - project_id
              - region_index
        snippet_title:
          type: string
          nullable: true
          example:
            need set qualifiers:
              - date
              - project_id
              - region_index
        snippet_body:
          type: string
          nullable: true
          example:
            need set qualifiers:
              - date
              - project_id
              - region_index
        snippet_ext:
          type: string
          nullable: true
          example:
            need set qualifiers:
              - date
              - project_id
              - region_index
        visitors:
          type: integer
          nullable: true
          example:
            need set qualifiers:
              - date
              - project_id
              - region_index
        positionStatus:
          nullable: true
          example:
            need set qualifiers:
              - region_index
        volume:
          nullable: true
          example:
            need set qualifiers:
              - region_key
              - searcher_key
              - type
        cost_forecast:
          nullable: true
          example:
            need set qualifiers:
              - position
              - region_key
              - searcher_key
    Keywords_2.Methods.Volumes.Get:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        searcher_key:
          title: Ключ поисковика
          type: integer
        region_key:
          title: Ключ региона
          type: integer
        type:
          title: Индекс тип частоты
          type: integer
        group_id:
          title: Id группы
          nullable: true
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - project_id
        - searcher_key
        - region_key
        - type
        - fields
        - orders
        - filters
        - offset
      title: Получение частоты проекта или одной группы
    Keywords_2.Methods.Volumes.Get.Exec:
      nullable: true
      type: number
    Models.Groups:
      properties:
        COUNT(*):
          nullable: true
        id: {}
        project_id:
          nullable: true
        folder_id:
          nullable: true
        name:
          nullable: true
        'on':
          nullable: true
        status:
          nullable: true
        ord:
          nullable: true
        folder_path:
          nullable: true
        folder_ord:
          nullable: true
        count_keywords:
          nullable: true
        volume:
          nullable: true
          example:
            need set qualifiers:
              - region_key
              - searcher_key
              - type
        POSITIONS_AVG():
          nullable: true
          example:
            need set qualifiers:
              - date
              - project_id
              - region_index
        POSITIONS_TOP10():
          nullable: true
          example:
            need set qualifiers:
              - date
              - project_id
              - region_index
        POSITIONS_VISIBILITY():
          nullable: true
          example:
            need set qualifiers:
              - date
              - project_id
              - region_index
    Mentions_2.Methods.Readed.Edit:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        readed:
          title: Флаг "прочитано"
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - filters
      title: Изменение флага "прочитано"
    Mentions_2.Methods.Readed.Edit.Exec:
      type: integer
    Mentions_2.Methods.Rules.Add:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        name:
          title: Имя
          type: string
        any:
          title: Ключевые слова, любое из
          type: array
        plus:
          title: Ключевые слова, все из
          type: array
        minus:
          title: Ключевые слова, ни одно из
          type: array
      required:
        - project_id
        - name
      title: Добавление правила
    Mentions_2.Methods.Rules.Add.Exec:
      type: integer
    Mentions_2.Methods.Rules.Del:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - filters
      title: Удаление правила
    Mentions_2.Methods.Rules.Del.Exec:
      type: integer
    Models.Mentions.Rules:
      properties:
        id: {}
        project_id:
          nullable: true
        name:
          nullable: true
        any:
          nullable: true
        plus:
          nullable: true
        minus:
          nullable: true
        status:
          nullable: true
        report_last_time:
          nullable: true
        searcher_depth_by_keys:
          nullable: true
        searcher_key:
          nullable: true
        project_user_id:
          nullable: true
        project_competitor:
          nullable: true
        project_right:
          nullable: true
    Mentions_2.Methods.Rules.Get:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - project_id
        - fields
        - orders
        - filters
        - offset
      title: Получение списка правил
    Mentions_2.Methods.Rules.Get.Exec:
      type: array
    Mentions_2.Types.SearcherKey:
      type: integer
      enum:
        - 101
        - 102
        - 103
      title: Доступные ключи поисковика
    Mentions_2.Methods.Searchers.Add:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        rule_id:
          title: ID правила
          type: integer
        key:
          allOf:
            - $ref: '#/components/schemas/Mentions_2.Types.SearcherKey'
        enabled:
          title: Включен ли поисковик
          default: true
          type: boolean
        depth:
          title: |-
            Глубина сбора упоминаний (x100)

            От 1 до 10
          nullable: true
          type: integer
      required:
        - project_id
        - rule_id
        - key
      title: |-
        Добавление поисковика

        Изменит, если уже существует
    Mentions_2.Methods.Searchers.Add.Exec:
      type: integer
    Mentions_2.Methods.Searchers.Del:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        rule_id:
          title: ID правила
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - rule_id
        - filters
      title: Удаление поисковика
    Mentions_2.Methods.Searchers.Del.Exec:
      type: integer
    Models.Mentions.Searchers:
      properties:
        rule_id:
          nullable: true
        key:
          nullable: true
        project_id:
          nullable: true
        depth:
          nullable: true
        enabled:
          nullable: true
        changed:
          nullable: true
    Mentions_2.Methods.Searchers.Get:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        rule_id:
          title: ID правила
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - project_id
        - rule_id
        - fields
        - orders
        - filters
        - offset
      title: Получение списка поисковиков
    Mentions_2.Methods.Searchers.Get.Exec:
      type: array
    Mentions_2.Types.Sentiment:
      type: string
      enum:
        - bad
        - neutral
        - good
      title: Тональность
    Mentions_2.Methods.Sentiment.Edit:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        sentiment:
          title: Тональность
          default: neutral
          allOf:
            - $ref: '#/components/schemas/Mentions_2.Types.Sentiment'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - filters
      title: Изменение тональности
    Mentions_2.Methods.Sentiment.Edit.Exec:
      type: integer
    OpenAPI_2.Methods.Download.Get:
      type: object
      properties:
        format:
          title: Формат схемы Open API, json или yaml
          default: json
          type: string
        incremental:
          title: |-
            Использовать инкрементальный вывод схемы

            В этом режиме в схему будут добавляться только изменения за один час
          type: boolean
      required: []
      title: |-
        Создать Open API схемы и скачать в zip

        В результате вернет zip файл в потоке вывода
      description: '@see https://editor.swagger.io/ Редактор Open API'
    Payments_2.Methods.Companies.Get:
      type: object
      properties: {}
      required: []
      title: Получение компании пользователя, через которых, были совершены платежи
    Payments_2.Methods.Companies.Get.Exec:
      nullable: true
      type: array
    Payments_2.Methods.ContractSign.Edit:
      type: object
      properties:
        requisites_id:
          title: Номер договора/оферты для платежа
          type: string
        signed:
          title: Флаг обозначающий подписан ли контракт
          type: boolean
      required:
        - requisites_id
        - signed
      title: Подписание контракта (только для админов)
    Payments_2.Methods.ContractSign.Edit.Exec:
      nullable: true
      type: integer
    Payments_2.Methods.NextRequisitesId.Edit:
      type: object
      properties:
        next_requisites_id:
          title: ID реквизитов для продления тарифа
          type: string
      required:
        - next_requisites_id
      title: Изменение платежных реквизитов тарифа
    Payments_2.Methods.NextRequisitesId.Edit.Exec:
      nullable: true
      type: integer
    Payments_2.Methods.Subscriptions.Edit:
      type: object
      properties:
        subscription_plan_id:
          title: Id нового плана подписки
          type: string
        subscription_cycle:
          title: Значение цикла новой подписки
          allOf:
            - $ref: '#/components/schemas/Bank_2.Types.Subscriptions.Cycle'
      required:
        - subscription_plan_id
        - subscription_cycle
      title: |-
        Изменения подписки сейчас

        Реализует две взаимоисключающие стратегии:

        - Проведение доплаты по текущей подписке
        - Остановка текущей подписки и создание новой
           - Новая подписка получит скидку на первый платеж с учетом амортизации оплаты на действующую подписку
           - После оплаты новой подписки действующая подписка будет досрочно завершена

        Выбор стратегии зависит от типа управления подпиской
      description: '@see Bank_2\Types\Subscriptions\Manager'
    Payments_2.Methods.Subscriptions.Edit.Exec:
      title: |-
        Пустая строка в случае успешной автоматической оплаты

        Ссылка на оплату, в случае успешного выставления счета, если требуется участие пользователя
      nullable: true
      type: string
    Payments_2.Methods.UrTinkoffCreateApplication.Add:
      type: object
      properties: {}
      required: []
      title: Отправка заявки на подключение Тинькофф Бизнес
    Payments_2.Methods.UrTinkoffCreateApplication.Add.Exec:
      nullable: true
      type: integer
    Payments_2.Methods.ValidateMerchantCardAP.Get:
      type: object
      properties:
        validation_url:
          title: URL для запроса к Apple Pay
          type: string
      required:
        - validation_url
      title: Валидация домена для подтверждения оплаты Apple Pay (system = card_ap)
    Payments_2.Methods.ValidateMerchantCardAP.Get.Exec:
      nullable: true
      type: array
    Positions_2.Types.SearcherKey:
      type: integer
      enum:
        - 0
        - 20
        - 21
        - 1
        - 4
        - 5
        - 7
        - 8
        - 9
      title: Ключ поисковой системы для проверки позиций
    Positions_2.Methods.Searchers.Add:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        searcher_key:
          title: Ключ ПС
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.SearcherKey'
      required:
        - project_id
        - searcher_key
      title: Добавление ПС
    Positions_2.Methods.Searchers.Add.Exec:
      nullable: true
    Positions_2.Methods.Searchers.Del:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        searcher_key:
          title: Id проекта
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.SearcherKey'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - searcher_key
        - filters
      title: Удаление ПС
    Positions_2.Methods.Searchers.Del.Exec:
      nullable: true
    Positions_2.Types.Settings.GuestLinkRight:
      type: string
      enum:
        - volume
        - frequency
        - visitors
        - dates
        - summary
        - graphics
        - competitors
      title: Право для гостевых ссылок
    Positions_2.Types.Settings.GuestLinkRights:
      type: array
      items:
        $ref: '#/components/schemas/Positions_2.Types.Settings.GuestLinkRight'
      title: Права для гостевых ссылок
    Positions_2.Methods.Settings.Edit:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        with_snippets:
          title: Собирать ли снипиты
          nullable: true
          type: boolean
        do_snapshots:
          title: |-
            Глубина сбора снимков

            enum(0..9)
            - 0: не собирать
            - 1: 10
            - 8: 80
            - 9: 100
          nullable: true
          type: integer
        do_snapshots_with_snippets:
          title: Собирать ли сниппеты в снимках
          nullable: true
          type: boolean
        subdomains:
          title: |-
            Учитывать ли поддомены при проверке

            - 1: находить позиции сайта, являющиеся поддоменом к основному
          nullable: true
          type: boolean
        filter:
          title: |-
            Ограничения

            - 0: без ограничений
            - 1: умеренный
            - 2: семейный поиск
          nullable: true
          type: integer
        auto_correct:
          title: Учитывать ли регион
          nullable: true
          type: boolean
        common_traffic:
          title: |-
            Способ получения трафика

            - 0: с учетом регионов
            - 1: без учета регионов
          nullable: true
          type: boolean
        guest_link_right:
          title: Права для гостевых ссылок
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.Settings.GuestLinkRights'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - filters
      title: Установка общих настроек проверки позиций проекта
    Positions_2.Methods.Settings.Edit.Exec:
      nullable: true
    Projects_2.Types.Analytics.Axe:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 11
        - 12
        - 13
      title: Номер метрики
    Projects_2.Types.Analytics.Base:
      type: integer
      enum:
        - 1
        - 11
        - 13
        - 2
        - 3
        - 6
        - 4
        - 5
        - 12
      title: Тип группировки
    Projects_2.Methods.Analytics.Add:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        axe:
          title: Номер метрики
          allOf:
            - $ref: '#/components/schemas/Projects_2.Types.Analytics.Axe'
        base_filter:
          title: Тип группировки
          allOf:
            - $ref: '#/components/schemas/Projects_2.Types.Analytics.Base'
        insert_after_id:
          title: Id графика, после которого нужно вставить новый график
          nullable: true
          type: integer
        narrow:
          title: Маленький график
          nullable: true
          type: integer
        share:
          title: Сделать график доступным другим пользователям проекта (может настраивать только владелец проекта)
          nullable: true
          type: integer
      required:
        - project_id
        - axe
        - base_filter
      title: Добавление графика
    Projects_2.Methods.Analytics.Add.Exec:
      nullable: true
      type: integer
    Projects_2.Methods.Analytics.Del:
      type: object
      properties:
        id:
          title: ID графика
          type: integer
      required:
        - id
      title: Удаление графика
    Projects_2.Methods.Analytics.Del.Exec:
      nullable: true
      type: integer
    Projects_2.Methods.Analytics.Edit:
      type: object
      properties:
        id:
          title: ID графика
          type: integer
        data:
          title: Данные графика
          nullable: true
          type: string
        insert_after_id:
          title: Id графика, после которого нужно вставить новый график
          nullable: true
          type: integer
        narrow:
          title: Маленький график
          nullable: true
          type: integer
        share:
          title: Сделать график доступным другим пользователям проекта (может настраивать только владелец проекта)
          nullable: true
          type: integer
      required:
        - id
      title: Настройка графика
    Projects_2.Methods.Analytics.Edit.Exec:
      nullable: true
      type: integer
    Projects_2.Methods.Analytics.Get:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        id:
          title: ID
          nullable: true
          type: integer
      required:
        - project_id
      title: Получение списка графиков
    Projects_2.Methods.Analytics.Get.Exec:
      nullable: true
      type: array
    TV.API.Types.UrlShort:
      type: string
      title: |-
        Краткий URL в punycode, не может содержать UTF-символы:
        - без схемы
        - без "www." в домене
        - без слешей на конце
        - без "<" и ">"

        Будет проивзедено автоматическое приведение к формату

        Разрешен ввод пустой строки, для удаления значения url
    TV.API.Types.UrlShortArray:
      type: array
      items:
        $ref: '#/components/schemas/TV.API.Types.UrlShort'
      title: 'Тип массива: UrlShort[]'
      description: |-
        @extends AbstractStringArray<UrlShort>
        @method UrlShort[] getValues()
        @method UrlShort current()
        @see \TV\API\Types\UrlShort
    Projects_2.Methods.Competitors.Add:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        urls:
          title: Список url конкурентов
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.UrlShortArray'
        names:
          title: Список имен конкурентов (если указан, должен быть такой же длины как urls)
          nullable: true
          type: array
      required:
        - project_id
        - urls
      title: |-
        Добавление конкурента

        Ограничения: не более Projects_2\Competitors::MAX_COMPETITORS_PER_PROJECT конкурентов в одном проекте
    Projects_2.Methods.Competitors.Add.Exec:
      type: array
    Projects_2.Methods.Competitors.Del:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        ids:
          title: ID конкурентов
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        urls:
          title: Url конкурентов
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.UrlShortArray'
      required:
        - project_id
      title: |-
        Удаление конкурентов

        Обязательный параметр или ids или urls
    Projects_2.Methods.Competitors.Del.Exec:
      type: integer
    Projects_2.Methods.Competitors.Get:
      type: object
      properties:
        fields:
          nullable: true
          default:
            - id
            - name
            - site
            - 'on'
          type: array
        project_id:
          title: ID проекта
          type: integer
        only_enabled:
          title: Вернуть ли в результате только включенных конкурентов
          nullable: true
          type: boolean
        include_project:
          title: Включить ли в результат основной проект
          nullable: true
          type: boolean
      required:
        - project_id
      title: Получение списка конкурентов
    Projects_2.Methods.Competitors.Get.Exec:
      nullable: true
      type: array
    Projects_2.Methods.Folders.Add:
      type: object
      properties:
        name:
          title: Имя папки
          type: string
      required:
        - name
      title: Добавление папки
    Projects_2.Methods.Folders.Add.Exec:
      title: '@returns ?int id добавленной папки'
      nullable: true
      type: integer
    Projects_2.Methods.Folders.Del:
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Удаление папок
    Projects_2.Methods.Folders.Del.Exec:
      nullable: true
      type: integer
    Models.Projects.Folders:
      properties:
        id: {}
        user_id:
          nullable: true
        name:
          nullable: true
        order:
          nullable: true
    Projects_2.Methods.Folders.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение списка папок
    Projects_2.Methods.Folders.Get.Exec:
      nullable: true
    Projects_2.Methods.Projects.Add:
      type: object
      properties:
        url:
          title: Url проекта (домен или url страницы)
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.UrlShort'
        name:
          title: Имя проекта (по умолчанию равен url проекта)
          nullable: true
          type: string
        tags:
          title: enum(1..10) tags - теги проекта (по умолчанию - [1])
          nullable: true
          default:
            - 1
          type: array
        folder_id:
          title: Id папки, к которой будет привязан проект
          nullable: true
          type: integer
        'on':
          title: Активность проекта
          nullable: true
          type: integer
        is_task:
          title: Является ли проект задачей
          nullable: true
          type: boolean
      required:
        - url
      title: Добавление проекта
    Projects_2.Methods.Projects.Add.Exec:
      nullable: true
    Projects_2.Methods.Projects.Del:
      type: object
      properties:
        is_tasks:
          title: Является ли проект - задачей
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Удаление проектов
    Projects_2.Methods.Projects.Del.Exec:
      type: integer
    Projects_2.Methods.Projects.Get:
      type: object
      properties:
        show_owner_balance:
          title: Добавить ли в результаты баланс владельца для гостевых проектов
          nullable: true
          type: boolean
        show_site_stat:
          title: Добавить ли в результат дополнительно собираемую инфомрацию (Яндекс ИКС)
          nullable: true
          type: boolean
        show_searchers_and_regions:
          title: |-
            Добавить в результат список ПС и Регионов, привязанных к проекту

            - 1 - включенные
            - 2 - все
          type: integer
        include_positions_summary:
          title: Добавить в результат сводку проверки позиций
          description: '@see /get/positions_2/summary/'
          nullable: true
          type: boolean
        include_positions_summary_params:
          title: Добавить в результат сводку с указанными параметрами
          description: '@deprecated 2026-02-01'
          nullable: true
          deprecated: true
          type: array
        is_task:
          title: Является ли проект задачей
          nullable: true
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение списка проектов
    Projects_2.Methods.Projects.Get.Exec:
      nullable: true
      type: array
    Projects_2.Methods.Rights.Del:
      type: object
      properties:
        email:
          title: Email пользователя (если пользователь не зарегистрирован будет выслано приглашение)
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Email'
        projects_ids:
          title: |-
            ID проектов

            Вместо project_ids можно укзывать project_id
          nullable: true
          type: array
        project_id:
          title: |-
            ID проекта

            Вместо project_id можно укзывать projects_ids
          nullable: true
          type: integer
      required:
        - email
      title: Удаление прав у пользователя
    Projects_2.Methods.Rights.Del.Exec:
      nullable: true
      type: integer
    Projects_2.Methods.Rights.Edit:
      type: object
      properties:
        projects_ids:
          title: Вместо project_ids можно укзывать project_id
          nullable: true
          type: array
        email:
          title: Email пользователя (если пользователь не зарегистрирован будет выслано приглашение)
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Email'
        rights:
          title: Побитовая маска прав
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.BoolArray'
        project_id:
          title: |-
            ID проекта

            Вместо project_id можно укзывать projects_ids
          nullable: true
          type: integer
        user_name:
          title: Имя гостевого пользователя, назначаемое хозяином проекта
          nullable: true
          type: string
        limit:
          title: Лимит трат пользователем в месяц
          nullable: true
          type: number
      required:
        - email
      title: Изменение прав на проект
    Projects_2.Methods.Rights.Edit.Exec:
      nullable: true
      type: integer
    Projects_2.Methods.Rights.Get:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
      required:
        - project_id
      title: Получение информации о настройке прав и смене владельца
    Projects_2.Methods.Rights.Get.Exec:
      type: array
    Projects_2.Methods.Status.Get:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
      required:
        - project_id
      title: |-
        Получение информации о домене и SSL сертификате
        Возвращает объект с параметрами:
        - domain_expire
        - ssl_expire
    Projects_2.Methods.Status.Get.Exec:
      allOf:
        - $ref: '#/components/schemas/stdClass'
    Projects_2.Methods.Tasks.Get:
      type: object
      properties:
        show_owner_balance:
          title: Добавить ли в результаты баланс владельца для гостевых проектов
          nullable: true
          type: boolean
        show_site_stat:
          title: Добавить ли в результат дополнительно собираемую инфомрацию (Яндекс ИКС)
          nullable: true
          type: boolean
        show_searchers_and_regions:
          title: |-
            Добавить в результат список ПС и Регионов, привязанных к проекту

            - 1 - включенные
            - 2 - все
          type: integer
        include_positions_summary:
          title: Добавить в результат сводку проверки позиций
          description: '@see /get/positions_2/summary/'
          nullable: true
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение списка задач
    Projects_2.Methods.Tasks.Get.Exec:
      nullable: true
    Quiz_2.Methods.Questions.AbstractRegular:
      type: object
      properties: {}
      required: []
    Quiz_2.Methods.Questions.AbstractRegular.Exec:
      title: |-
        Непосредственный вызов API функции

        Запрещено делать публичной, это приведет к поломке preCall()

        В описании к функции отвечать на вопрос: `Что является результатом запроса?` Например: `Список пользователей`

        Не менять `protected`, проверка проводится при генерации схем в `TV\API\Objects\ClassAPIMethodInfo`
      nullable: true
    Quiz_2.Types.Questions.Type:
      type: string
      enum:
        - ONE
        - SEVERAL
        - TEXT
      title: Тип вопроса
    Quiz_2.Methods.Questions.Add:
      type: object
      properties:
        quiz_id:
          title: ID теста
          type: string
        type:
          allOf:
            - $ref: '#/components/schemas/Quiz_2.Types.Questions.Type'
        text:
          title: Текст вопроса
          nullable: true
          type: string
        response_text:
          title: Текст, появляющийся после ответа
          nullable: true
          type: string
        score:
          title: Баллы за верный ответ на вопрос
          nullable: true
          type: integer
      required:
        - quiz_id
        - type
      title: Добавление вопроса
    Quiz_2.Methods.Questions.Add.Exec:
      nullable: true
      type: integer
    Quiz_2.Methods.Questions.Del:
      type: object
      properties:
        id:
          title: ID вопроса
          type: integer
      required:
        - id
      title: Удаление вопроса
    Quiz_2.Methods.Questions.Del.Exec:
      nullable: true
      type: integer
    Quiz_2.Methods.Questions.Edit:
      type: object
      properties:
        id:
          title: ID вопроса
          type: integer
        type:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Quiz_2.Types.Questions.Type'
        text:
          title: Тест вопроса
          nullable: true
          type: string
        score:
          title: Баллы за верный ответ на вопрос
          nullable: true
          type: integer
        response_text:
          title: Текст, появляющийся после ответа
          nullable: true
          type: string
        answers:
          title: Варианты ответа
          nullable: true
          type: array
      required:
        - id
      title: Редактировать вопрос
    Quiz_2.Methods.Questions.Edit.Exec:
      nullable: true
      type: integer
    Quiz_2.Methods.Questions.Get:
      type: object
      properties:
        user_id:
          title: ID пользователя, ответы которого нужно вернуть (только для админов)
          nullable: true
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение вопроса
    Quiz_2.Methods.Questions.Get.Exec:
      title: Получение вопроса
      nullable: true
      type: array
    Models.Quizes.Questions:
      properties:
        ANSWERS():
          nullable: true
        RESPONSES():
          nullable: true
        IS_PASSED():
          nullable: true
        id: {}
        quiz_id:
          nullable: true
        type:
          nullable: true
        text:
          nullable: true
        response_text:
          nullable: true
        score:
          nullable: true
        likes_count:
          nullable: true
        ord:
          nullable: true
    Quiz_2.Methods.QuestionsResponses.Add:
      type: object
      properties:
        question_id:
          title: ID вопроса
          type: integer
        values:
          title: Ответы
          type: array
      required:
        - question_id
        - values
      title: Добавление ответа
    Quiz_2.Methods.QuestionsResponses.Add.Exec:
      nullable: true
      type: integer
    Quiz_2.Methods.Results.Del:
      type: object
      properties:
        quiz_id:
          title: ID теста
          type: string
      required:
        - quiz_id
      title: Удаление результатов предыдущих попытки пройти тест
    Quiz_2.Methods.Results.Del.Exec:
      nullable: true
      type: integer
    Quiz_2.Methods.Results.Get:
      type: object
      properties:
        ids:
          title: ID тестов
          type: array
      required:
        - ids
      title: Получение своих результатов прохождения теста
    Quiz_2.Methods.Results.Get.Exec:
      nullable: true
      type: array
    Quiz_2.Methods.ResultsUsers.Get:
      type: object
      properties:
        quiz_id:
          title: ID теста
          type: string
      required:
        - quiz_id
      title: Получение участников теста
    Quiz_2.Methods.ResultsUsers.Get.Exec:
      nullable: true
      type: array
    Quiz_2.Methods.WithQuestions.Get:
      type: object
      properties:
        quiz_id:
          title: ID теста
          type: string
        user_id:
          title: ID пользователя, ответы которого нужно вернуть (только для админов)
          nullable: true
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - quiz_id
        - fields
        - orders
        - filters
        - offset
      title: Получение теста с вопросами
    Quiz_2.Methods.WithQuestions.Get.Exec:
      nullable: true
      type: array
    Recurring_2.Methods.RecurringCard.Del:
      type: object
      properties:
        card_id:
          title: Id карты в системе Тинькофф
          type: integer
      required:
        - card_id
      title: Удалить привязанную карту (system = card)
    Recurring_2.Methods.RecurringCard.Del.Exec:
      nullable: true
    Recurring_2.Methods.RecurringCard.Get:
      type: object
      properties: {}
      required: []
      title: Получение привязанных карт пользователя
    Recurring_2.Methods.RecurringCard.Get.Exec:
      nullable: true
    TV.API.Types.EmailArray:
      type: array
      items:
        $ref: '#/components/schemas/TV.API.Types.Email'
      title: 'Тип массива: Email[]'
      description: |-
        @extends AbstractStringArray<Email>
        @method Email[] getValues()
        @method Email current()
        @see \TV\API\Types\Email
    Keywords_2.Types.Volumes.Type:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 5
        - 6
      title: Тип частоты
    Keywords_2.Types.Volumes.Types:
      type: array
      items:
        $ref: '#/components/schemas/Keywords_2.Types.Volumes.Type'
      title: Типы частоты
    Schedule_2.Types.Settings.Period:
      type: string
      enum:
        - none
        - month
        - week
        - weekly
      title: Период отправки отчета
    Schedule_2.Types.Settings.Format:
      type: string
      enum:
        - csv
        - xlsx
        - pdf
        - html
      title: Формат отчета
    Schedule_2.Types.Settings.Formats:
      type: array
      items:
        $ref: '#/components/schemas/Schedule_2.Types.Settings.Format'
      title: Форматыы отчета
      description: '@see Format'
    Schedule_2.Types.Settings.AdditionalField:
      type: string
      enum:
        - summary
        - traffic
        - url
        - frequency
      title: Дополнительное поле отчета проверки позиций
    Schedule_2.Types.Settings.AdditionalFields:
      type: array
      items:
        $ref: '#/components/schemas/Schedule_2.Types.Settings.AdditionalField'
      title: Дополнительные поля отчета проверки позиций
      description: '@see AdditionalField'
    Schedule_2.Methods.Settings.Edit:
      type: object
      properties:
        type:
          title: Тип расписания
          description: '@see Schedule_2\Mods\Schedule::$availableTypes'
          type: string
        target_id:
          title: Id объекта, для которого требуется получить параметры расписания
          type: integer
        target_id_2:
          title: Id второго объекта, для которого требуется получить параметры расписания (обязательно для mentions)
          nullable: true
          type: integer
        emails:
          title: Список email для отправки отчетов
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.EmailArray'
        send_to_informer:
          title: Отправить ли уведомление в информер
          nullable: true
          type: boolean
        telegram_chats_ids:
          title: Id чатов телеграмма для рассылки уведомлений
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        stop_repeated_check:
          title: Не совершать ли повторную проверку
          nullable: true
          type: boolean
        regions_keys_by_searcher_key:
          title: |-
            Ключ региона для проверки частосты

            Разрешено указывать только Яндекс и Google (0, 1)
          nullable: true
          type: array
        volumes_types:
          title: Имеет смысл только для Яндекс
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Volumes.Types'
        with_competitors:
          title: Добавить ли в отчет позиции конкурентов
          nullable: true
          type: boolean
        period:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Schedule_2.Types.Settings.Period'
        formats:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Schedule_2.Types.Settings.Formats'
        additional_fields:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Schedule_2.Types.Settings.AdditionalFields'
        link_sitemap_xml:
          title: Ссылка на sitemap
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Url'
        regexp_sitemap:
          title: Регулярное выражение для карты сайта
          nullable: true
          type: string
        regexp_audit:
          title: Регулярное выражение для аудита
          nullable: true
          type: string
        regexp_watcher:
          title: Регулярное выражение для радара
          nullable: true
          type: string
        regexp_indexing:
          title: Регулярное выражение для индексации
          nullable: true
          type: string
        max_urls_count:
          title: Ограничение по количеству url получаемых при проверке
          nullable: true
          type: integer
      required:
        - type
        - target_id
      title: Изменить дополнительные параметры расписания
    Schedule_2.Methods.Settings.Edit.Exec:
      nullable: true
      type: integer
    Schedule_2.Methods.Settings.Get:
      type: object
      properties:
        type:
          title: Тип расписания
          description: '@see Schedule_2\Mods\Schedule::$availableTypes'
          type: string
        target_id:
          title: Id объекта, для которого требуется получить расписание
          type: integer
        target_id_2:
          title: Id второго объекта, для которого требуется получить расписание (обзятельно для mentions)
          nullable: true
          type: integer
      required:
        - type
        - target_id
      title: |-
        Получить дополнительные параметры расписания

        Для каждого типа могут быть свои параметры
      description: '@see Schedule_2\Mods\Settings'
    Schedule_2.Methods.Settings.Get.Exec:
      type: array
    Sms_2.Methods.CheckPIN.Get:
      type: object
      properties:
        pin:
          title: Код подтверждения
          type: string
        phones:
          title: Телефон/массив или строка(через запятую) телефонов, на которые надо отправить код подтверждения
          description: '@type string | array'
          nullable: true
      required:
        - pin
      title: Проверить код для подтверждения действия
    Sms_2.Methods.CheckPIN.Get.Exec:
      type: string
    Sms_2.Methods.SendPIN.Get:
      type: object
      properties:
        phones:
          title: Телефон/массив или строка(через запятую) телефонов, на которые надо отправить код подтверждения
          description: '@type string | array'
          nullable: true
      required: []
      title: Отправить код для подтверждения действия
    Sms_2.Methods.SendPIN.Get.Exec:
      type: boolean
    Templates_2.Methods.AvailableFieldsData.Get:
      type: object
      properties:
        target_type:
          allOf:
            - $ref: '#/components/schemas/Templates_2.Types.TargetType'
      required:
        - target_type
      title: Получение данных доступных столбцов для выборки
    Templates_2.Methods.AvailableFieldsData.Get.Exec:
      type: array
    Templates_2.Methods.Fields.Del:
      type: object
      properties:
        target_type:
          allOf:
            - $ref: '#/components/schemas/Templates_2.Types.TargetType'
        target_subtype:
          title: Подтип данных (место использования)
          type: integer
        target_id:
          title: Id шаблона
          nullable: true
          type: integer
      required:
        - target_type
      title: Удаление сохраненного списка столбцов
    Templates_2.Methods.Fields.Del.Exec:
      nullable: true
      type: integer
    Templates_2.Methods.Fields.Edit:
      type: object
      properties:
        target_type:
          allOf:
            - $ref: '#/components/schemas/Templates_2.Types.TargetType'
        target_subtype:
          title: Подтип данных (место использования)
          type: integer
        target_id:
          title: Id целевого проекта
          nullable: true
          type: integer
        properties:
          title: Свойства шаблона
          type: array
        fields:
          $ref: '#/components/schemas/fields'
      required:
        - target_type
      title: Сохранение списка столбцов
    Templates_2.Methods.Fields.Edit.Exec:
      nullable: true
      type: integer
    Templates_2.Methods.Fields.Get:
      type: object
      properties:
        target_type:
          allOf:
            - $ref: '#/components/schemas/Templates_2.Types.TargetType'
        target_subtype:
          title: Подтип данных (место использования)
          type: integer
        target_id:
          title: Id целевого проекта
          nullable: true
          type: integer
      required:
        - target_type
      title: Получение сохраненного списока столбцов
    Templates_2.Methods.Fields.Get.Exec:
      type: array
    Templates_2.Methods.FieldsProperties.Get:
      type: object
      properties:
        target_type:
          allOf:
            - $ref: '#/components/schemas/Templates_2.Types.TargetType'
        target_subtype:
          title: Подтип данных (место использования)
          type: integer
        target_id:
          title: Id целевого проекта
          nullable: true
          type: integer
      required:
        - target_type
      title: Получение дополнительных параметров к списку столбцов
    Templates_2.Methods.FieldsProperties.Get.Exec:
      nullable: true
    Tickets_2.Methods.Files.Add:
      type: object
      properties:
        filename:
          title: Имя файла
          type: string
      required:
        - filename
      title: |-
        Загрузка файла на сервер

        Процесс создания сообщения в тикет не завершен
    Tickets_2.Methods.Files.Add.Exec:
      type: integer
    Tickets_2.Methods.Files.Del:
      type: object
      properties:
        name:
          title: Название дирректории
          type: string
      required:
        - name
      title: |-
        Удаление временных файлов для тикета

        Процесс создания поста не завершен
    Tickets_2.Methods.Files.Del.Exec:
      type: integer
    Tickets_2.Methods.Files.Get:
      type: object
      properties: {}
      required: []
      title: |-
        Получение списка временных файлов, загруженных для тикета

        Процесс создания поста не завершен
    Tickets_2.Methods.Files.Get.Exec:
      type: array
    Tickets_2.Methods.Messages.Add:
      type: object
      properties:
        ticket_id:
          title: Id тикета
          type: integer
        text:
          title: Текст сообщения
          type: string
        is_silent:
          title: Не проводить рассылку уведомлений
          type: boolean
      required:
        - ticket_id
        - text
      title: Добавление сообщения к тикиту
    Tickets_2.Methods.Messages.Add.Exec:
      title: Id добавленного сообщения
      nullable: true
      type: integer
    Tickets_2.Methods.Rate.Edit:
      type: object
      properties:
        id:
          title: ID тикета
          type: integer
        rate:
          title: |-
            Оценка

            Принимает оценку от 1 до 3
          nullable: true
          type: integer
        comment:
          title: Комментарий
          nullable: true
          type: string
      required:
        - id
      title: Дать оценку тикету
    Tickets_2.Methods.Rate.Edit.Exec:
      nullable: true
      type: integer
    Tickets_2.Types.Tickets.Type:
      type: string
      enum:
        - system
        - other
        - email
        - ios
        - vk
        - chrome
        - twitter
        - facebook
        - telegram
        - android
        - guest
      title: Откуда поступил тикет
    TV.Core.Sites.Sites:
      type: string
      enum:
        - topvisor
        - thundo
    Tickets_2.Methods.Tickets.Add:
      type: object
      properties:
        text:
          title: Текст тикета
          type: string
        type:
          default: system
          allOf:
            - $ref: '#/components/schemas/Tickets_2.Types.Tickets.Type'
        lang:
          title: Язык тикета, нужен для подгрузки правильного языка в ответных письмах через почту
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Lang'
        user_data:
          title: Данные среды пользователя
          nullable: true
          type: array
        resource:
          title: |-
            URL страницы, с которой отправлен тикет

            Не используется, если указан user_data
          nullable: true
          type: string
        is_silent:
          title: Не проводить рассылку уведомлений
          type: boolean
        email:
          title: Необходим только для незарегистрированных пользователей
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Email'
        social_user_id:
          title: |-
            Id пользователя внутри социальной сети, из которой был отправлен тикет

            Может быть в любом виде
          description: '@type string | int'
          nullable: true
        secret:
          title: |-
            Данные для авторизации в сервисе-конкуренте для переноса проектов

            Недокументированный параметр
          nullable: true
          type: string
        task_id:
          title: |-
            Номер задачи redmine, связанной с тикетом

            Недокументированный параметр
          type: integer
        site:
          title: Сайт для создания тикета
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.Core.Sites.Sites'
        tags:
          title: Доступные теги тикета
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Tags_2.Types.TagsIds'
      required:
        - text
      title: Создание тикета
    Tickets_2.Methods.Tickets.Add.Exec:
      title: Id тикета
      nullable: true
      type: integer
    Tickets_2.Methods.Tickets.Edit:
      type: object
      properties:
        id:
          title: Id тикета
          type: integer
        status:
          title: Флаг того, что тикет закрыт
          nullable: true
          type: boolean
      required:
        - id
      title: Редактирование тикета
    Tickets_2.Methods.Tickets.Edit.Exec:
      nullable: true
      type: integer
    Tickets_2.Methods.Tickets.Get:
      type: object
      properties:
        fields_messages:
          nullable: true
          type: array
        show_messages_users:
          title: Добавить в результат данные пользователей, написавших сообщения в тикеты
          type: boolean
        show_writings:
          title: Добавить в результат данные о том, что пишет собеседник
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение списка тикетов с сообщениями
    Tickets_2.Methods.Tickets.Get.Exec:
      nullable: true
      type: array
    Models.Tickets:
      properties:
        REQUISITES():
          nullable: true
        LAST_MESSAGE_TEXT():
          nullable: true
        LAST_MESSAGE_USER_ID():
          nullable: true
        READED(0):
          nullable: true
        READED(1):
          nullable: true
        id: {}
        site:
          nullable: true
        user_id:
          nullable: true
        social_user_id:
          nullable: true
        type:
          nullable: true
        text:
          nullable: true
        create:
          nullable: true
        time:
          nullable: true
        status:
          nullable: true
        lang:
          nullable: true
        email:
          nullable: true
        user_data:
          nullable: true
        manager_id:
          nullable: true
        owner_readed:
          nullable: true
        answerer_readed:
          nullable: true
        admin_writing:
          nullable: true
        task_id:
          nullable: true
        tags:
          nullable: true
        rate:
          nullable: true
        rate_comment:
          nullable: true
        rate_time:
          nullable: true
        admin_comment:
          nullable: true
        VS_USER_IS_ONLINE():
          nullable: true
        vs_user_name:
          nullable: true
        vs_user_email:
          nullable: true
        vs_user_avatar:
          nullable: true
        vs_user_lastactive:
          nullable: true
        social_nickname:
          nullable: true
        social_network:
          nullable: true
        social_last_message_time:
          nullable: true
        social_name:
          nullable: true
        social_type:
          nullable: true
        social_post_id:
          nullable: true
        social_reply_to_id:
          nullable: true
        message_id:
          nullable: true
        message_user_id:
          nullable: true
        message_text:
          nullable: true
        message_data:
          nullable: true
        message_files:
          nullable: true
        message_time:
          nullable: true
        message_noticed:
          nullable: true
    Tpvsr_2.Types.Stat.Dimension.Type:
      type: string
      enum:
        - chart_data
        - counts_unique
        - referrers
        - browsers
        - oses
        - countries
      title: Тип статистики кликов по ссылке
    Tpvsr_2.Types.Stat.Dimension.Types:
      type: array
      items:
        $ref: '#/components/schemas/Tpvsr_2.Types.Stat.Dimension.Type'
      title: Типы статистики кликов по ссылке
    Tpvsr_2.Types.Stat.Dimension.Browser:
      type: string
      enum:
        - IE
        - Chrome
        - Firefox
        - Opera
        - Safari
        - Ya
        - Other
      title: Бразуер для получение информации
    Tpvsr_2.Types.Stat.Dimension.Browsers:
      type: array
      items:
        $ref: '#/components/schemas/Tpvsr_2.Types.Stat.Dimension.Browser'
      title: Бразуеры для получение информации
    Tpvsr_2.Types.Stat.Dimension.Os:
      type: string
      enum:
        - Android
        - iOS
        - WP
        - Windows
        - Macintosh
        - Linux
        - Other
      title: Операционная система
    Tpvsr_2.Types.Stat.Dimension.Oses:
      type: array
      items:
        $ref: '#/components/schemas/Tpvsr_2.Types.Stat.Dimension.Os'
      title: Операционные системы
    Tpvsr_2.Types.Stat.Dimension.Referrer:
      type: string
      enum:
        - social
        - sites
        - undefined
        - overall
      title: Место откуда перешел пользователь
    Tpvsr_2.Types.Stat.Dimension.Referrers:
      type: array
      items:
        $ref: '#/components/schemas/Tpvsr_2.Types.Stat.Dimension.Referrer'
      title: Места откуда перешел пользователь
    Tpvsr_2.Methods.Stat.Get:
      type: object
      properties:
        hash:
          title: Хэш ссылки
          type: string
        type_dimensions:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Tpvsr_2.Types.Stat.Dimension.Types'
        browser_dimensions:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Tpvsr_2.Types.Stat.Dimension.Browsers'
        os_dimensions:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Tpvsr_2.Types.Stat.Dimension.Oses'
        referrers_dimensions:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Tpvsr_2.Types.Stat.Dimension.Referrers'
      required:
        - hash
      title: Получение статистики по ссылке
    Tpvsr_2.Methods.Stat.Get.Exec:
      nullable: true
      type: array
    Tpvsr_2.Methods.Tags.Edit:
      type: object
      properties:
        hash:
          title: Хеш ссылки
          type: string
        tags:
          title: Новые теги
          allOf:
            - $ref: '#/components/schemas/Tpvsr_2.Types.Tags'
      required:
        - hash
        - tags
      title: Изменение тегов
    Tpvsr_2.Methods.Tags.Edit.Exec:
      nullable: true
      type: integer
    Tpvsr_2.Methods.Title.Get:
      type: object
      properties:
        link:
          title: Ссылка
          type: string
      required:
        - link
      title: Получить title ссылки
    Tpvsr_2.Methods.Title.Get.Exec:
      type: string
    Urls_2.Types.Export.Output:
      type: string
      enum:
        - csv
        - csvUTF8s
        - xml
      title: Формат экспорта urls
    Urls_2.Methods.Export.Get:
      type: object
      properties:
        output:
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Export.Output'
        show_fields_names:
          title: Вывести fieldName в заголовках столбцов (для CSV)
          type: boolean
        show_fields_labels:
          title: Вывести fieldLabel в заголовках столбцов (для CSV)
          type: boolean
        forClipboard:
          title: |-
            Вернуть данные в формате для копироваиня в буфер обмена

            Не более 2000 результатов
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - output
        - fields
        - orders
        - filters
        - offset
        - project_id
      title: Экспорт urls в определенном формате
    Urls_2.Methods.Import.Add:
      type: object
      properties:
        urls:
          title: |-
            Список URL соответствующих домену проекта, допускается формат CSV

            Можно передать в виде файла с именем urls, допускаются форматы CSV и XML (допустимы сжатые XML в .gz)

            Нельзя передавать одновременно в виде массива и в виде файла или использовать совместно с link_sitemap_xml
          nullable: true
        link_sitemap_xml:
          title: Файл с содержимым для импорта, допускается формат XML (допустимы сжатые XML в .gz)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Url'
        tags:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Tags_2.Types.TagsIds'
        reset:
          title: Очистить список URL перед импортом
          type: boolean
        setActiveByRegexpByType:
          title: |-
            Недокументириуемый параметр

            set(Audit_2\Types\Type => regexp)
          type: array
        sitemap:
          title: |-
            Флаг активности в карте сайта
            - 1 - присутствовал в прошлых версиях карты сайта
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        audit:
          title: Флаг активности в аудите
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        indexing:
          title: Флаг активности в радаре
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        watcher:
          title: Флаг активности в индексации
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        debug:
          nullable: true
          type: boolean
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - project_id
      title: |-
        Импортирование urls

        Доступные поля для импорта:
        - url
        - sitemap
        - audit
        - indexing
        - watcher
        - tags
    Urls_2.Methods.Import.Add.Exec:
      title: Информация об импортированных urls
      nullable: true
      type: object
      properties:
        '''countSended''':
          type: integer
        '''countDuplicated''':
          type: integer
        '''countAdded''':
          type: integer
        '''countChanged''':
          type: integer
      required:
        - '''countSended'''
        - '''countDuplicated'''
        - '''countAdded'''
        - '''countChanged'''
    Urls_2.Types.Tags.Action:
      type: string
      enum:
        - set
        - add
        - remove
      title: Способ установки тегов
    Urls_2.Methods.Tags.Edit:
      type: object
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/Tags_2.Types.TagsIds'
        action:
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Tags.Action'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - tags
        - action
        - filters
        - project_id
      title: Изменение тегов
    Urls_2.Methods.Tags.Edit.Exec:
      nullable: true
      type: integer
    Votes_2.Methods.Comment.Edit:
      type: object
      properties:
        id:
          title: Id отзыва
          type: integer
        comment:
          title: Комментарий
          type: string
      required:
        - id
        - comment
      title: |-
        Добавление комментария к отзыву

        Оставить комментарий можно в течение часа поосле выставления оценки
    Votes_2.Methods.Comment.Edit.Exec:
      nullable: true
      type: integer
    Admin_2.Methods.Accounting.Counteragents.Edit:
      type: object
      properties:
        name:
          type: string
        document_number:
          nullable: true
          type: string
        comments:
          nullable: true
          type: string
        comments_2:
          nullable: true
          type: string
      required:
        - name
      title: Изменение параметров контрагента
    Admin_2.Methods.Accounting.Counteragents.Edit.Exec:
      nullable: true
      type: integer
    Admin_2.Methods.Accounting.Counteragents.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение контрагента
    Admin_2.Methods.Accounting.Counteragents.Get.Exec:
      nullable: true
    Models.Admin.Accounting.Counteragents:
      properties:
        GROUPS_NAMES():
          nullable: true
        id:
          type: integer
        name:
          type: string
          nullable: true
        inn:
          type: string
          nullable: true
        document_number:
          type: string
          nullable: true
        comments:
          type: string
          nullable: true
        comments_2:
          type: string
          nullable: true
        in_several_groups:
          nullable: true
        group_id:
          nullable: true
    Admin_2.Methods.Accounting.Group.Edit:
      type: object
      properties:
        group_id:
          title: Id группы
          nullable: true
          type: integer
        name:
          title: Имя группы (если передан group_id - будет редактирование имени группы)
          nullable: true
          type: string
        priority:
          title: Приоритет группы (если передан group_id - будет редактирование приоритета группы)
          nullable: true
          type: string
        counteragent_name:
          title: Имя контрагента (для фильтра)
          nullable: true
          type: string
        counteragent_inn:
          title: ИНН контрагента (для фильтра)
          nullable: true
          type: string
        purpose:
          title: Назначение операции (для фильтра)
          nullable: true
          type: string
        type:
          title: |-
            Тип

            - plus
            - minus

            Указывать, когда указывается одно из следующих полей [counteragent_name, counteragent_inn, purpose]
          nullable: true
          type: string
      required: []
    Admin_2.Methods.Accounting.Group.Edit.Exec:
      nullable: true
      type: integer
    Admin_2.Methods.Accounting.Group.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение групп
    Admin_2.Methods.Accounting.Group.Get.Exec:
      nullable: true
      type: array
    Models.EmptyModel:
      properties: {}
    Admin_2.Methods.Accounting.Invoices.Add:
      type: object
      properties:
        document_date:
          title: Дата документа
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        document_number:
          title: Номер документа
          type: string
        file_name:
          title: Имя файла
          type: string
        file_data:
          title: Данные файла
          type: string
        org_name:
          title: Имя организации
          type: string
        inn:
          title: ИНН
          type: string
        sum:
          title: Сумма
          type: number
      required:
        - document_date
        - document_number
        - file_name
        - file_data
        - org_name
        - inn
        - sum
      title: Добавление счета на оплату
    Admin_2.Methods.Accounting.Invoices.Add.Exec:
      nullable: true
      type: integer
    Admin_2.Methods.Accounting.Invoices.Del:
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Отмена отправки счета. Разрешено только для счетов со статусом pending или sending
    Admin_2.Methods.Accounting.Invoices.Del.Exec:
      nullable: true
      type: integer
    Models.Admin.Invoices:
      properties:
        id: {}
        time:
          nullable: true
        external_name:
          nullable: true
        external_id:
          nullable: true
        document_date:
          nullable: true
        document_number:
          nullable: true
        org_name:
          nullable: true
        inn:
          nullable: true
        sum:
          nullable: true
        file_name:
          nullable: true
        file_data:
          nullable: true
        user_id:
          nullable: true
        status:
          nullable: true
    Admin_2.Methods.Accounting.Invoices.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение счетов на оплату
    Admin_2.Methods.Accounting.Invoices.Get.Exec:
      nullable: true
    Admin_2.Methods.Accounting.Operations.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение внутренних операций
    Admin_2.Methods.Accounting.Operations.Get.Exec:
      nullable: true
    Admin_2.Methods.Actions.Bank.Edit:
      type: object
      properties:
        action:
          title: |-
            Операция

            - 2: бонусное пополнение
            - 1: пополнение
            - -1: списание
          type: integer
        userId:
          title: ID пользователя
          type: integer
        sum:
          title: Сумма
          type: number
        purpose:
          title: Причина
          type: string
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - action
        - userId
        - sum
        - purpose
        - test
      title: Создание и проведение транзакции
    Admin_2.Objects.Actions.Result:
      type: object
      properties:
        isTest:
          title: Запущено ли дейсвтие в тестовом режиме
          type: boolean
        info:
          title: Ассоциативный массив с информацией, связанной с выполняемым дейсвтием
          type: array
        executionTime:
          title: Время выполнения дейсвтия
          type: number
        memory:
          title: Информация о затраченных ресурсавах при выполнении дейсвтия
          type: array
      required:
        - isTest
        - info
        - executionTime
        - memory
      title: Результат выполнения действия
    Admin_2.Methods.Actions.Bank.Edit.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Payments.Del:
      type: object
      properties:
        userId:
          title: ID пользователя
          type: integer
        paymentId:
          title: ID платежа
          type: integer
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - userId
        - paymentId
        - test
      title: Отмена проведения счета
    Admin_2.Methods.Actions.Payments.Del.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Payments.Edit:
      type: object
      properties:
        userId:
          title: ID пользователя
          type: integer
        paymentId:
          title: ID платежа
          type: integer
        sum:
          title: Сумма
          nullable: true
          type: number
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - userId
        - paymentId
        - test
      title: Проведение счета
    Admin_2.Methods.Actions.Payments.Edit.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Positions.Edit:
      type: object
      properties:
        projectId:
          title: ID проекта
          type: integer
        date:
          title: Дата
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - projectId
        - date
        - test
      title: Востановление удаленной проверки
    Admin_2.Methods.Actions.Positions.Edit.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Projects.Edit:
      type: object
      properties:
        projectId:
          title: ID проекта
          type: integer
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - projectId
        - test
      title: Востановление удаленного проекта
    Admin_2.Methods.Actions.Projects.Edit.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Projects.Get:
      type: object
      properties:
        projectId:
          title: ID проекта
          type: integer
        date1:
          title: С какой даты
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        date2:
          title: По какую дату
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - projectId
        - test
      title: Сбор статистики и трафика
    Admin_2.Methods.Actions.Projects.Get.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Telegram.Add:
      type: object
      properties:
        botName:
          title: Название бота
          type: string
        chatId:
          title: ID чата для добавления
          type: string
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - botName
        - chatId
        - test
      title: Добавление бота в телеграм канал
    Admin_2.Methods.Actions.Telegram.Add.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Affiliate.ReferralProgramStats.Get:
      type: object
      properties: {}
      required: []
      title: Получение общей статистики по реферальной программе
    Admin_2.Methods.Affiliate.ReferralProgramStats.Get.Exec:
      nullable: true
      type: array
    TV.API.Types.Currency:
      type: string
      enum:
        - RUB
        - USD
      title: |-
        Валюта

        Этот общий тип, не зависящий от контекста

        Дополниетольно нужно проверять в API методах через site()->checkAllowCurrency() в функции check()
    Admin_2.Methods.Affiliate.ReferralsByLevel.Get:
      type: object
      properties:
        year:
          title: Год для сводки
          type: integer
        currency:
          title: Валюта реферало
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Currency'
      required:
        - year
        - currency
      title: Получение сводки числа рефералов по своему уровню
    Admin_2.Methods.Affiliate.ReferralsByLevel.Get.Exec:
      type: array
    Admin_2.Methods.Affiliate.Referrals.Get:
      type: object
      properties:
        year:
          title: Год
          default: 2013
          type: integer
        currency:
          title: Валюта партнеров
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Currency'
      required:
        - currency
      title: Получение сводки по новым рефералам
    Admin_2.Methods.Affiliate.Referrals.Get.Exec:
      type: array
    Admin_2.Methods.Affiliate.ReferrersByReferrals.Get:
      type: object
      properties:
        year:
          title: Год для сводки
          type: integer
        currency:
          title: Валюта партнеров
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Currency'
      required:
        - year
        - currency
      title: Получение сводки числа партнеров по числу рефералов
    Admin_2.Methods.Affiliate.ReferrersByReferrals.Get.Exec:
      type: array
    Admin_2.Methods.Affiliate.Referrers.Get:
      type: object
      properties:
        year:
          title: Год
          type: integer
        currency:
          title: |-
            Валюта партнеров

             - RUB
             - USD
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Currency'
      required:
        - year
        - currency
      title: Получение сводки по новым партнерам
    Admin_2.Methods.Affiliate.Referrers.Get.Exec:
      type: array
    Admin_2.Methods.Affiliate.ReferrersWithReferrals.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение партнеров c кол-вом рефералов
    Admin_2.Methods.Affiliate.ReferrersWithReferrals.Get.Exec:
      nullable: true
      type: array
    Admin_2.Methods.Analytics.Activity.Get:
      type: object
      properties:
        currency:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Currency'
        limit:
          title: Валюта
          type: integer
        date:
          title: Дата
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
      required:
        - currency
        - limit
        - date
      title: |-
        Получение активности пользователей по статусам активности
        статусы активности:
               1. Активный - клиент, который пополнял баланс в сервисе хотя бы раз. При этом трата средств в течение месяца не мнее 100 рублей (или $5).
               2. Активный (новый) - в эту категорию попадают клиенты, которые первый раз перешли в статус "Активного клиента".
               3. Активный (постоянный) - в эту категорию попадют клиенты, которые не меняли свой статус активности за последний месяц
               4. Активный (вернувшийся) - в эту категорию попадют клиенты, которые вернули себе статус "Активный клиент".
               5. Стал не активным - в эту категорию попадют клиенты, которые потеряли статус "Активного клиента" и на протяжении 2 месяцев не возвращали
        себе этот статус.
    Admin_2.Methods.Analytics.Activity.Get.Exec:
      nullable: true
      type: array
    Admin_2.Methods.Analytics.CountOnlineUsers.Get:
      type: object
      properties: {}
      required: []
      title: Получение числа активных пользователей
    Admin_2.Methods.Analytics.CountOnlineUsers.Get.Exec:
      type: array
    Admin_2.Methods.Analytics.Events.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение метрик из сервиса Аналитика
    Admin_2.Methods.Analytics.Events.Get.Exec:
      nullable: true
    Models.Analytics.Events:
      properties:
        COUNT:
          nullable: true
        COUNT_QUALIFIERS:
          nullable: true
          example:
            need set qualifiers:
              - action
              - category
              - label
              - label_2
              - label_3
        time:
          nullable: true
        category:
          nullable: true
        action:
          nullable: true
        label:
          nullable: true
        label_2:
          nullable: true
        label_3:
          nullable: true
        user_id:
          nullable: true
        hash_id:
          nullable: true
    Admin_2.Types.Analytics.Segment:
      type: string
      enum:
        - day
        - month
        - year
      title: |-
        Имя сегмента, на которые делится период отчета

        Отчет делится на равные части - сегменты, за каждый сегмент выводится сводка с агрегацией по этому сегменту

        Пример: вывод количества регистраций за каждый **месяц** в отчете
    Admin_2.Methods.Analytics.Payments.Get:
      type: object
      properties:
        period:
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Analytics.Segment'
        limit:
          title: Длина периода
          type: integer
      required:
        - period
        - limit
      title: Получение суммы оплат за период
    Admin_2.Methods.Analytics.Payments.Get.Exec:
      nullable: true
      type: array
    Admin_2.Methods.Analytics.Get:
      type: object
      properties:
        date:
          title: Дата
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        period:
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Analytics.Segment'
        currency:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Currency'
        field_name:
          title: |-
            Имя поля

            - sum
            - discount
            - count_users
          type: string
        limit:
          title: Длина периода
          nullable: true
          type: integer
      required:
        - date
        - period
        - currency
        - field_name
    Admin_2.Methods.Analytics.Get.Exec:
      type: array
    Admin_2.Methods.Analytics.Statistics.Get:
      type: object
      properties: {}
      required: []
      title: Получение статистики
    Admin_2.Methods.Analytics.Statistics.Get.Exec:
      nullable: true
      type: array
    Admin_2.Methods.Analytics.Tickets.AbstractTicketsStats:
      type: object
      properties:
        period:
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Analytics.Segment'
        limit:
          title: Длина периода
          type: integer
        date:
          title: Максимальная дата отчета
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
      required:
        - period
        - limit
    Admin_2.Methods.Analytics.Tickets.AbstractTicketsStats.Exec:
      title: |-
        Непосредственный вызов API функции

        Запрещено делать публичной, это приведет к поломке preCall()

        В описании к функции отвечать на вопрос: `Что является результатом запроса?` Например: `Список пользователей`

        Не менять `protected`, проверка проводится при генерации схем в `TV\API\Objects\ClassAPIMethodInfo`
      nullable: true
    Admin_2.Methods.Analytics.Tickets.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение тикетов
    Admin_2.Methods.Analytics.Tickets.Get.Exec:
      type: array
    Admin_2.Methods.I18n.Categories.Get:
      type: object
      properties: {}
      required: []
      title: Получение категорий словаря
    Admin_2.Methods.I18n.Categories.Get.Exec:
      type: array
    Admin_2.Methods.Logs.System.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required: []
      title: Получение данных из системного лога
    Admin_2.Methods.Logs.System.Get.Exec:
      nullable: true
      type: array
    Admin_2.Methods.Ranks.Activations.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
    Admin_2.Methods.Ranks.Activations.Get.Exec:
      nullable: true
    Models.Analytics.RanksUsers:
      properties:
        code:
          nullable: true
        email:
          nullable: true
        rank:
          nullable: true
        retention_week:
          nullable: true
        retention_month:
          nullable: true
        payment_week:
          nullable: true
        payment_month:
          nullable: true
        payment_month_6:
          nullable: true
        payment_year:
          nullable: true
        new_user:
          nullable: true
        returned_user:
          nullable: true
        quitted_user:
          nullable: true
    Admin_2.Methods.Slack.Rate.Get:
      type: object
      properties: {}
      required: []
      title: Рейтинг по сообщениям в слеке за предыдущий месяц
    Admin_2.Methods.Slack.Rate.Get.Exec:
      title: Список пользователей
      nullable: true
      type: array
    Admin_2.Methods.Staff.Access.Edit:
      type: object
      properties:
        user_id:
          title: ID пользователя
          type: integer
        name:
          title: |-
            Название доступа

            - ftp
            - mysql
            - vpn
            - httpAuth
          type: string
        category:
          title: Подкатегория доступа
          type: string
        value:
          title: Выдать или забрать доступ
          type: boolean
        recreate:
          title: Перевыдать доступ, сбросить пароль
          nullable: true
          type: boolean
        login:
          title: Логин администратора
          nullable: true
          type: string
        password:
          title: Пароль администратора
          nullable: true
          type: string
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - user_id
        - name
        - category
        - value
        - filters
      title: Настройка доступа
    Admin_2.Methods.Staff.Access.Edit.Exec:
      nullable: true
      type: integer
    Admin_2.Methods.Staff.ByPost.Get:
      type: object
      properties:
        post:
          title: Пост сотрудников
          type: string
      required:
        - post
      title: Получение из бд данные сотрудников указанного поста
    Admin_2.Methods.Staff.ByPost.Get.Exec:
      type: array
    Admin_2.Methods.Staff.ContractPrint.Get:
      type: object
      properties:
        props:
          title: Параметры, передаваемые в шаблон
          type: array
      required:
        - props
      title: Печать договора
    Admin_2.Methods.Staff.Posts.Get:
      type: object
      properties: {}
      required: []
      title: Получение возможных posts
    Admin_2.Methods.Staff.Posts.Get.Exec:
      type: array
    Admin_2.Methods.Staff.Vacation.Add:
      type: object
      properties:
        user_id:
          title: ID юзера
          type: integer
        date1:
          title: Дата начала
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        date2:
          title: Дата окончания
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        type:
          title: |-
            Тип

            - vacation
            - day_off
          type: string
      required:
        - user_id
        - date1
        - date2
        - type
      title: Добавление отпуска для сотрудника
    Admin_2.Methods.Staff.Vacation.Add.Exec:
      nullable: true
      type: integer
    Admin_2.Methods.Staff.Vacation.Del:
      type: object
      properties:
        id:
          title: ID события
          type: integer
      required:
        - id
      title: Удаление данных об отпуске
    Admin_2.Methods.Staff.Vacation.Del.Exec:
      nullable: true
      type: integer
    Admin_2.Methods.Staff.VacationPrint.Get:
      type: object
      properties:
        id:
          type: integer
      required:
        - id
      title: Печать заявления на отпуск
    Admin_2.Methods.Tpl.Schema.Get:
      type: object
      properties:
        tpl:
          title: Путь к шаблону
          type: string
        lang:
          title: Язык шаблона (при пустом значении используется язык пользователя)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Lang'
      required:
        - tpl
      title: Получение схему HTML шаблона
    Admin_2.Methods.Tpl.Schema.Get.Exec:
      type: array
    Admin_2.Methods.Users.Promocodes.Add:
      type: object
      properties:
        rank_id:
          type: integer
        single_code:
          title: single_code - многоразовый промокод
          nullable: true
          type: string
        codes:
          title: Список многоразовых промокодов
          nullable: true
          type: array
      required:
        - rank_id
      title: Добавление промокоды к достижению
    Admin_2.Methods.Users.Promocodes.Add.Exec:
      nullable: true
      type: integer
    Models.Users.Verif:
      properties:
        email:
          nullable: true
        code:
          nullable: true
        action:
          nullable: true
        params:
          nullable: true
        data:
          nullable: true
        date:
          nullable: true
    Admin_2.Methods.Users.Promocodes.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: |-
        Получение промокодов

        В params хранится строка в формате:
        - {{ rank_id }}
        - {{ rank_id }},single_code - для многоразового кода
    Admin_2.Methods.Users.Promocodes.Get.Exec:
      nullable: true
      type: array
    Admin_2.Types.Users.Ranks.Category:
      type: string
      enum:
        - ''
        - journal
    Admin_2.Methods.Users.Ranks.Add:
      type: object
      properties:
        name_id:
          nullable: true
          type: string
        category:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Users.Ranks.Category'
        name_ru:
          nullable: true
          type: string
        name_en:
          nullable: true
          type: string
        descr_ru:
          nullable: true
          type: string
        descr_en:
          nullable: true
          type: string
        descr_how_to_use_ru:
          nullable: true
          type: string
        descr_how_to_use_en:
          nullable: true
          type: string
        bonus_RUB:
          nullable: true
          type: integer
        bonus_USD:
          nullable: true
          type: integer
        cashback_expenses:
          nullable: true
          type: integer
        cashback_first_payment:
          nullable: true
          type: integer
        discount:
          nullable: true
          type: integer
        referrer_id:
          nullable: true
          type: integer
        from_date:
          nullable: true
          type: string
        to_date:
          nullable: true
          type: string
        max_count_usage:
          nullable: true
          type: integer
        currency:
          nullable: true
          type: string
        only_new_users:
          nullable: true
          type: boolean
        color:
          nullable: true
          type: string
        always_visible:
          nullable: true
          type: boolean
      required: []
      title: Добавление достижение
    Admin_2.Methods.Users.Ranks.Add.Exec:
      nullable: true
      type: integer
    Models.Admin.Users.Ranks:
      properties:
        COUNT_CODES():
          nullable: true
        id: {}
        name_id:
          nullable: true
        category:
          nullable: true
        name:
          nullable: true
        name_ru:
          nullable: true
        name_en:
          nullable: true
        descr:
          nullable: true
        descr_ru:
          nullable: true
        descr_en:
          nullable: true
        descr_how_to_use:
          nullable: true
        descr_how_to_use_ru:
          nullable: true
        descr_how_to_use_en:
          nullable: true
        bonus:
          nullable: true
        bonus_RUB:
          nullable: true
        bonus_USD:
          nullable: true
        cashback_expenses:
          nullable: true
        cashback_first_payment:
          nullable: true
        discount:
          nullable: true
        referrer_id:
          nullable: true
        from_date:
          nullable: true
        to_date:
          nullable: true
        limit:
          nullable: true
        currency:
          nullable: true
        only_new_users:
          nullable: true
        color:
          nullable: true
        always_visible:
          nullable: true
        site:
          nullable: true
    Admin_2.Methods.Users.Ranks.Edit:
      type: object
      properties:
        id:
          type: integer
        name_id:
          nullable: true
          type: string
        category:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Users.Ranks.Category'
        name_ru:
          nullable: true
          type: string
        name_en:
          nullable: true
          type: string
        descr_ru:
          nullable: true
          type: string
        descr_en:
          nullable: true
          type: string
        descr_how_to_use_ru:
          nullable: true
          type: string
        descr_how_to_use_en:
          nullable: true
          type: string
        bonus_RUB:
          nullable: true
          type: integer
        bonus_USD:
          nullable: true
          type: integer
        cashback_expenses:
          nullable: true
          type: integer
        cashback_first_payment:
          nullable: true
          type: integer
        discount:
          nullable: true
          type: integer
        referrer_id:
          nullable: true
          type: integer
        from_date:
          nullable: true
          type: string
        to_date:
          nullable: true
          type: string
        max_count_usage:
          nullable: true
          type: integer
        currency:
          nullable: true
          type: string
        only_new_users:
          nullable: true
          type: boolean
        color:
          nullable: true
          type: string
        always_visible:
          nullable: true
          type: boolean
      required:
        - id
      title: Измение достижение
    Admin_2.Methods.Users.Ranks.Edit.Exec:
      nullable: true
      type: integer
    Admin_2.Methods.Users.Ranks.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение достижения
    Admin_2.Methods.Users.Ranks.Get.Exec:
      nullable: true
      type: array
    check_id:
      title: ID проверки аудита
      type: integer
    Audit_2.Methods.Audit.Browse.Get:
      type: object
      properties:
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - project_id
        - check_id
      title: Получение сводки анализа сайта
      description: '@deprecated'
      deprecated: true
    Audit_2.Methods.Audit.Browse.Get.Exec:
      title: Сводка анализа сайта
      nullable: true
      type: array
    Audit_2.Methods.Audit.Checks.Get:
      type: object
      properties:
        show_raw_data:
          title: Добавить в результат данные о незавершенной проверке
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - fields
        - orders
        - filters
        - offset
        - project_id
      title: |-
        Получение общей информации о проверках
        - только для проверки, которая не завершена
        - в ответе будут заменены значения кодов ответа на текущие: count_000, count_1xx, count_2xx, count_3xx, count_4xx, count_5xx
        - в ответе будет заменено значение count_pages и count_all на текущие
        - в ответ будет добавлены значения robot_step и robot_count_tasks_allм
    Audit_2.Methods.Audit.Checks.Get.Exec:
      title: Список выполненных (выполняемых) проверок аудита
      nullable: true
    Models.Audit.Checks:
      properties:
        DURATION():
          nullable: true
        id: {}
        project_id:
          nullable: true
        device:
          nullable: true
        scan_links:
          nullable: true
        scan_images:
          nullable: true
        scan_js:
          nullable: true
        scan_css:
          nullable: true
        robots_txt_exists:
          nullable: true
        sitemap_xml_exists:
          nullable: true
        www_redirect_exists:
          nullable: true
        ssl_redirect_exists:
          nullable: true
        tls_exists:
          nullable: true
        fatal:
          nullable: true
        rkn_no_ban:
          nullable: true
        notice:
          nullable: true
        error:
          nullable: true
        time_start:
          nullable: true
        time_finish:
          nullable: true
        count_pages:
          nullable: true
        count_all:
          nullable: true
        count_000:
          nullable: true
        count_1xx:
          nullable: true
        count_2xx:
          nullable: true
        count_3xx:
          nullable: true
        count_4xx:
          nullable: true
        count_5xx:
          nullable: true
        complete:
          nullable: true
        count_warnings:
          nullable: true
        count_errors:
          nullable: true
        count_problems:
          nullable: true
        is_mobile:
          nullable: true
        domain_check_rkn_no_ban:
          nullable: true
        domain_check_webmaster_no_errors:
          nullable: true
        domain_check_robots_txt_exists:
          nullable: true
        domain_check_sitemap_xml_exists:
          nullable: true
        domain_check_www_redirect_exists:
          nullable: true
        domain_check_ssl_redirect_exists:
          nullable: true
        domain_check_tls_exists:
          nullable: true
        pages_check_http_code_200_errors:
          nullable: true
        pages_check_redirects_not_exists_errors:
          nullable: true
        pages_check_redirects_many_not_exists_errors:
          nullable: true
        pages_check_ttfb_max_errors:
          nullable: true
        pages_check_cacheable_errors:
          nullable: true
        pages_check_robots_txt_allowed_errors:
          nullable: true
        pages_check_sitemap_xml_exists_errors:
          nullable: true
        pages_check_sitemap_xml_exists_with_canonical_errors:
          nullable: true
        pages_check_sitemap_included_none_blocked_errors:
          nullable: true
        pages_check_noindex_off_errors:
          nullable: true
        pages_check_nofollow_off_errors:
          nullable: true
        pages_check_title_exists_errors:
          nullable: true
        pages_check_title_length_max_errors:
          nullable: true
        pages_check_title_is_unique_errors:
          nullable: true
        pages_check_description_exists_errors:
          nullable: true
        pages_check_description_is_unique_errors:
          nullable: true
        pages_check_description_length_min_errors:
          nullable: true
        pages_check_description_length_max_errors:
          nullable: true
        pages_check_h1_exists_errors:
          nullable: true
        pages_check_html_lang_exists_errors:
          nullable: true
        pages_check_url_length_errors:
          nullable: true
        pages_check_canonical_exists_errors:
          nullable: true
        pages_check_alternate_errors:
          nullable: true
        pages_check_http_resources_count_errors:
          nullable: true
        pages_check_links_exists_errors:
          nullable: true
        pages_check_refresh_not_exists_errors:
          nullable: true
        pages_check_compression_exists_errors:
          nullable: true
        pages_check_schema_exists_errors:
          nullable: true
        pages_check_og_title_exists_errors:
          nullable: true
        pages_check_og_description_exists_errors:
          nullable: true
        pages_check_og_image_exists_errors:
          nullable: true
        pages_check_og_url_exists_errors:
          nullable: true
        pages_check_og_url_canonical_errors:
          nullable: true
        pages_check_lcp_max_errors:
          nullable: true
        pages_check_fid_max_errors:
          nullable: true
        pages_check_inp_max_errors:
          nullable: true
        pages_check_cls_max_errors:
          nullable: true
        pages_check_fcp_max_errors:
          nullable: true
        pages_check_si_max_errors:
          nullable: true
        pages_check_tbt_max_errors:
          nullable: true
        links_check_http_code_200_errors:
          nullable: true
        links_check_redirects_not_exists_errors:
          nullable: true
        links_check_redirects_many_not_exists_errors:
          nullable: true
        links_check_ttfb_max_errors:
          nullable: true
        links_check_url_slash_unique_errors:
          nullable: true
        links_check_url_format_good_errors:
          nullable: true
        links_check_title_or_content_exists_errors:
          nullable: true
        links_check_nofollow_off_errors:
          nullable: true
        images_check_http_code_200_errors:
          nullable: true
        images_check_redirects_not_exists_errors:
          nullable: true
        images_check_redirects_many_not_exists_errors:
          nullable: true
        images_check_ttfb_max_errors:
          nullable: true
        images_check_cacheable_errors:
          nullable: true
        images_check_alt_exists_errors:
          nullable: true
        images_check_alt_length_max_errors:
          nullable: true
        images_check_size_max_errors:
          nullable: true
        images_check_robots_disallow_off_errors:
          nullable: true
        images_check_modern_format_errors:
          nullable: true
        js_check_http_code_200_errors:
          nullable: true
        js_check_redirects_not_exists_errors:
          nullable: true
        js_check_redirects_many_not_exists_errors:
          nullable: true
        js_check_ttfb_max_errors:
          nullable: true
        js_check_compression_exists_errors:
          nullable: true
        js_check_cacheable_errors:
          nullable: true
        js_check_is_minified_errors:
          nullable: true
        js_check_no_render_blocking_errors:
          nullable: true
        css_check_http_code_200_errors:
          nullable: true
        css_check_redirects_not_exists_errors:
          nullable: true
        css_check_redirects_many_not_exists_errors:
          nullable: true
        css_check_ttfb_max_errors:
          nullable: true
        css_check_compression_exists_errors:
          nullable: true
        css_check_cacheable_errors:
          nullable: true
        css_check_is_minified_errors:
          nullable: true
        css_check_no_render_blocking_errors:
          nullable: true
    Audit_2.Methods.Audit.Css.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - fields
        - orders
        - filters
        - offset
        - project_id
        - check_id
      title: Получение проверенных css
    Audit_2.Methods.Audit.Css.Get.Exec:
      title: Список проверенных css
      nullable: true
      type: array
    Models.Audit.Css:
      properties:
        COUNT(*):
          nullable: true
        HTTP_CODES_HUNDREDS():
          type: array
          nullable: true
        check_id:
          nullable: true
        url_ids:
          nullable: true
        url_id:
          nullable: true
        url:
          nullable: true
        count:
          nullable: true
        time_parse:
          nullable: true
        http_codes:
          type: array
          nullable: true
        last_http_code:
          nullable: true
        redirects:
          type: array
          nullable: true
        locations:
          nullable: true
        ttfb:
          nullable: true
        count_pages:
          nullable: true
        compression:
          nullable: true
        cacheable:
          nullable: true
        cache_type:
          nullable: true
        cache_time:
          nullable: true
        cache_validator:
          nullable: true
        robots_txt_mention:
          nullable: true
        robots_txt_blocked:
          nullable: true
        minified:
          nullable: true
        broken:
          nullable: true
        notice:
          nullable: true
        error:
          nullable: true
        warning_all:
          nullable: true
        render_blocking:
          nullable: true
        check_http_code_200:
          nullable: true
        check_redirects_not_exists:
          nullable: true
        check_redirects_many_not_exists:
          nullable: true
        check_ttfb_max:
          nullable: true
        check_compression_exists:
          nullable: true
        check_cacheable:
          nullable: true
        check_is_minified:
          nullable: true
        check_no_render_blocking:
          nullable: true
        count_errors:
          nullable: true
        count_warnings:
          nullable: true
    Audit_2.Types.Audit.TargetType:
      type: string
      enum:
        - pages
        - links
        - images
        - js
        - css
      title: Тип очтета аудита
    TV.API.Types.ExportFormat:
      type: string
      enum:
        - csv
        - xlsx
    Audit_2.Methods.Audit.Export.Get:
      type: object
      properties:
        target_type:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Audit.TargetType'
        filters_resources_target_type:
          title: |-
            Тип отчета для фильтра по ресурсам страницы

            Только для $target_type = pages
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Audit.TargetType'
        filters_resources:
          title: |-
            Фильтр по ресурсам страницы, API fitlers для объекта, тип которого указан в filters_extra_target_type

            Только для $target_type = pages
          type: array
        output:
          title: Формат экспортируемого файла
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.ExportFormat'
        project_id:
          $ref: '#/components/schemas/project_id'
        fields:
          $ref: '#/components/schemas/fields'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - target_type
        - output
        - project_id
        - check_id
      title: Экспорт результатов проверки файла
    Audit_2.Methods.Audit.Images.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - fields
        - orders
        - filters
        - offset
        - project_id
        - check_id
      title: Получение проверенных изображений
    Audit_2.Methods.Audit.Images.Get.Exec:
      title: Список проверенных изображений
      nullable: true
      type: array
    Models.Audit.Images:
      properties:
        COUNT(*):
          nullable: true
        HTTP_CODES_HUNDREDS():
          type: array
          nullable: true
        check_id:
          nullable: true
        url_id:
          nullable: true
        url_ids:
          nullable: true
        url:
          nullable: true
        alt:
          nullable: true
        time_parse:
          nullable: true
        http_codes:
          type: array
          nullable: true
        last_http_code:
          nullable: true
        redirects:
          type: array
          nullable: true
        locations:
          nullable: true
        count:
          nullable: true
        ttfb:
          nullable: true
        count_pages:
          nullable: true
        size:
          nullable: true
        cacheable:
          nullable: true
        cache_type:
          nullable: true
        cache_time:
          nullable: true
        cache_validator:
          nullable: true
        robots_txt_mention:
          nullable: true
        robots_txt_blocked:
          nullable: true
        extension:
          nullable: true
        content_type:
          nullable: true
        modern_format:
          nullable: true
        broken:
          nullable: true
        search:
          nullable: true
        notice:
          nullable: true
        error:
          nullable: true
        warning_all:
          nullable: true
        check_http_code_200:
          nullable: true
        check_redirects_not_exists:
          nullable: true
        check_redirects_many_not_exists:
          nullable: true
        check_ttfb_max:
          nullable: true
        check_cacheable:
          nullable: true
        check_alt_exists:
          nullable: true
        check_alt_length_max:
          nullable: true
        check_size_max:
          nullable: true
        check_robots_disallow_off:
          nullable: true
        check_modern_format:
          nullable: true
        count_errors:
          nullable: true
        count_warnings:
          nullable: true
    Audit_2.Methods.Audit.Js.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - fields
        - orders
        - filters
        - offset
        - project_id
        - check_id
      title: Получение проверенных js
    Audit_2.Methods.Audit.Js.Get.Exec:
      title: Список проверенных js
      nullable: true
      type: array
    Models.Audit.Js:
      properties:
        COUNT(*):
          nullable: true
        HTTP_CODES_HUNDREDS():
          type: array
          nullable: true
        check_id:
          nullable: true
        url_ids:
          nullable: true
        url_id:
          nullable: true
        url:
          nullable: true
        count:
          nullable: true
        time_parse:
          nullable: true
        http_codes:
          type: array
          nullable: true
        last_http_code:
          nullable: true
        redirects:
          type: array
          nullable: true
        ttfb:
          nullable: true
        count_pages:
          nullable: true
        compression:
          nullable: true
        cacheable:
          nullable: true
        cache_type:
          nullable: true
        cache_time:
          nullable: true
        cache_validator:
          nullable: true
        robots_txt_mention:
          nullable: true
        robots_txt_blocked:
          nullable: true
        minified:
          nullable: true
        broken:
          nullable: true
        notice:
          nullable: true
        error:
          nullable: true
        warning_all:
          nullable: true
        render_blocking:
          nullable: true
        check_http_code_200:
          nullable: true
        check_redirects_not_exists:
          nullable: true
        check_redirects_many_not_exists:
          nullable: true
        check_ttfb_max:
          nullable: true
        check_compression_exists:
          nullable: true
        check_cacheable:
          nullable: true
        check_is_minified:
          nullable: true
        check_no_render_blocking:
          nullable: true
        count_errors:
          nullable: true
        count_warnings:
          nullable: true
    Audit_2.Methods.Audit.Links.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - fields
        - orders
        - filters
        - offset
        - project_id
        - check_id
      title: Получение проверенных ссылок
    Audit_2.Methods.Audit.Links.Get.Exec:
      title: Список проверенных ссылок
      nullable: true
      type: array
    Models.Audit.Links:
      properties:
        COUNT(*):
          nullable: true
        search:
          nullable: true
        HTTP_CODES_HUNDREDS():
          type: array
          nullable: true
        check_id:
          nullable: true
        project_id:
          nullable: true
        url_id:
          nullable: true
        url_ids:
          nullable: true
        url:
          nullable: true
        type:
          nullable: true
        content:
          type: string
          nullable: true
        time_parse:
          nullable: true
        http_codes:
          type: array
          nullable: true
        last_http_code:
          nullable: true
        count:
          nullable: true
        title:
          nullable: true
        redirects:
          type: array
          nullable: true
        nofollow:
          nullable: true
        sponsored:
          nullable: true
        ugc:
          nullable: true
        external:
          nullable: true
        broken:
          nullable: true
        ttfb:
          nullable: true
        count_pages:
          nullable: true
        cacheable:
          nullable: true
        cache_type:
          nullable: true
        cache_time:
          nullable: true
        cache_validator:
          nullable: true
        check_http_code_200:
          nullable: true
        check_redirects_not_exists:
          nullable: true
        check_redirects_many_not_exists:
          nullable: true
        check_ttfb_max:
          nullable: true
        check_url_slash_unique:
          nullable: true
        check_url_format_good:
          nullable: true
        check_title_or_content_exists:
          nullable: true
        check_nofollow_off:
          nullable: true
        notice:
          nullable: true
        error:
          nullable: true
        warning_all:
          nullable: true
        count_errors:
          nullable: true
        count_warnings:
          nullable: true
    Audit_2.Methods.Audit.Log.Get:
      type: object
      properties:
        time1:
          title: Фильтр по периоду
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Datetime'
        time2:
          title: Фильтр по периоду
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Datetime'
        show_urls:
          title: Добавить url к записям
          type: boolean
        show_locations:
          title: Добавить массив locations - адреса страницы и редиректы с HTTP кодами
          type: boolean
        http_codes_hundreds:
          title: Фильтр по категориям кодов
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        page:
          title: Номер страницы (для использования в SQL)
          default: 1
          type: integer
        project_id:
          $ref: '#/components/schemas/project_id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - project_id
        - check_id
      title: Получение данных проверенных ресурсов
    Audit_2.Methods.Audit.Log.Get.Exec:
      title: Данные проверенных ресурсов
      type: array
    Audit_2.Methods.Audit.Pages.Get:
      type: object
      properties:
        filters_resources_target_type:
          title: Тип отчета для фильтра по ресурсам страницы
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Audit.TargetType'
        filters_resources:
          title: Фильтр по ресурсам страницы, API fitlers для объекта, тип которого указан в filters_extra_target_type
          type: array
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - fields
        - orders
        - filters
        - offset
        - project_id
        - check_id
      title: Получение страниц, по которым был выполнен аудит
    Audit_2.Methods.Audit.Pages.Get.Exec:
      title: Список страниц
      nullable: true
      type: array
    Models.Audit.Pages:
      properties:
        dummy_opener_summary_page:
          nullable: true
        COUNT(*):
          nullable: true
        HTTP_CODES_HUNDREDS():
          type: array
          nullable: true
        check_id:
          nullable: true
        url_id:
          nullable: true
        url:
          nullable: true
        time_parse:
          nullable: true
        http_codes:
          type: array
          nullable: true
        last_http_code:
          nullable: true
        tls_version:
          nullable: true
        redirects:
          type: array
          nullable: true
        meta_robots_none:
          nullable: true
        x_robots_tag_none:
          nullable: true
        meta_robots_noindex:
          nullable: true
        x_robots_tag_noindex:
          nullable: true
        meta_robots_nofollow:
          nullable: true
        x_robots_tag_nofollow:
          nullable: true
        canonical:
          nullable: true
        canonical_count:
          nullable: true
        http_resources_count:
          nullable: true
        html_lang:
          nullable: true
        hreflang:
          nullable: true
        rdfa:
          nullable: true
        json_ld:
          nullable: true
        microdata:
          nullable: true
        alternates:
          nullable: true
        refresh:
          nullable: true
        title:
          nullable: true
        description:
          nullable: true
        h1:
          nullable: true
        links_count:
          nullable: true
        images_count:
          nullable: true
        js_count:
          nullable: true
        css_count:
          nullable: true
        lastmod:
          nullable: true
        lastmod_since:
          nullable: true
        sitemap_xml_mention:
          nullable: true
        robots_txt_mention:
          nullable: true
        robots_txt_blocked:
          nullable: true
        og_title:
          nullable: true
        og_description:
          nullable: true
        og_image:
          nullable: true
        og_url:
          nullable: true
        og_type:
          nullable: true
        count_errors:
          nullable: true
        count_warnings:
          nullable: true
        count_problems:
          nullable: true
        broken:
          nullable: true
        ttfb:
          nullable: true
        compression:
          nullable: true
        cacheable:
          nullable: true
        cache_type:
          nullable: true
        cache_time:
          nullable: true
        cache_validator:
          nullable: true
        search:
          nullable: true
        snippet_search:
          nullable: true
        title_dbl:
          nullable: true
        description_dbl:
          nullable: true
        lcp:
          nullable: true
        fid:
          nullable: true
        inp:
          nullable: true
        cls:
          nullable: true
        fcp:
          nullable: true
        si:
          nullable: true
        tti:
          nullable: true
        tbt:
          nullable: true
        cwv_performance:
          nullable: true
        backlinks_inner_count:
          nullable: true
        text_length:
          nullable: true
        check_http_code_200:
          nullable: true
        check_redirects_not_exists:
          nullable: true
        check_redirects_many_not_exists:
          nullable: true
        check_ttfb_max:
          nullable: true
        check_cacheable:
          nullable: true
        check_robots_txt_allowed:
          nullable: true
        check_sitemap_xml_exists:
          nullable: true
        check_sitemap_xml_exists_with_canonical:
          nullable: true
        check_sitemap_included_none_blocked:
          nullable: true
        check_noindex_off:
          nullable: true
        check_nofollow_off:
          nullable: true
        check_title_exists:
          nullable: true
        check_title_length_max:
          nullable: true
        check_title_is_unique:
          nullable: true
        check_description_exists:
          nullable: true
        check_description_is_unique:
          nullable: true
        check_description_length_min:
          nullable: true
        check_description_length_max:
          nullable: true
        check_h1_exists:
          nullable: true
        check_html_lang_exists:
          nullable: true
        check_url_length:
          nullable: true
        check_canonical_exists:
          nullable: true
        check_alternate:
          nullable: true
        check_http_resources_count:
          nullable: true
        check_links_exists:
          nullable: true
        check_refresh_not_exists:
          nullable: true
        check_compression_exists:
          nullable: true
        check_schema_exists:
          nullable: true
        check_og_title_exists:
          nullable: true
        check_og_description_exists:
          nullable: true
        check_og_image_exists:
          nullable: true
        check_og_url_exists:
          nullable: true
        check_og_url_canonical:
          nullable: true
        check_lcp_max:
          nullable: true
        check_fid_max:
          nullable: true
        check_inp_max:
          nullable: true
        check_cls_max:
          nullable: true
        check_fcp_max:
          nullable: true
        check_si_max:
          nullable: true
        check_tbt_max:
          nullable: true
    Audit_2.Types.Audit.Summary.FilterCheckState:
      type: string
      enum:
        - all
        - changed
      title: Фильтр по состоянию изменения в сводке
    Audit_2.Methods.Audit.Summary.Get:
      type: object
      properties:
        filter_check_type:
          title: Фильтр по состоянию сигнала (success, warning, error)
          type: array
        filter_check_state:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Audit.Summary.FilterCheckState'
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - fields
        - orders
        - filters
        - offset
        - project_id
        - check_id
      title: Получение сводки о выполненном аудите
    Audit_2.Methods.Audit.Summary.Get.Exec:
      title: |-
        Сводка о выполненном аудите

        Возвращает объект со сводкой по категориям, пример:
         - `$res['all']['all']['count_checks_success']` - количество пройденных проверок во всех категориях
         - `$res['pages']['indexing']['count_checks_success']` - количество пройденных проверок в категории Страницы / Индексация
         - `$res['all']['all']['count_checks_success']` - количество пройденных проверок во всех категориях
      nullable: true
      type: array
    Audit_2.Methods.Audit.SummaryPage.Get:
      type: object
      properties:
        url_id:
          title: Id ссылки на страницу
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - url_id
        - fields
        - orders
        - filters
        - offset
        - project_id
        - check_id
      title: Получение сводки страницы
    Audit_2.Methods.Audit.SummaryPage.Get.Exec:
      title: Сводка о выполненном аудите по одной странице
      nullable: true
      type: array
    Audit_2.Methods.Indexing.Export.Get:
      type: object
      properties:
        searchers_keys:
          title: Поисковые системы
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.SearcherKeys'
        returnFilenameFromFolder:
          title: |-
            Если указан, файл будет сохранен в указанной папке и будет возвращен путь к файлу

            Для внутреннего использования
          description: '@private'
          nullable: true
          type: string
        output:
          title: Формат экспортируемого файла
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.ExportFormat'
        properties:
          title: Настройки экспорта
          type: array
        dates:
          title: Произвольные даты без использования диапазона
          nullable: true
          type: array
        date1:
          title: Дата начала диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        date2:
          title: Дата окончания диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        period_days:
          title: Период в днях
          default: 7
          type: integer
        type_range:
          default: 7
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.TypeRange'
        count_dates:
          title: Количество дней в диапазоне
          default: 60
          type: integer
        project_id:
          $ref: '#/components/schemas/project_id'
        fields:
          $ref: '#/components/schemas/fields'
      required:
        - searchers_keys
        - output
        - project_id
      title: |-
        Экспорт результатов индексации

        Необходимо указать либо date1 и date2, либо dates (вместе указывать нельзя)
    Audit_2.Methods.Indexing.Export.Get.Exec:
      title: Результаты индексации
      type: string
    Audit_2.Methods.Indexing.Links.Get:
      type: object
      properties:
        template_date_range:
          title: Диапазон значений шаблона
          type: string
        dates:
          title: Произвольные даты без использования диапазона
          nullable: true
          type: array
        date1:
          title: Дата начала диапазона
          nullable: true
          type: string
        date2:
          title: Дата окончания диапазона
          nullable: true
          type: string
        type_range:
          title: Тип диапазона дат
          nullable: true
          default: 7
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.TypeRange'
        count_dates:
          title: Количество дней в диапазоне
          nullable: true
          type: integer
        searchers_keys:
          title: Ппоисковые ключи
          nullable: true
          type: array
        tags:
          title: Теги
          nullable: true
          type: array
        dynamic:
          title: Динамический
          nullable: true
          type: array
        data_dynamic:
          title: Динаамические данные
          nullable: true
          type: array
        data_sort:
          title: Сортировка данных
          nullable: true
          type: array
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - template_date_range
        - project_id
      title: |-
        Создание гостевой ссылки на просмотр позиций

        Необходимо указать либо date1 и date2, либо dates (вместе указывать нельзя)
    Audit_2.Methods.Indexing.Links.Get.Exec:
      title: Короткая гостевая ссылка на просмотр позиций
      nullable: true
      type: string
    Audit_2.Methods.Indexing.Summary.Get:
      type: object
      properties:
        dates:
          title: Произвольные даты без диапазона
          type: array
        searcher_key:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.SearcherKey'
        show_counts_changes:
          title: Отобразить количество изменений
          type: boolean
        show_counts_in_index:
          title: Отобразить количество страниц в индексе
          type: boolean
        show_counts_all:
          title: Отобразить количество проверенных страниц
          type: boolean
        forChart:
          title: |-
            Вернуть данные в формате для графика

            Недокументируемый параметр
          description: '@private'
          type: boolean
        project_id:
          $ref: '#/components/schemas/project_id'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - dates
        - project_id
      title: Получение сводки индексации
    Audit_2.Methods.Indexing.Summary.Get.Exec:
      title: Сводка индексации
      nullable: true
      type: array
    Audit_2.Methods.Watcher.ByURL.Get:
      type: object
      properties:
        url_id:
          title: ID URL
          type: integer
        show_headers:
          title: Включать ли в результат названия столбцов
          type: boolean
        watcher_fields:
          title: Выбор столбцов данных с результатами проверки
          default:
            - http_codes
            - redirects
          type: array
        show_diff:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Watcher.ShowDiff'
        watcher_type:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Watcher.Type'
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - url_id
        - watcher_type
        - fields
        - orders
        - filters
        - offset
        - project_id
      title: |-
        Построение отчета по одному URL

        Отличия от get/audit_2/watcher:
        - отчет генерируется на основе объекта watcher_results, а не urls
        - параметры выбора периода отчета игнорируются
        - выбор прверок регулируется параметрами запроса filters, limit и offset
    Audit_2.Methods.Watcher.ByURL.Get.Exec:
      title: Отчет по одному URL
      nullable: true
      type: array
    Models.Watcher.Results:
      properties:
        project_id:
          nullable: true
        check_id:
          nullable: true
        url_id:
          nullable: true
        http_codes:
          type: array
          nullable: true
        http_codes_changed:
          nullable: true
        http_codes_md5:
          nullable: true
        redirects:
          type: array
          nullable: true
        redirects_changed:
          nullable: true
        redirects_md5:
          nullable: true
        h1:
          nullable: true
        h1_changed:
          nullable: true
        h1_md5:
          nullable: true
        title:
          nullable: true
        title_changed:
          nullable: true
        title_md5:
          nullable: true
        description:
          nullable: true
        description_changed:
          nullable: true
        description_md5:
          nullable: true
        content:
          nullable: true
        content_changed:
          nullable: true
        content_md5:
          nullable: true
    Audit_2.Methods.Watcher.Checks.Get:
      type: object
      properties:
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - project_id
      title: Получение проверок радара
    Audit_2.Methods.Watcher.Checks.Get.Exec:
      title: Список проверок радара
      nullable: true
      type: array
    Audit_2.Methods.Watcher.Summary.Get:
      type: object
      properties:
        watcher_types:
          title: Тип проверки
          nullable: true
          type: array
        checks_ids:
          title: ID проверок
          type: array
        show_counts_changes:
          title: Отобразить количество изменений по типам
          type: boolean
        forChart:
          title: Недокументируемый параметр, данные для графика
          type: boolean
        project_id:
          $ref: '#/components/schemas/project_id'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - checks_ids
        - project_id
      title: Получение сводки радара
    Audit_2.Methods.Watcher.Summary.Get.Exec:
      title: Сводка с количеством изменений по каждому типу проверки
      nullable: true
      type: array
    Bank_2.Methods.Diadoc.SendContract.Get:
      type: object
      properties:
        requisites_id:
          title: Id договора
          type: string
      required:
        - requisites_id
      title: Отправка договора в диадок
    Bank_2.Methods.Diadoc.SendContract.Get.Exec:
      type: boolean
    Bank_2.Methods.Diadoc.SendTotalReceipt.Get:
      type: object
      properties:
        org_id:
          title: Id организации
          type: string
        date1:
          title: Дата начала диапазона
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        date2:
          title: Дата конца диапазона
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        org_kpp:
          title: КПП организации
          nullable: true
          type: string
        requisites_id:
          title: Id договора
          nullable: true
          type: string
        signed:
          title: |-
            Использовать подпись

            Если true, то документ с подписью (не распространяется на договоры)
          type: boolean
      required:
        - org_id
        - date1
        - date2
      title: |-
        Отправка акта сверки в диадок

        Параметры см. в bank_2_requisites::protected_get_printTotalReceipt();
    Bank_2.Methods.Diadoc.SendTotalReceipt.Get.Exec:
      type: boolean
    Bank_2.Methods.History.Export.Get:
      type: object
      properties:
        output:
          type: string
        show_summary_by_groups:
          title: Вывести итого по группам
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        orders:
          $ref: '#/components/schemas/orders'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - output
      title: Экспорт лога банка
    Bank_2.Methods.History.Summary.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение сводки проведенных операций
    Bank_2.Methods.History.Summary.Get.Exec:
      type: array
    Bank_2.Methods.Referrals.ToBonus.Edit:
      type: object
      properties:
        sum:
          title: Сумма для перевода
          type: string
      required:
        - sum
      title: Перевод средств с реферального счета на бонусный
    Bank_2.Methods.Referrals.ToBonus.Edit.Exec:
      nullable: true
      type: integer
    Bank_2.Methods.Requisites.ContractTariffId.Get:
      type: object
      properties:
        contract_type:
          title: Тип контракта
          type: string
      required:
        - contract_type
      title: Получение id тарифа пользователя по типу контракта
    Bank_2.Methods.Requisites.ContractTariffId.Get.Exec:
      nullable: true
    Bank_2.Methods.Requisites.Print.Get:
      type: object
      properties:
        target_id:
          title: Id документа
          type: string
        type:
          title: Тип документа enum(RequisitesDocuments::$availableDocumentsTypes)
          type: string
        signed:
          title: |-
            Использовать подпись

            Если true, то документ с подписью (не распространяется на договоры)
          type: boolean
      required:
        - target_id
        - type
      title: Скачивание документа в формате PDF
    Bank_2.Methods.Requisites.PrintTotalReceipt.Get:
      type: object
      properties:
        date1:
          title: Дата начала диапазона
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        date2:
          title: Дата конца диапазона
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        org_id:
          title: Id организации
          type: string
        returnPdfDataForDiadoc:
          title: Для внутреннего использования
          type: boolean
        signed:
          title: |-
            Использовать подпись

            Если true, то документ с подписью (не распространяется на договоры)
          type: boolean
      required:
        - date1
        - date2
        - org_id
      title: Получение акта сверки (акты по предоплате выводятся в одном платеже)
    Bank_2.Methods.Requisites.PrintTotalReceipt.Get.Exec:
      nullable: true
    Bank_2.Methods.Requisites.PrintZip.Get:
      type: object
      properties:
        targets_ids:
          title: |-
            Список id документов

            Вместо targets_ids можно указывать набор параметров org_id, date1 и date2
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        org_id:
          title: Id организации
          nullable: true
          type: string
        date1:
          title: Дата начала диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        date2:
          title: Дата конца диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        type:
          title: Тип документа enum(RequisitesDocuments::$availableDocumentsTypes)
          type: string
        signed:
          title: |-
            Использовать подпись

            Если true, то документ с подписью (не распространяется на договоры)
          type: boolean
      required:
        - type
      title: Скачивание архива документов в формате PDF
    Bank_2.Methods.Subscriptions.Plans.Get:
      type: object
      properties: {}
      required: []
      title: Получение интерфейсов настройки всех планов подписки
    Bank_2.Methods.Subscriptions.Plans.Get.Exec:
      type: array
      items:
        $ref: '#/components/schemas/Bank_2.Objects.Subscriptions.Plan'
    Broker_2.Methods.Ads.Status.Edit:
      type: object
      properties:
        campaign_tv_id:
          title: Id кампании
          type: integer
        ads_data:
          title: Информация об объявлениях (id группы, id объявлений и статусы объявлений)
          type: array
      required:
        - campaign_tv_id
        - ads_data
      title: Изменение статуса объявлений
    Broker_2.Methods.Ads.Status.Edit.Exec:
      title: выводит int, если функция провайдера не определена
      nullable: true
      anyOf:
        - type: array
        - type: integer
        - type: 'null'
    Broker_2.Methods.Ads.ToModerate.Edit:
      type: object
      properties:
        campaign_tv_id:
          title: Id кампании
          type: integer
      required:
        - campaign_tv_id
      title: Отправка объявления на модерацию
    Broker_2.Methods.Ads.ToModerate.Edit.Exec:
      title: выводит int, если функция провайдера не определена
      nullable: true
      anyOf:
        - type: array
        - type: integer
    Broker_2.Methods.Campaigns.UpdateTargeting.Edit:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        include_used_in_other_projects:
          title: Получить ли информацию о том, в каких проектах интегрированы указанные компании
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        orders:
          $ref: '#/components/schemas/orders'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - project_id
        - filters
      title: Обновление данных таргетинга
    Broker_2.Methods.Campaigns.UpdateTargeting.Edit.Exec:
      type: integer
    Broker_2.Methods.Groups.Editor.Get:
      type: object
      properties:
        campaign_tv_id:
          title: Id рекламной кампании
          type: integer
        group_status:
          title: Статус группы
          nullable: true
          type: string
      required:
        - campaign_tv_id
      title: Получение групп рекламной кампании для редактора
    Broker_2.Methods.Groups.Editor.Get.Exec:
      type: array
    Broker_2.Methods.Keywords.Status.Edit:
      type: object
      properties:
        campaign_tv_id:
          title: Id кампании
          type: integer
        keywords_data:
          title: Информация о запросах (id группы и id запросов)
          type: array
      required:
        - campaign_tv_id
        - keywords_data
      title: Изменение статуса запросов рекламной кампании
    Broker_2.Methods.Keywords.Status.Edit.Exec:
      title: выводит int, если функция провайдера не определена
      nullable: true
      anyOf:
        - type: array
        - type: integer
        - type: 'null'
    Broker_2.Methods.Log.Export.Get:
      type: object
      properties:
        campaigns_tv_ids:
          title: Id компаний
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        output_format:
          title: Формат выходного файла
          default: csv
          type: string
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - campaigns_tv_ids
        - fields
        - orders
        - filters
        - offset
      title: Экспортирование архива логов
    Broker_2.Methods.Tasks.RateTask.Add:
      type: object
      properties:
        campaign_tv_id:
          title: Id кампании
          type: integer
      required:
        - campaign_tv_id
      title: Ручной запуск корректировки
    Broker_2.Methods.Tasks.RateTask.Add.Exec:
      nullable: true
      type: integer
    Competitors_2.Methods.Orders.Pay.Edit:
      type: object
      properties:
        region_index:
          title: Индекс региона (не путать с ключом региона)
          type: integer
        by_type:
          title: Тип отчета (по ключевой фразе или по домену)
          description: '@see Competitors_2::$availableByTypes'
          type: string
        query:
          title: Ключевая фраза (или ее часть) / url
          type: string
        date:
          title: Дата проверки
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        intersection:
          title: Оплаченная степень схожести доменов
          type: number
      required:
        - region_index
        - by_type
        - query
        - date
        - intersection
      title: Оплатить отчет
    Competitors_2.Methods.Orders.Pay.Edit.Exec:
      nullable: true
      type: integer
    Positions_2.Types.RegionDevice:
      type: integer
      enum:
        - 0
        - 1
        - 2
      title: Устройство региона
    Content_2.Types.Apometr.Action:
      type: string
      enum:
        - '0'
        - xml
      title: Тип выдачи
    Content_2.Methods.Apometr.Calendar.Get:
      type: object
      properties:
        region_index:
          title: |-
            Индекс региона

            Если не задан нужно задать параметры searcher_key, region_key, region_lang, region_device
          nullable: true
          type: integer
        searcher_key:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.SearcherKey'
        region_key:
          title: Ключ региона
          nullable: true
          type: integer
        region_lang:
          title: Язык региона
          nullable: true
          type: string
        region_device:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.RegionDevice'
        action:
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Apometr.Action'
        date_month:
          title: Дата, определяющая месяц, в формате YYYY-MM-01
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
      required: []
      title: Получение календаря апдейтов
    Content_2.Methods.Apometr.Calendar.Get.Exec:
      nullable: true
      type: array
    Content_2.Methods.Apometr.CHHistory.Get:
      type: object
      properties:
        datetime:
          title: Дата и время проверки
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Datetime'
        region_index:
          title: Индекс региона
          type: integer
        action:
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Apometr.Action'
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - datetime
        - region_index
        - action
        - fields
        - orders
        - filters
        - offset
      title: Получение истории urls, найденных в выдаче, за конкретную проверку
      description: '@deprecated Используйте Services\Content_2\Methods\Apometr\Snapshots\Top\Get'
      deprecated: true
    Content_2.Methods.Apometr.CHHistory.Get.Exec:
      type: array
    Models.Apometr.History:
      properties:
        time:
          nullable: true
        action:
          nullable: true
        region_index:
          nullable: true
        keyword_id:
          nullable: true
        url:
          nullable: true
        position:
          nullable: true
        d:
          nullable: true
        d_day:
          nullable: true
    Content_2.Methods.Apometr.History.Get:
      type: object
      properties:
        region_index:
          title: Индекс региона
          nullable: true
          type: integer
        searcher_key:
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.SearcherKey'
        region_key:
          title: Ключ региона
          type: integer
        region_lang:
          title: Язык региона
          default: ru
          type: string
        region_device:
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.RegionDevice'
        date:
          title: Дата
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        avg:
          title: Вернуть только средние значения по всем тематикам
          type: boolean
      required: []
      title: Получение истории шторма за период в 2 суток
    Content_2.Methods.Apometr.History.Get.Exec:
      nullable: true
      type: array
    Content_2.Methods.Apometr.Keywords.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение поисковых запросов апометра
    Content_2.Methods.Apometr.Keywords.Get.Exec:
      nullable: true
    Models.Apometr.Keywords:
      properties:
        id: {}
        lang:
          nullable: true
        name:
          nullable: true
        pool_id:
          nullable: true
    Content_2.Methods.Apometr.Updates.Get:
      type: object
      properties:
        region_index:
          title: Индекс региона
          type: integer
        date:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
      required:
        - region_index
        - date
      title: Получение апдейтов
    Content_2.Types.Update:
      type: object
      properties:
        Am:
          title: Балл апометра
          type: number
        action:
          title: 0 - обычная выдача, xml - xml выдача
          type: string
        is_storm:
          title: Зафиксирован шторм
          type: integer
        is_update:
          title: Зафиксирован апдейт
          type: integer
        pool_id:
          title: Id категории
          type: integer
        region_index:
          title: Индекс региона
          type: integer
        time:
          title: Дата и время проверки
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Datetime'
      required:
        - Am
        - action
        - is_storm
        - is_update
        - pool_id
        - region_index
        - time
    Content_2.Methods.Apometr.Updates.Get.Exec:
      nullable: true
      allOf:
        - $ref: '#/components/schemas/Content_2.Types.Update'
    Content_2.Methods.Journal.Articles.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение статьи
    Content_2.Methods.Journal.Articles.Get.Exec:
      type: array
    Content_2.Methods.Journal.BookmarksAuthors.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение закладок авторов
    Content_2.Methods.Journal.BookmarksAuthors.Get.Exec:
      type: array
    Content_2.Methods.Journal.Bookmarks.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение закладок
    Content_2.Methods.Journal.Bookmarks.Get.Exec:
      type: array
    Content_2.Methods.Journal.Course.Get:
      type: object
      properties:
        lessons_url:
          title: Ссылка на урок для поулчения pageChapter и pageLesson
          nullable: true
          type: string
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: |-
        Получение инофрмации о курсах

        Параметры выборки основаны на модели Models\Pages
    Content_2.Methods.Journal.Course.Get.Exec:
      nullable: true
      type: array
    Content_2.Methods.Journal.Rubrics.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение рубрики
    Content_2.Methods.Journal.Rubrics.Get.Exec:
      nullable: true
      type: array
    Content_2.Methods.Journal.Subscribe.Edit:
      type: object
      properties:
        subscribe:
          title: |-
            Подписаться/отписаться
            * 1: подписаться
            * 0: отписаться
          type: boolean
      required:
        - subscribe
      title: Изменение состояния подписки на рассылку журнала
    Content_2.Methods.Journal.Subscribe.Edit.Exec:
      type: integer
    Content_2.Methods.Pages.Order.Edit:
      type: object
      properties:
        subdomain:
          title: Поддомен папки
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Subdomain'
        parent_url:
          title: Адрес папки с документами
          type: string
        urls:
          title: Адреса документов в нужном порядке
          type: array
      required:
        - subdomain
        - parent_url
        - urls
      title: Сортировка документов
    Content_2.Methods.Pages.Order.Edit.Exec:
      nullable: true
      type: integer
    Content_2.Methods.Support.Menu.Get:
      type: object
      properties: {}
      required: []
      title: Получение меню справки
    Content_2.Methods.Support.Menu.Get.Exec:
      type: array
    Informer_2.Types.Push.Token.Type:
      type: string
      enum:
        - firebase
        - web
        - safari
        - safariAuth
      title: Типы токенов
    Informer_2.Methods.Push.Token.Add:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Informer_2.Types.Push.Token.Type'
        token:
          title: Токен
          type: string
      required:
        - type
        - token
      title: Регистрация токена
    Informer_2.Methods.Push.Token.Add.Exec:
      type: integer
    Informer_2.Methods.Push.Token.Del:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Informer_2.Types.Push.Token.Type'
        token:
          title: Токен
          type: string
      required:
        - type
        - token
      title: Удаление токена
    Informer_2.Methods.Push.Token.Del.Exec:
      type: integer
    Keywords_2.Types.Collect.SearcherKey:
      type: integer
      enum:
        - 0
        - 1
        - 5
        - 100
        - 101
        - 104
        - 105
      title: Ключ поисковой системы для сбора запросов
    Keywords_2.Types.Collect.HintGenerator:
      type: string
      enum:
        - letter
        - letter_ru
        - number
        - space
      title: Тип метода подбора подсказок
    Keywords_2.Types.Collect.HintGenerators:
      type: array
      items:
        $ref: '#/components/schemas/Keywords_2.Types.Collect.HintGenerator'
      title: Типы метода перебора
      description: |-
        @extends API\Types\AbstractObjectArray<HintGenerator>
        @method HintGenerator[] getValues()
        @method HintGenerator current()
        @see HintGenerator
    Keywords_2.Types.Collect.Qualifier:
      type: object
      properties:
        region_key:
          type: integer
        searcher_key:
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Collect.SearcherKey'
        region_lang:
          nullable: true
          type: string
        also_searched:
          nullable: true
          type: boolean
        depth:
          nullable: true
          type: integer
        hint_depth:
          nullable: true
          type: integer
        hint_generators:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Collect.HintGenerators'
      required:
        - region_key
        - searcher_key
      title: Определитель с настройками для подбора
    Keywords_2.Types.Collect.Qualifiers:
      type: array
      items:
        $ref: '#/components/schemas/Keywords_2.Types.Collect.Qualifier'
      title: Определители с настройками для подбора
      description: |-
        @extends API\Types\AbstractObjectArray<Qualifier>
        @method Qualifier[] getValues()
        @method Qualifier current()
        @see Qualifier
    Keywords_2.Types.Collect.ToType:
      type: string
      enum:
        - in_folder
        - in_folder_last
      title: Куда добавлять добавляемые группы
    Keywords_2.Methods.Collect.Go.Edit:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        keywords:
          title: Список исходных запросов
          type: array
        qualifiers:
          title: Объекты определителей настроек ПС и регионов
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Collect.Qualifiers'
        keywords_minus:
          title: Минус фразы (только для searcher_key = 0 и searcher_key = 1)
          type: array
        to_group_id:
          title: |-
            Id группы для размещения подобранных запросов

            Можно указывать только при `in_one_group` = `true`
          nullable: true
          type: integer
        in_one_group:
          title: Собирать все запросы в одну группу
          type: boolean
        to_id:
          title: Id папки для новых групп
          type: integer
        to_type:
          nullable: true
          default: in_folder_last
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Collect.ToType'
        currency:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Currency'
        debug:
          nullable: true
          type: string
      required:
        - project_id
        - keywords
        - qualifiers
      title: Постановка задачи на подбор запросов
    Keywords_2.Methods.Collect.Go.Edit.Exec:
      title: Массив созданных групп
      nullable: true
      type: array
    Keywords_2.Methods.Collect.Price.Get:
      type: object
      properties:
        apply_discount:
          title: 'Отображать сумму с учетом скидки (по умолчанию: 1)'
          default: true
          type: boolean
        project_id:
          title: ID проекта
          type: integer
        keywords:
          title: Список исходных запросов
          type: array
        qualifiers:
          title: Объекты определителей настроек ПС и регионов
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Collect.Qualifiers'
        keywords_minus:
          title: Минус фразы (только для searcher_key = 0 и searcher_key = 1)
          type: array
        to_group_id:
          title: |-
            Id группы для размещения подобранных запросов

            Можно указывать только при `in_one_group` = `true`
          nullable: true
          type: integer
        in_one_group:
          title: Собирать все запросы в одну группу
          type: boolean
        to_id:
          title: Id папки для новых групп
          type: integer
        to_type:
          nullable: true
          default: in_folder_last
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Collect.ToType'
        currency:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Currency'
        debug:
          nullable: true
          type: string
      required:
        - project_id
        - keywords
        - qualifiers
      title: Получение стоимости подбора запросов
    Keywords_2.Methods.Collect.Price.Get.Exec:
      title: Информация о стоимости запуска подбора запросов
      type: object
      properties:
        pricesByUsers:
          type: object
          additionalProperties:
            type: object
            properties:
              price:
                type: number
              priceOriginal:
                type: number
              qualifiers:
                type: object
                properties:
                  region_key:
                    type: integer
                  searcher_key:
                    anyOf:
                      - type: integer
                        enum:
                          - '0'
                      - type: integer
                        enum:
                          - '1'
                      - type: integer
                        enum:
                          - '5'
                      - type: integer
                        enum:
                          - '100'
                      - type: integer
                        enum:
                          - '101'
                      - type: integer
                        enum:
                          - '102'
                      - type: integer
                        enum:
                          - '104'
                      - type: integer
                        enum:
                          - '105'
                      - type: integer
                        enum:
                          - '106'
                  region_lang:
                    anyOf:
                      - type: string
                      - type: 'null'
                  also_searched:
                    anyOf:
                      - type: integer
                      - type: 'null'
                  depth:
                    anyOf:
                      - type: integer
                      - type: 'null'
                  hint_depth:
                    anyOf:
                      - type: integer
                        enum:
                          - '1'
                      - type: integer
                        enum:
                          - '2'
                      - type: integer
                        enum:
                          - '3'
                  hint_generators:
                    type: array
                    items:
                      anyOf:
                        - type: string
                          enum:
                            - letter
                        - type: string
                          enum:
                            - letter_ru
                        - type: string
                          enum:
                            - number
                        - type: string
                          enum:
                            - space
                required:
                  - region_key
                  - searcher_key
                  - hint_depth
                  - hint_generators
              comment:
                type: string
            required:
              - price
              - priceOriginal
              - qualifiers
              - comment
      required:
        - pricesByUsers
    Keywords_2.Methods.Keywords.Import.Add:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        keywords:
          title: |-
            Массив ключевых запросов в формате CSV

            - array keywords - массив ключевых запросов, допускается формат CSV
            - file(txt, csv) keywords - файл с содержимым для импорта, допускается формат CSV
            - resource keywords - указатель на файл с содержимым для импорта, допускается формат CSV
            - нельзя передавать keywords одновременно в виде массива, в виде файла или в виде ресурса
          nullable: true
        folder_id:
          title: Id папки, если папка не указана будет использована корневая папка проекта
          nullable: true
          type: integer
        group_id:
          title: Id группы, если не указан будет создана новая группа в указанной папке
          nullable: true
          type: integer
        group_name:
          title: Имя группы, если не указан group_id, если группа с таким именем уже существует, то будет исползоваться она
          nullable: true
          type: string
        group_on:
          title: 'Активность создаваемых групп (по умолчанию: 1 - активные)'
          default: true
          type: boolean
        move_duplicate:
          title: 'Переносить ли дубли (по умолчанию: 0 - не переносить)'
          nullable: true
          type: boolean
        move_duplicate_group_id:
          title: Id группы для переноса дублей, если не указана будет использован параметр move_duplicate_group_name
          nullable: true
          type: integer
        move_duplicate_group_name:
          title: Имя группы для переноса дублей, если группы с таким именем в папке move_duplicate_folder_id нет, она будет создана
          nullable: true
          type: string
        move_duplicate_folder_id:
          title: Id папки для переноса дублей, если не указана, то будет использоваться корневая папка проекта
          nullable: true
          type: integer
        remove_special_chars:
          title: 'Вырезать ли плюсы, точки, запятые, апострофы, кавычки (по умолчанию: 0 - не вырезать)'
          nullable: true
          type: boolean
        tags:
          title: Массив номеров тегов
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Tags_2.Types.TagsIds'
      required:
        - project_id
      title: |-
        Импорт запросов (по необходимости зависимых с ними групп и папок)

        Доступные поля для импорта: group_folder_path|group_name|name|tags|target поля перекрывают аналогичные параметры в запросе
      description: '@see Keywords_2\Mods\Keywords\Import::fromHandle()'
    Keywords_2.Methods.Keywords.Import.Add.Exec:
      nullable: true
      type: array
    Keywords_2.Types.Volumes.NoRecheck:
      type: integer
      enum:
        - 0
        - 1
        - 2
      title: Какие запросы следует пропусить при перепроверке частоты
    Keywords_2.Types.Volumes.SearcherKey:
      type: integer
      enum:
        - 0
        - 1
      title: Ключ поисковой системы для проверки частоты
    Keywords_2.Types.Volumes.Qualifier:
      type: object
      properties:
        id:
          title: Строковй идентификатор определителя
          type: string
        region_key:
          type: integer
        searcher_key:
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Volumes.SearcherKey'
        type:
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Volumes.Type'
      required:
        - id
        - region_key
        - searcher_key
        - type
      title: Определитель с настройками региона для проверки частоты запросов
    Keywords_2.Types.Volumes.Qualifiers:
      type: array
      items:
        $ref: '#/components/schemas/Keywords_2.Types.Volumes.Qualifier'
      title: Определители проверки частоты
      description: |-
        @extends AbstractStringArray<Qualifier>
        @method Qualifier[] getValues()
        @method Qualifier current()
        @method Qualifier offsetGet()
        @see \TV\API\Types\Qualifier
    Keywords_2.Methods.Volumes.Go.Edit:
      type: object
      properties:
        debug:
          title: |-
            Запуск в режиме отладки

            Только для админов
          description: '@private'
          type: boolean
        project_id:
          title: Id проекта
          type: integer
        no_recheck:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Volumes.NoRecheck'
        target_type:
          title: Тип объекта фильтрации
          default: keywords
          type: string
        qualifiers:
          title: |-
            Список регионов с настройками для проверки частоты

            - Обязателен, если `set_qualifiers_for_visibility` != `true`
            - Нельзя указывать, если `set_qualifiers_for_visibility` = `true`
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Volumes.Qualifiers'
        set_qualifiers_for_visibility:
          title: Если установлено, то будут проверены частоты для всех регионов проекта с нужным типом для расчета видимости
          nullable: true
          type: boolean
        group_folder_id_depth:
          title: При фильтрации по ID папок также искать в подпапках
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
      title: Постановка задачи на проверку частоты запросов
    Keywords_2.Methods.Volumes.Go.Edit.Exec:
      title: Список id проектов, отправленных на проверку
      type: object
      properties:
        projectIds:
          type: array
          items:
            type: integer
      required:
        - projectIds
    Keywords_2.Methods.Volumes.Price.Get:
      type: object
      properties:
        debug:
          title: |-
            Запуск в режиме отладки

            Только для админов
          description: '@private'
          type: boolean
        project_id:
          title: Id проекта
          type: integer
        no_recheck:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Volumes.NoRecheck'
        target_type:
          title: Тип объекта фильтрации
          default: keywords
          type: string
        qualifiers:
          title: |-
            Список регионов с настройками для проверки частоты

            - Обязателен, если `set_qualifiers_for_visibility` != `true`
            - Нельзя указывать, если `set_qualifiers_for_visibility` = `true`
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Volumes.Qualifiers'
        set_qualifiers_for_visibility:
          title: Если установлено, то будут проверены частоты для всех регионов проекта с нужным типом для расчета видимости
          nullable: true
          type: boolean
        group_folder_id_depth:
          title: При фильтрации по ID папок также искать в подпапках
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
      title: Информация о стоимости запуска проверки позиций по проектам
    Keywords_2.Methods.Volumes.Price.Get.Exec:
      type: object
    Landings_2.Methods.Hr.Feedback.Add:
      type: object
      properties:
        name:
          title: Имя и фамилия
          type: string
        email:
          title: Email
          type: string
        phone:
          title: Номер телефона
          type: string
        telegram:
          title: Ссылка на телеграм, можно укзать логин
          type: string
        comment:
          title: Прикрепленное сообщение
          type: string
      required:
        - name
        - email
        - phone
        - telegram
        - comment
      title: Отправление письма с лэндинга вакансий на hr@topvisor.com
    Landings_2.Methods.Hr.Feedback.Add.Exec:
      nullable: true
      type: integer
    Mentions_2.Types.SearchersKeys:
      type: array
      items:
        $ref: '#/components/schemas/Mentions_2.Types.SearcherKey'
      title: Id поисковых системы
      description: '@see SearcherKey'
    Mentions_2.Methods.Checker.Go.Edit:
      type: object
      properties:
        searchers_keys:
          title: Ключи источников (фильтр)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Mentions_2.Types.SearchersKeys'
      required: []
      title: Отправка правил на проверку
    Mentions_2.Methods.Checker.Go.Edit.Exec:
      type: array
    Mentions_2.Methods.Checker.Price.Get:
      type: object
      properties:
        searchers_keys:
          title: Ключи источников (фильтр)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Mentions_2.Types.SearchersKeys'
        apply_discount:
          title: Отображать сумму с учетом скидки (по умолчанию 1)
          default: true
          type: boolean
      required: []
      title: Получение стоимости проверки
    Mentions_2.Methods.Checker.Price.Get.Exec:
      type: array
    Mentions_2.Types.Rules.Keywords.Type:
      type: string
      enum:
        - any
        - plus
        - minus
      title: Типы доступных фраз
    Mentions_2.Methods.Rules.Keywords.Edit:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        keywords:
          title: Фразы для изменения
          type: array
        type:
          title: Тип ключевых слов
          allOf:
            - $ref: '#/components/schemas/Mentions_2.Types.Rules.Keywords.Type'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - keywords
        - type
        - filters
      title: Изменение ключевых слов правила
    Mentions_2.Methods.Rules.Keywords.Edit.Exec:
      type: integer
    Mentions_2.Methods.Rules.Rename.Edit:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        name:
          title: Имя
          type: string
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - name
        - filters
      title: Изменить имя правила
    Mentions_2.Methods.Rules.Rename.Edit.Exec:
      type: integer
    Mentions_2.Methods.Searchers.Depth.Edit:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        rule_id:
          title: ID правила
          type: integer
        depth:
          title: |-
            Глубина сбора упоминаний (x100)

            От 1 до 10
          nullable: true
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - rule_id
        - filters
      title: Изменение глубины сбора упоминаний
    Mentions_2.Methods.Searchers.Depth.Edit.Exec:
      type: integer
    Mentions_2.Methods.Searchers.Enabled.Edit:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        rule_id:
          title: ID правила
          type: integer
        enabled:
          title: Включен ли поисковик
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - rule_id
        - filters
      title: Изменить активность поисковика
    Mentions_2.Methods.Searchers.Enabled.Edit.Exec:
      type: integer
    Payments_2.Methods.Recurrent.Suspend.Edit:
      type: object
      properties:
        payment_id:
          title: id платежа, связанного с подпиской или тарифом
          type: integer
        suspend:
          title: |-
            Флаг приостановки/возобновления рекуррентных платежей

            - `true`: приостановить
            - `false`: возобновить
          type: boolean
      required:
        - payment_id
        - suspend
      title: Управление приостановкой/возобновлением рекуррентных платежей
    Payments_2.Methods.Recurrent.Suspend.Edit.Exec:
      nullable: true
      type: integer
    Payments_2.Methods.Subscriptions.Next.Edit:
      type: object
      properties:
        subscription_plan_id:
          title: Id следующего плана подписки
          type: string
        subscription_cycle:
          title: Значение следующего цикла подписки
          allOf:
            - $ref: '#/components/schemas/Bank_2.Types.Subscriptions.Cycle'
      required:
        - subscription_plan_id
        - subscription_cycle
      title: |-
        Изменения подписки на следующий расчетный период

        Изменение доступно только в рамках одной платежной системы

        Если требуется изменить другие параметры подписки, это можно только путем остановки этой подписки и созданием новой подписки
    Payments_2.Methods.Subscriptions.Next.Edit.Exec:
      type: boolean
    Payments_2.Methods.Tariff.DelCard.Edit:
      type: object
      properties: {}
      required: []
      title: Отписка от тарифа, оплаченного картой
    Payments_2.Methods.Tariff.DelCard.Edit.Exec:
      nullable: true
      type: integer
    Payments_2.Methods.Tariff.NextToDiadoc.Edit:
      type: object
      properties:
        next_to_diadoc:
          title: Флаг - применение настройки тарифов
          type: boolean
      required:
        - next_to_diadoc
      title: 'Настройка оплаты тарифов: выставлять ли счета через диадок'
    Payments_2.Methods.Tariff.NextToDiadoc.Edit.Exec:
      nullable: true
      type: integer
    Payments_2.Methods.Tariff.SetNext.Edit:
      type: object
      properties:
        id:
          title: Id тарифа
          type: integer
      required:
        - id
      title: Смена тарифа со следующего месяца
    Payments_2.Methods.Tariff.SetNext.Edit.Exec:
      nullable: true
      type: integer
    Positions_2.Methods.Checker.Go.Edit:
      type: object
      properties:
        debug:
          title: |-
            Запуск в режиме отладки

            Только для админов
          description: '@private'
          type: boolean
        regions_indexes:
          title: Проверка с учетом фильтра по регионам
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        folders_ids:
          title: Проверка с учетом фильтра по папкам
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        folders_ids_depth:
          title: При фильтрации по ID папок также проверять в подпапках
          description: '@type bool'
          type: boolean
        groups_ids:
          title: Проверка с учетом фильтра по группам (сочетается с фильтром folders_ids по логике И)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        do_snapshots:
          title: |-
            Глубина проверки снимка (перекрывает аналогичное значение в настройках проекта)

            9 - означет глубину 10

            enum(0, 2, 3, 5, 9)

            TODO: сдлеать enum
          nullable: true
          type: integer
        keyword_id:
          title: |-
            Проверка одного запроса

            - не допускается при массовой проверке проектов
            - требует указания одного `regions_indexes`
            - не допускается совместное использование с `folders_ids`, `groups_ids` и `do_snapshots`
          nullable: true
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Отправка проектов на проверку позиций
    Positions_2.Methods.Checker.Go.Edit.Exec:
      title: Список id проектов, отрпавленных на проверку
      type: object
      properties:
        projectIds:
          type: array
          items:
            type: integer
      required:
        - projectIds
    Positions_2.Methods.Checker.Price.Get:
      type: object
      properties:
        debug:
          title: |-
            Запуск в режиме отладки

            Только для админов
          description: '@private'
          type: boolean
        regions_indexes:
          title: Проверка с учетом фильтра по регионам
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        folders_ids:
          title: Проверка с учетом фильтра по папкам
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        folders_ids_depth:
          title: При фильтрации по ID папок также проверять в подпапках
          description: '@type bool'
          type: boolean
        groups_ids:
          title: Проверка с учетом фильтра по группам (сочетается с фильтром folders_ids по логике И)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        do_snapshots:
          title: |-
            Глубина проверки снимка (перекрывает аналогичное значение в настройках проекта)

            9 - означет глубину 10

            enum(0, 2, 3, 5, 9)

            TODO: сдлеать enum
          nullable: true
          type: integer
        keyword_id:
          title: |-
            Проверка одного запроса

            - не допускается при массовой проверке проектов
            - требует указания одного `regions_indexes`
            - не допускается совместное использование с `folders_ids`, `groups_ids` и `do_snapshots`
          nullable: true
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Информация о стоимости запуска проверки позиций по проектам
    Positions_2.Methods.Checker.Price.Get.Exec:
      type: object
    Positions_2.Methods.Searchers.Enabled.Edit:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        searcher_key:
          title: Ключ ПС
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.SearcherKey'
        enabled:
          title: |-
            - 1 - включить
            - 0 - выключить
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - searcher_key
        - enabled
        - filters
      title: Включение/выключение ПС
    Positions_2.Methods.Searchers.Enabled.Edit.Exec:
      nullable: true
    Positions_2.Methods.Searchers.Regions.Add:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        searcher_key:
          title: Ключ ПС
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.SearcherKey'
        region_key:
          title: |-
            Ключ региона

            Для разных ПС список доступных регионов может быть разный
          type: integer
        region_lang:
          title: |-
            Язык региона

            Для разных ПС список языков разный
          nullable: true
          type: string
        region_device:
          title: Устройство региона
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.RegionDevice'
        region_depth:
          title: |-
            Глубина региона

            - 1-3 для Яндекса (ПК)
            - 1-10 для Google
            - 1-3 для GooglePlay
          default: 1
          type: integer
      required:
        - project_id
        - searcher_key
        - region_key
      title: Добавление региона
    Positions_2.Methods.Searchers.Regions.Add.Exec:
      nullable: true
    Positions_2.Methods.Searchers.Regions.Del:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        region_index:
          title: Регион, который требуется удалить
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - region_index
        - filters
      title: Удаление региона
    Positions_2.Methods.Searchers.Regions.Del.Exec:
      nullable: true
    Positions_2.Methods.Searchers.Regions.Edit:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        region_index:
          title: Регион, который требуется изменить
          type: integer
        region_lang:
          title: |-
            Язык региона

            Для разных ПС список языков разный
          nullable: true
          type: string
        region_device:
          title: Устройство региона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.RegionDevice'
        region_depth:
          title: |-
            Глубина региона

            - 1-3 для Яндекса (ПК)
            - 1-10 для Google
            - 1-3 для GooglePlay
          nullable: true
          type: integer
        enabled:
          title: Включен
          nullable: true
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - region_index
        - filters
      title: Изменение региона
    Positions_2.Methods.Searchers.Regions.Edit.Exec:
      type: integer
    Positions_2.Types.SearchersKeys:
      type: array
      items:
        $ref: '#/components/schemas/Positions_2.Types.SearcherKey'
      title: Id поисковых системы для проверки позиций
    Positions_2.Methods.Searchers.Sort.Edit:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        searchers_keys:
          title: Ключи ПС
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.SearchersKeys'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - filters
      title: Настройка сортировки ПС
    Positions_2.Methods.Searchers.Sort.Edit.Exec:
      nullable: true
    Projects_2.Methods.Analytics.Graph.Get:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        axe:
          title: Номер метрики
          allOf:
            - $ref: '#/components/schemas/Projects_2.Types.Analytics.Axe'
        data:
          title: Данные графика
          type: array
        compare_axe:
          title: Сравнение метрики
          nullable: true
          type: integer
      required:
        - project_id
        - axe
        - data
      title: Получение данных графика
    Projects_2.Methods.Analytics.Graph.Get.Exec:
      nullable: true
      type: array
    Projects_2.Methods.Competitors.Move.Edit:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        id:
          title: ID конкурента
          type: integer
        to_id:
          title: Переместить к указанному конкуренту
          type: integer
        to_type:
          title: |-
            Позиция перемещения

            - before
            - after
          nullable: true
          default: after
          type: string
      required:
        - project_id
        - id
        - to_id
      title: Перемещение конкурента (сортировка)
    Projects_2.Methods.Competitors.Move.Edit.Exec:
      nullable: true
      type: integer
    Projects_2.Methods.Competitors.Name.Edit:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        id:
          title: ID конкурента
          type: integer
        name:
          title: Имя
          type: string
      required:
        - project_id
        - id
        - name
      title: Установка имени конкурента
    Projects_2.Methods.Competitors.Name.Edit.Exec:
      type: integer
    Projects_2.Methods.Competitors.On.Edit:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        ids:
          title: ID конкурентов
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        'on':
          title: |-
            Активность проекта

            - -1 - выключен
            - 0 - включен
          type: integer
      required:
        - project_id
        - ids
        - 'on'
      title: Включение/выключение конкурентов
    Projects_2.Methods.Competitors.On.Edit.Exec:
      type: integer
    Projects_2.Methods.Folders.Move.Edit:
      type: object
      properties:
        folder_id:
          title: Id папки
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - folder_id
        - filters
      title: Перемещение проектов в папку
    Projects_2.Methods.Folders.Move.Edit.Exec:
      nullable: true
    Projects_2.Methods.Folders.MoveFolder.Edit:
      type: object
      properties:
        id:
          title: Id папки, которую надо перенести
          type: integer
        insert_after_id:
          title: |-
            Id папки, после которой надо разместить перемещаемую папку

            Укажите 0, если надо переместить папку в начало списка
          type: integer
      required:
        - id
        - insert_after_id
      title: |-
        Переместить папку

        Вложенные папки запрещены, поэтому перемещение происходит только в пределах одного списка
    Projects_2.Methods.Folders.MoveFolder.Edit.Exec:
      nullable: true
    Projects_2.Methods.Folders.Name.Edit:
      type: object
      properties:
        id:
          title: Id папки
          type: integer
        name:
          title: Имя папки
          type: string
      required:
        - id
        - name
      title: Изменение имени папки
    Projects_2.Methods.Folders.Name.Edit.Exec:
      nullable: true
    Projects_2.Methods.Master.HintsCompetitors.Get:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
      required:
        - project_id
      title: |-
        Получить подсазки конкурентов для добавления в проект

        Доступ по API закрыт
    Projects_2.Methods.Master.HintsCompetitors.Get.Exec:
      type: array
    Projects_2.Methods.Master.HintsKeywords.Get:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
      required:
        - project_id
      title: |-
        Получить подсазки запросов для добавления в проект
        Доступ по API закрыт
    Projects_2.Methods.Master.HintsKeywords.Get.Exec:
      type: array
    Projects_2.Methods.Projects.Copy.Add:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        copy_keywords:
          title: Копировать ли запросы проекта
          nullable: true
          type: boolean
        copy_positions:
          title: Копировать ли позиции по запросам проекта (если copy_keywords = 1)
          nullable: true
          type: boolean
      required:
        - project_id
      title: Копирование проекта
    Projects_2.Methods.Projects.Copy.Add.Exec:
      nullable: true
      type: string
    Projects_2.Methods.Projects.Favorite.Edit:
      type: object
      properties:
        favorite:
          title: Флаг того, что проект ибранный
          default: true
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Настройка избранных проектов
    Projects_2.Methods.Projects.Favorite.Edit.Exec:
      nullable: true
      type: integer
    Projects_2.Methods.Projects.Move.Edit:
      type: object
      properties:
        id:
          title: ID проекта
          type: integer
        to_id:
          title: Переместить к указанному проекту
          type: integer
        to_type:
          title: |-
            Позиция перемещения:
            - before
            - after
          nullable: true
          default: after
          type: string
      required:
        - id
        - to_id
      title: Перемещение проекта (сортировка)
    Projects_2.Methods.Projects.Move.Edit.Exec:
      nullable: true
      type: integer
    Projects_2.Methods.Projects.Name.Edit:
      type: object
      properties:
        name:
          title: Новое имя проекта
          type: string
        id:
          title: ID проекта
          type: integer
      required:
        - name
        - id
      title: Установка имени проекта
    Projects_2.Methods.Projects.Name.Edit.Exec:
      type: integer
    Projects_2.Methods.Projects.On.Edit:
      type: object
      properties:
        'on':
          title: |-
            Активность проекта
            - -1 - архив
            - 0 - обычный
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - 'on'
        - filters
      title: Редактирование "on" проектов
    Projects_2.Methods.Projects.On.Edit.Exec:
      type: integer
    Projects_2.Methods.Projects.Sort.Edit:
      type: object
      properties:
        orders:
          type: array
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - orders
        - filters
      title: Изменение сортировки проектов
    Projects_2.Methods.Projects.Sort.Edit.Exec:
      nullable: true
      type: integer
    Projects_2.Methods.Projects.Tags.Edit:
      type: object
      properties:
        tags:
          title: enum(1..10) tags - теги проекта (по умолчанию - [1])
          nullable: true
          default:
            - 1
          type: array
        id:
          title: ID проекта
          type: integer
      required:
        - id
      title: Редактирование тегов проектов
    Projects_2.Methods.Projects.Tags.Edit.Exec:
      nullable: true
      type: integer
    Projects_2.Methods.Projects.Url.Edit:
      type: object
      properties:
        id:
          title: ID проекта
          type: integer
        url:
          title: Новая ссылка
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.UrlShort'
      required:
        - id
        - url
      title: Редактирование ссылки проекта
    Projects_2.Methods.Projects.Url.Edit.Exec:
      type: integer
    Projects_2.Methods.Rights.ChangeOwner.Del:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        email:
          title: Почта
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Email'
      required:
        - project_id
        - email
      title: Отмена передачи проекта
    Projects_2.Methods.Rights.ChangeOwner.Del.Exec:
      nullable: true
      type: integer
    Projects_2.Methods.Rights.ChangeOwner.Edit:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        email:
          title: Почта
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Email'
      required:
        - project_id
        - email
      title: Инициализация передачи проекта другому пользователю
    Projects_2.Methods.Rights.ChangeOwner.Edit.Exec:
      nullable: true
      type: integer
    Projects_2.Methods.Status.Registrar.Get:
      type: object
      properties:
        domain:
          title: Домен
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.UrlShort'
      required:
        - domain
      title: |-
        Получение информации о регистрации домена

        Возвращает объект с параметрами:
        - wait_time, если данные не готовы
        - created, если данные готовы
        - paidtill, если данные готовы
    Projects_2.Methods.Status.Registrar.Get.Exec:
      allOf:
        - $ref: '#/components/schemas/stdClass'
    Projects_2.Methods.Status.Ssl.Get:
      type: object
      properties:
        domain:
          title: Домен
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Url'
      required:
        - domain
      title: |-
        Получение информации об SSL сертификате
        Возваращает объект с параметрами:
        - expire
    Projects_2.Methods.Status.Ssl.Get.Exec:
      allOf:
        - $ref: '#/components/schemas/stdClass'
    Projects_2.Methods.Tasks.Volumes.Add:
      type: object
      properties:
        url:
          title: Url проекта (домен или url страницы)
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.UrlShort'
        keywords:
          title: |-
            Массив ключевых запросов в формате CSV

            - array keywords - массив ключевых запросов, допускается формат CSV
          type: array
        remove_special_chars:
          title: 'Вырезать ли плюсы, точки, запятые, апострофы, кавычки (по умолчанию: 0 - не вырезать)'
          nullable: true
          type: boolean
        no_recheck:
          title: |-
            Проверять ли запросы

            - 0: проверять
            - 1: не проверять запросы с актуальной частотой
            - 2: не проверять запросы с частотой
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Volumes.NoRecheck'
        qualifiers:
          title: Объекты определителей частоты (параметр не обязателен, если check_all_regions = true)
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Volumes.Qualifiers'
      required:
        - url
        - keywords
        - qualifiers
      title: Создание задачи
    Projects_2.Methods.Tasks.Volumes.Add.Exec:
      nullable: true
    Quiz_2.Methods.QuestionsResponses.Multi.Add:
      type: object
      properties:
        questions_responses:
          title: Ответы
          type: array
      required:
        - questions_responses
      title: Добавление нескольких ответов
    Quiz_2.Methods.QuestionsResponses.Multi.Add.Exec:
      nullable: true
      type: integer
    Redmine_2.Methods.Users.Groups.Get:
      type: object
      properties: {}
      required: []
      title: Получить список групп с пользователями
    Redmine_2.Methods.Users.Groups.Get.Exec:
      type: array
    Reports_2.Methods.Positions.SendTest.Edit:
      type: object
      properties:
        project_id:
          title: Id проекта, по которому необходимо отправить тестовый отчет
          type: integer
      required:
        - project_id
      title: Отправить тестовый отчет
    Reports_2.Methods.Positions.SendTest.Edit.Exec:
      type: integer
    Schedule_2.Methods.Settings.EmailsHints.Get:
      type: object
      properties:
        term:
          type: string
      required: []
      title: Получить список email, используемых в любых расписаниях, к которым есть доступ у аккаунта
    Schedule_2.Methods.Settings.EmailsHints.Get.Exec:
      type: array
    Tickets_2.Methods.Admin.Message.Del:
      type: object
      properties:
        id:
          title: ID ответа
          type: integer
      required:
        - id
      title: Удаление ответа в тикете, только для админов
    Tickets_2.Methods.Admin.Message.Del.Exec:
      nullable: true
      type: integer
    Tickets_2.Methods.Admin.Message.Edit:
      type: object
      properties:
        id:
          title: ID редактируемого поста тикета
          type: integer
        text:
          title: Текст сообщения
          type: string
      required:
        - id
        - text
      title: Редактирование текста ответа в тикете, только для админов
    Tickets_2.Methods.Admin.Message.Edit.Exec:
      nullable: true
      type: integer
    Tickets_2.Methods.Admin.Templates.Add:
      type: object
      properties:
        name:
          title: Название
          type: string
        text:
          title: Текст
          type: string
      required:
        - name
        - text
      title: Добавление шаблона тикета
    Tickets_2.Methods.Admin.Templates.Add.Exec:
      nullable: true
      type: integer
    Tickets_2.Methods.Admin.Templates.Del:
      type: object
      properties:
        id:
          title: ID шаблона
          type: integer
      required:
        - id
      title: Удаление шаблона
    Tickets_2.Methods.Admin.Templates.Del.Exec:
      nullable: true
      type: integer
    Tickets_2.Methods.Admin.Templates.Edit:
      type: object
      properties:
        id:
          title: ID шаблона
          type: integer
        name:
          title: Название
          type: string
        text:
          title: Текст
          type: string
      required:
        - id
        - name
        - text
      title: Изменение шаблона
    Tickets_2.Methods.Admin.Templates.Edit.Exec:
      nullable: true
      type: integer
    Tickets_2.Methods.Admin.Templates.Get:
      type: object
      properties:
        search:
          title: Текст для поиска
          nullable: true
          type: string
      required: []
      title: Получение шаблона тикета
    Tickets_2.Methods.Admin.Templates.Get.Exec:
      nullable: true
      type: array
    Tickets_2.Methods.Admin.Ticket.Edit:
      type: object
      properties:
        id:
          type: integer
        is_important:
          title: Флаг того, что тикет важный
          nullable: true
          type: boolean
        task_id:
          title: Номер задачи redmine, связанной с тикетом
          nullable: true
          type: integer
        tags:
          title: Доступные теги тикета
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Tags_2.Types.TagsIds'
        status:
          title: Статус тикета
          nullable: true
          type: boolean
      required:
        - id
      title: Редактирование тикета (для админов)
    Tickets_2.Methods.Admin.Ticket.Edit.Exec:
      nullable: true
      type: integer
    Tickets_2.Methods.Admin.TicketSplit.Edit:
      type: object
      properties:
        id:
          title: Id тикета
          type: integer
      required:
        - id
      title: Перенос последниего сообщения (до 1 сообщения автора) в новый тикет
    Tickets_2.Methods.Admin.TicketSplit.Edit.Exec:
      nullable: true
      type: integer
    Tickets_2.Methods.Admin.User.Get:
      type: object
      properties:
        id:
          title: ID пользователя
          type: integer
      required:
        - id
      title: Получение инфомрации о пользователе
    Tickets_2.Methods.Admin.User.Get.Exec:
      type: array
    Tickets_2.Methods.Admin.UserId.Edit:
      type: object
      properties:
        id:
          title: ID тикета
          type: integer
        user_id:
          title: ID юзера для установки
          type: integer
      required:
        - id
        - user_id
      title: Установка userId для тикетов без userId
    Tickets_2.Methods.Admin.UserId.Edit.Exec:
      nullable: true
      type: integer
    Tickets_2.Methods.Tickets.AdminComment.Edit:
      type: object
      properties:
        id:
          title: ID тикета
          type: integer
        comment:
          title: Комментарий
          nullable: true
          type: string
      required:
        - id
      title: Редактирваоние комменатрий админа
    Tickets_2.Methods.Tickets.AdminComment.Edit.Exec:
      nullable: true
      type: integer
    Tickets_2.Methods.Tickets.Info.Get:
      type: object
      properties: {}
      required: []
      title: |-
        Получение краткой информации о тикетах

        id последнего непрочитанного тикета, число непрочитанных тикетов
    Tickets_2.Methods.Tickets.Info.Get.Exec:
      type: array
    Tickets_2.Methods.Tickets.SetReaded.Edit:
      type: object
      properties:
        id:
          title: Id тикета
          type: integer
      required:
        - id
      title: Пометка тикета как "прочитанный" для автора тикета или админов
    Tickets_2.Methods.Tickets.SetReaded.Edit.Exec:
      nullable: true
      type: integer
    Tickets_2.Methods.Tickets.Writing.Edit:
      type: object
      properties:
        id:
          title: ID тикета
          type: integer
        text:
          title: |-
            Текст

            text = '' - отмена написания

            text = null - написания со скрытым содержимым (без текста)
          nullable: true
          type: string
      required:
        - id
      title: Написание текста
    Tickets_2.Methods.Tickets.Writing.Edit.Exec:
      nullable: true
    Tpvsr_2.Methods.Stat.Referers.Get:
      type: object
      properties:
        hash:
          title: Хэш ссылки
          type: string
        referer_index:
          title: Индекс источника
          type: string
      required:
        - hash
        - referer_index
      title: Получение всех источников по индексу источника
    Tpvsr_2.Methods.Stat.Referers.Get.Exec:
      type: array
    Urls_2.Methods.Import.RecognizeLinkSitemapXml.Get:
      type: object
      properties:
        domain:
          title: Домен
          type: string
      required:
        - domain
      title: Получение URL к карте сайта по файлу robots.txt для указанного домена
    Urls_2.Methods.Import.RecognizeLinkSitemapXml.Get.Exec:
      title: URL к карте сайта
      type: string
    Users_2.Methods.Join.Email.Add:
      type: object
      properties:
        email:
          type: string
        pass:
          nullable: true
          type: string
      required:
        - email
      title: Привязка email к аккаунту
    Users_2.Methods.Join.Email.Add.Exec:
      title: '- 0: произошла ошибка, 1: email успешно привязан, 2: требуется ввести пароль, 3: отправлен запрос на подтверждение'
      type: integer
    Admin_2.Methods.Accounting.Group.Filter.Add:
      type: object
      properties:
        group_id:
          title: Id группы
          type: integer
        type:
          title: |-
            Тип

            - plus
            - minus
          type: string
        counteragent_name:
          title: Имя контрагента
          type: string
        counteragent_inn:
          title: ИНН контрагента
          type: string
        purpose:
          title: Назначение операции
          nullable: true
          type: string
      required:
        - group_id
        - type
        - counteragent_name
        - counteragent_inn
      title: Добавление фильтра группы
    Admin_2.Methods.Accounting.Group.Filter.Add.Exec:
      nullable: true
    Admin_2.Methods.Accounting.Group.Filter.Del:
      type: object
      properties:
        group_id:
          title: ID группы
          type: integer
        filter_id:
          title: ID фильтра
          type: integer
      required:
        - group_id
        - filter_id
      title: Удаление фильтра группы
    Admin_2.Methods.Accounting.Group.Filter.Del.Exec:
      nullable: true
    Admin_2.Methods.Accounting.Group.Filter.Edit:
      type: object
      properties:
        filter_id:
          title: ID фильтра
          type: integer
        type:
          title: |-
            Тип

            - plus
            - minus
          type: string
        counteragent_name:
          title: Имя контрагента
          type: string
        counteragent_inn:
          title: ИНН контрагента
          type: string
        purpose:
          title: Назначение операции
          nullable: true
          type: string
      required:
        - filter_id
        - type
        - counteragent_name
        - counteragent_inn
      title: Изменение фильтра группы
    Admin_2.Methods.Accounting.Group.Filter.Edit.Exec:
      nullable: true
    Admin_2.Methods.Accounting.Invoices.File.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Скачивание документа
    Admin_2.Methods.Accounting.Operations.Export.Get:
      type: object
      properties:
        month:
          title: Месяц
          type: string
      required:
        - month
      title: Скачивание реестра исходящих операций
      description: |-
        @POST string month - месяц в формате: YYYY-mm
        столбцы CSV: 'Дата акта', 'Номер акта', 'Контрагент', 'ИНН', 'Товар/услуга', 'Номенклатура', 'Кол-во', 'Цена', 'НДС', 'Сумма', 'Способ оплаты'
    Admin_2.Methods.Accounting.Operations.Export.Get.Exec:
      nullable: true
    Admin_2.Methods.Actions.Backup.Keywords.Edit:
      type: object
      properties:
        pass_admin_actions:
          type: string
        step:
          title: |-
            Этап:
            - 1: Загрузить и подготовить бекапы
            - 2: Выполнить восстановление
          type: integer
        server_name:
          title: Сервер, с которого делались бекапы
          type: string
        project_id:
          title: ID проекта
          type: integer
        type:
          title: |-
            Тип

            Может принимать одно из значений TYPES_SETTINGS_AVAILIBLE или TYPES_MOVE_AVAILIBLE
          type: string
        date:
          title: Дата бекапа
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - pass_admin_actions
        - step
        - server_name
        - project_id
        - type
        - date
        - test
      title: Востановление поисковых запросов из бэкапа
    Admin_2.Methods.Actions.Backup.Keywords.Edit.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Backup.Loader.Edit:
      type: object
      properties:
        pass_admin_actions:
          type: string
        server_name:
          title: Сервер, с которого делались бекапы
          type: string
        db_name:
          title: Имя БД
          type: string
        table_name:
          title: Имя таблицы
          type: string
        date:
          title: Дата бекапа чата для добавления
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        insert_filter_regexp:
          title: |-
            Регулярное выражение для импорта только нужных блоков INSERT

            Бекапы хрянятся в .sql файлах с INSERT командами, в одном INSERT может быть много строк
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.RegExp'
        task_key:
          title: |-
            Ключ задачи, участвует в генерации имени БД бекапа

            Может потребоваться в случае выполнения одновременных бекапов одной и тоже же таблицы за одну и ту же дату
          nullable: true
          type: string
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - pass_admin_actions
        - server_name
        - db_name
        - table_name
        - date
        - test
      title: Загрузить и разместить бекап в БД бекапов
    Admin_2.Methods.Actions.Backup.Loader.Edit.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Backup.Project.Edit:
      type: object
      properties:
        pass_admin_actions:
          type: string
        step:
          title: |-
            Этап:
            - 1: Загрузить и подготовить бекапы
            - 2: Выполнить восстановление
          type: integer
        server_name:
          title: Сервер, с которого делались бекапы
          type: string
        user_id:
          title: ID пользователя
          type: integer
        project_id:
          title: ID проекта
          type: integer
        date:
          title: Дата бекапа
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - pass_admin_actions
        - step
        - server_name
        - user_id
        - project_id
        - date
        - test
      title: Востановление удаленного проекта
    Admin_2.Methods.Actions.Backup.Project.Edit.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Bank.Referral.Edit:
      type: object
      properties:
        userId:
          title: ID пользователя
          type: integer
        entityId:
          title: |-
            ID акта

            Укажите `sum=`, если API не раблотает и данных акта нет
          nullable: true
          type: string
        date:
          title: Дата акта в формате d.m.Y
          type: string
        pass:
          title: Пароль в диадоке
          type: string
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - userId
        - date
        - pass
        - test
      title: Оплата реферального счета
    Admin_2.Methods.Actions.Bank.Referral.Edit.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Payments.Diadoc.Add:
      type: object
      properties:
        userId:
          title: ID пользователя
          type: integer
        paymentId:
          title: ID платежа
          nullable: true
          type: integer
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - userId
        - test
      title: Отправка акты в диадок
    Admin_2.Methods.Actions.Payments.Diadoc.Add.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Positions.History.Add:
      type: object
      properties:
        csv:
          title: |-
            Строка в формате csv

            Пример: ```
            Запрос;2024-01-01;2024-01-01
            Привет;5;5
            Как дела;3;1
            ```
          nullable: true
          type: string
        projectId:
          title: ID проекта
          nullable: true
          type: integer
        regionIndex:
          title: Индекс региона
          nullable: true
          type: integer
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - test
      title: Импортирование историй позиций из CSV
    Admin_2.Methods.Actions.Positions.History.Add.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Positions.Status.Edit:
      type: object
      properties:
        projectId:
          title: ID проекта
          type: integer
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - projectId
        - test
      title: Сброс статуса проверки позиций
    Admin_2.Methods.Actions.Positions.Status.Edit.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Projects.Domain.Edit:
      type: object
      properties:
        userId:
          title: ID пользователя
          type: integer
        projects:
          title: |-
            Список для замены

            Пример: ```
            example.com;example2.com
            example3.com;example4.com
            12345;example5.com
            ```
          type: string
        needRenameProject:
          title: Изменить ли имена проектов
          type: boolean
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - userId
        - projects
        - needRenameProject
        - test
      title: Изменение домена проекта
    Admin_2.Methods.Actions.Projects.Domain.Edit.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Regions.CommitGoogle.Edit:
      type: object
      properties:
        regions:
          title: |-
            Список регионов в формате:

            - Яндекс lr, укажите 0, если региона в Яндексе нет
            - Criteria ID: id региона в google
            - coords: координаты
            - name_ru: имя региона
            - areaName_ru: имя родительского региона, обычно это область
          description: '@type array<array{lr: int, criteriaId: int, coords: string, name_ru: string, areaName_ru: string}>'
          type: array
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - regions
        - test
      title: Добавить регионы Google в сервис
    Admin_2.Methods.Actions.Regions.CommitGoogle.Edit.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Regions.UpdateGoogle.Edit:
      type: object
      properties:
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - test
      title: Обновление регионов Google
      description: '@see https://developers.google.com/google-ads/api/data/geotargets'
    Admin_2.Methods.Actions.Regions.UpdateGoogle.Edit.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Robot.Checks.Edit:
      type: object
      properties:
        modEngine:
          title: Поисковик
          type: string
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - modEngine
        - test
      title: Перевод проверок позиций яндекс
    Admin_2.Methods.Actions.Robot.Checks.Edit.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Robot.Priority.Edit:
      type: object
      properties:
        siteOrProjectId:
          title: ID сайта или проекта
          nullable: true
          type: string
        userId:
          title: ID пользователя
          nullable: true
          type: integer
        priority:
          title: Приоритет
          type: integer
        for:
          title: Для чего изменяется приоритет
          default: positions
          type: string
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - priority
        - test
      title: Изменение приоритета задач
    Admin_2.Methods.Actions.Robot.Priority.Edit.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Robot.Task.Edit:
      type: object
      properties:
        projectId:
          title: ID проекта
          type: integer
        taskId:
          title: ID задачи
          nullable: true
          type: integer
        type:
          title: Откуда снять задачу
          type: string
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - projectId
        - type
        - test
      title: Снятие задачи с дэбага
    Admin_2.Methods.Actions.Robot.Task.Edit.Exec:
      nullable: true
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Slack.Files.Del:
      type: object
      properties:
        token:
          title: Токен
          type: string
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - token
        - test
      title: Удаление файлов
    Admin_2.Methods.Actions.Slack.Files.Del.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.Slack.Messages.Del:
      type: object
      properties:
        token:
          title: Токен
          type: string
        channel:
          title: Канал, в котором будут удалены сообщения
          type: string
        secunds:
          title: Количество секунд
          type: string
        onlyMy:
          default: 1
          type: integer
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - token
        - channel
        - secunds
        - test
      title: Удаление сообщений
    Admin_2.Methods.Actions.Slack.Messages.Del.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.User.Currency.Edit:
      type: object
      properties:
        userId:
          title: ID пользователя
          type: integer
        currency:
          title: Валюта
          type: string
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - userId
        - currency
        - test
      title: Изменение валюты пользователя
    Admin_2.Methods.Actions.User.Currency.Edit.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Actions.User.Email.Edit:
      type: object
      properties:
        user_id:
          title: ID пользователя
          type: integer
        email_old:
          title: Старый email
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Email'
        email_new:
          title: Новый email
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Email'
        pass_admin_actions:
          type: string
        is_verif:
          title: Владелец нового email подтвердил владение аккаунтом со старым email
          type: boolean
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - user_id
        - email_old
        - email_new
        - pass_admin_actions
        - is_verif
        - test
      title: Замена email пользователя
    Admin_2.Methods.Actions.User.Email.Edit.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Admin_2.Methods.Analytics.Accounting.SummaryForChart.Get:
      type: object
      properties:
        period:
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Analytics.Segment'
        currency:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Currency'
        date:
          title: Дата начала отсчета периода
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        operations_type:
          title: |-
            Тип операций (расход, приход, все операции)

            - profit: приход
            - charges: расход
          nullable: true
          type: string
        limit:
          title: Длина периода
          default: 12
          type: integer
        filters:
          title: Фильтр по объектам групп, см. Admin_2\Accounting\Group
          nullable: true
          type: array
      required:
        - period
        - currency
        - date
      title: Получение сводки по группам
    Admin_2.Methods.Analytics.Accounting.SummaryForChart.Get.Exec:
      type: array
    Admin_2.Methods.Analytics.Activity.ChartByPeriod.Get:
      type: object
      properties:
        currency:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Currency'
        limit:
          title: Валюта
          type: integer
        date:
          title: Дата
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
      required:
        - currency
        - limit
        - date
      title: Получение активности пользователей в формате для графика
    Admin_2.Methods.Analytics.Activity.ChartByPeriod.Get.Exec:
      nullable: true
      type: array
    Admin_2.Methods.Analytics.Competitors.SummaryForOrdersChart.Get:
      type: object
      properties:
        period:
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Analytics.Segment'
        limit:
          title: Длина периода
          type: integer
        currency:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Currency'
        order_by_type:
          title: Сортировать ли по типу
          nullable: true
          type: integer
        region_index:
          title: Инлекс региона
          nullable: true
          type: integer
      required:
        - period
        - limit
      title: Получение конкурентов для графика
    Admin_2.Methods.Analytics.Competitors.SummaryForOrdersChart.Get.Exec:
      nullable: true
      type: array
    Admin_2.Methods.Analytics.Payments.Systems.Get:
      type: object
      properties:
        period:
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Analytics.Segment'
        currency:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Currency'
        limit:
          title: Длина периода
          type: integer
      required:
        - period
        - currency
        - limit
      title: Получение суммы оплат по системам платежей за период
    Admin_2.Methods.Analytics.Payments.Systems.Get.Exec:
      nullable: true
      type: array
    Admin_2.Methods.Analytics.Payments.Tariff.Get:
      type: object
      properties:
        period:
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Analytics.Segment'
        currency:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Currency'
        limit:
          title: Длина периода
          type: integer
      required:
        - period
        - currency
        - limit
      title: Получение суммы оплат по тарифам за период
    Admin_2.Methods.Analytics.Payments.Tariff.Get.Exec:
      nullable: true
      type: array
    Admin_2.Methods.Analytics.Positions.ChartByDayByHourAuto.Get:
      type: object
      properties: {}
      required: []
      title: Получение числа автоматических проверока по дням по часам
    Admin_2.Methods.Analytics.Positions.ChartByDayByHourAuto.Get.Exec:
      allOf:
        - $ref: '#/components/schemas/stdClass'
    Admin_2.Methods.Analytics.Positions.ChartByHourAuto.Get:
      type: object
      properties: {}
      required: []
      title: Получение числа автоматических проверок по часам
    Admin_2.Methods.Analytics.Positions.ChartByHourAuto.Get.Exec:
      allOf:
        - $ref: '#/components/schemas/stdClass'
    Admin_2.Methods.Analytics.Positions.ChartByHour.Get:
      type: object
      properties: {}
      required: []
      title: Получение числа проверок за месяц по часам
    Admin_2.Methods.Analytics.Positions.ChartByHour.Get.Exec:
      allOf:
        - $ref: '#/components/schemas/stdClass'
    Admin_2.Methods.Analytics.Positions.ChartCountUsersByHour.Get:
      type: object
      properties: {}
      required: []
      title: Получение числа проверок по часам по пользователям
    Admin_2.Methods.Analytics.Positions.ChartCountUsersByHour.Get.Exec:
      allOf:
        - $ref: '#/components/schemas/stdClass'
    Admin_2.Methods.Analytics.Tickets.ChartByMigrations.Get:
      type: object
      properties:
        period:
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Analytics.Segment'
        limit:
          title: Длина периода
          type: integer
        date:
          title: Максимальная дата отчета
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
      required:
        - period
        - limit
      title: Получение статистики тикетов по миграциям
    Admin_2.Methods.Analytics.Tickets.ChartByMigrations.Get.Exec:
      type: array
    Admin_2.Methods.Analytics.Tickets.ChartByNew.Get:
      type: object
      properties:
        period:
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Analytics.Segment'
        limit:
          title: Длина периода
          type: integer
        date:
          title: Максимальная дата отчета
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
      required:
        - period
        - limit
      title: Получение статистики по кол-ву пользователей, открывших первый тикет
    Admin_2.Methods.Analytics.Tickets.ChartByNew.Get.Exec:
      type: array
    Admin_2.Methods.Analytics.Tickets.ChartByRates.Get:
      type: object
      properties:
        period:
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Analytics.Segment'
        limit:
          title: Длина периода
          type: integer
        date:
          title: Максимальная дата отчета
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
      required:
        - period
        - limit
      title: Получение статистики тикетов по оценкам
    Admin_2.Methods.Analytics.Tickets.ChartByRates.Get.Exec:
      type: array
    Admin_2.Methods.Analytics.Tickets.ChartByTags.Get:
      type: object
      properties:
        period:
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Analytics.Segment'
        limit:
          title: Длина периода
          type: integer
        date:
          title: Максимальная дата отчета
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
      required:
        - period
        - limit
      title: Получение статистику тикетов по тегам
    Admin_2.Methods.Analytics.Tickets.ChartByTags.Get.Exec:
      type: array
    Admin_2.Methods.Analytics.Tickets.ChartByWaitTime.Get:
      type: object
      properties:
        period:
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Analytics.Segment'
        limit:
          title: Длина периода
          type: integer
        date:
          title: Максимальная дата отчета
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
      required:
        - period
        - limit
      title: Получение статистики по среднему времени ожидания ответа на вопросы в тикетах
    Admin_2.Methods.Analytics.Tickets.ChartByWaitTime.Get.Exec:
      type: array
    Admin_2.Methods.Analytics.Tickets.Messages.Get:
      type: object
      properties:
        fields:
          title: |-
            Поля

            - date
            - count_messages
            - count_tickets
            - count_messages_user:%userId%
            - percent_messages_user:%userId%
            - vacations_by_user_id
          type: array
        period:
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Analytics.Segment'
        limit:
          title: Длина периода
          type: integer
        date:
          title: Максимальная дата отчета
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
      required:
        - fields
        - period
        - limit
      title: Получение статистики ответов на тикеты
    Admin_2.Methods.Analytics.Tickets.Messages.Get.Exec:
      nullable: true
      type: array
    Admin_2.Methods.Logs.System.Checked.Edit:
      type: object
      properties:
        id:
          title: ID лога
          type: integer
        checked:
          title: Проверен ли лог
          type: boolean
      required:
        - id
        - checked
      title: Помечание лога как обработанного
    Admin_2.Methods.Logs.System.Checked.Edit.Exec:
      nullable: true
      type: integer
    Admin_2.Methods.Users.Informer.Subscriptions.Get:
      type: object
      properties:
        tariff_id:
          nullable: true
          type: integer
      required: []
      title: |-
        Получение графика с количеством подписок на рубрики с сегментцией по способам рассылки

        График кешируется, первый запрос может выполняться дольше
    TV.Objects.Highcharts.Chart:
      type: object
      properties:
        categories:
          title: |-
            Категории

            Для обчных графиков это значения на оси X
          type: array
        series:
          title: |-
            Набор серий

            Серия - это объект, выводимый на графике, например линия.

            Серия обязательно должна иметь поле data, в котором перечисляются значения для категорий. Значения должны идти в таком же порядке, что и
            категории
          type: array
        additionalData:
          title: Дополнительгная информация
          type: array
      required:
        - categories
        - series
        - additionalData
      title: |-
        Сокращенный тип с данными для вывода hightcharts

        https://www.highcharts.com/
    Admin_2.Methods.Users.Informer.Subscriptions.Get.Exec:
      title: Данные для построения графика
      nullable: true
      allOf:
        - $ref: '#/components/schemas/TV.Objects.Highcharts.Chart'
    Audit_2.Methods.Audit.Checker.Go.Edit:
      type: object
      properties:
        debug:
          title: |-
            Запуск в режиме отладки

            Только для админов
          description: '@private'
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Запуск проверки аудита
    Audit_2.Methods.Audit.Checker.Go.Edit.Exec:
      title: Список id проектов, отрпавленных на проверку
      type: object
      properties:
        projectIds:
          type: array
          items:
            type: integer
      required:
        - projectIds
    Audit_2.Methods.Audit.Checker.Price.Get:
      type: object
      properties:
        debug:
          title: |-
            Запуск в режиме отладки

            Только для админов
          description: '@private'
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Информация о стоимости запуска аудита по проектам
    Audit_2.Methods.Audit.Checker.Price.Get.Exec:
      type: object
    Audit_2.Methods.Audit.Export.Links.Get:
      type: object
      properties:
        view_name:
          title: Название просмотра (используется на странице с просмотром проверки)
          type: string
        view_template:
          title: Шаблон просмотра (используется на странице с просмотром проверки)
          type: array
        log_http_codes_hundreds:
          title: Логи фильтра по категориям кодов (используется на странице с просмотром проверки)
          type: array
        view_signal_type:
          title: Тип сигнала просмотра (используется на странице с просмотром проверки)
          type: array
        links_external:
          title: Внешние ссылки (используется на странице с просмотром проверки)
          type: string
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - view_template
        - log_http_codes_hundreds
        - view_signal_type
        - project_id
        - check_id
      title: Получение гостевой ссылки на просмотр аудита позиций
    Audit_2.Methods.Audit.Export.Links.Get.Exec:
      title: Короткая гостевая ссылка на просмотр аудита позиций
      nullable: true
      type: string
    Audit_2.Methods.Audit.Export.Summary.Get:
      type: object
      properties:
        output:
          title: Формат экспортируемого файла
          type: string
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - output
        - project_id
        - check_id
      title: Экспорт отчета Анализа сайта
    Audit_2.Methods.Audit.Log.ActualError.Get:
      type: object
      properties:
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - project_id
        - check_id
      title: Получение информации о текущей ошибке на роботе
    Audit_2.Methods.Audit.Log.ActualError.Get.Exec:
      title: |-
        Информацией о текущей ошибке на роботе

        Вернет null, если ошибки на роботе нет
      nullable: true
      allOf:
        - $ref: '#/components/schemas/stdClass'
    Audit_2.Methods.Audit.Log.Chart.Get:
      type: object
      properties:
        time1:
          title: Фильтр по периоду
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Datetime'
        time2:
          title: Фильтр по периоду
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Datetime'
        page:
          title: Номер страницы (для использования в SQL)
          default: 1
          type: integer
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - project_id
        - check_id
      title: Получение данных для графика
      description: '@deprecated'
      deprecated: true
    Audit_2.Methods.Audit.Log.Chart.Get.Exec:
      title: Данные для графика
      nullable: true
      type: array
    Audit_2.Types.Audit.Results.Export.TypeReport:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
      title: Тип отчета аудита для экспорта
    Audit_2.Methods.Audit.Results.Export.Get:
      type: object
      properties:
        type_report:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Audit.Results.Export.TypeReport'
        format:
          title: Формат экспорта
          nullable: true
          default: pdf
          type: string
        search:
          title: Данные поиска во всех табличных разделах (только для PDF)
          nullable: true
          type: string
        filter:
          title: Данные фильтрации во всех табличных разделах (только для PDF)
          nullable: true
          type: string
        external:
          title: Вид ссылок (только для PDF)
          nullable: true
          type: string
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - type_report
        - project_id
        - check_id
      title: Экспорт результатов аудита
      description: '@deprecated'
      deprecated: true
    Audit_2.Methods.Audit.Results.Export.Get.Exec:
      title: Ответ об успешнности экспорта результатов аудита
      nullable: true
      type: boolean
    Audit_2.Methods.Audit.Results.Page.Get:
      type: object
      properties:
        url:
          title: Ссылка на анализируемую страницу
          type: string
        search:
          title: Поиск
          nullable: true
          type: string
        orders:
          $ref: '#/components/schemas/orders'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - url
        - project_id
        - check_id
      title: Получение результатов анализа страницы
      description: '@deprecated'
      deprecated: true
    Audit_2.Methods.Audit.Results.Page.Get.Exec:
      title: Результаты анализа страницы
      type: object
      properties:
        result:
          type: object
          properties:
            page_in_filter:
              type: boolean
            index:
              type: integer
            snippet:
              type: string
            content:
              type: string
          required:
            - page_in_filter
            - index
            - snippet
            - content
      required:
        - result
    Audit_2.Methods.Indexing.Checker.Go.Edit:
      type: object
      properties:
        debug:
          title: |-
            Запуск в режиме отладки

             Только для админов
          description: '@private'
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Отправка проектов на проверку индексации
    Audit_2.Methods.Indexing.Checker.Go.Edit.Exec:
      title: Список id проектов, отрпавленных на проверку
      type: object
      properties:
        projectIds:
          type: array
          items:
            type: integer
      required:
        - projectIds
    Audit_2.Methods.Indexing.Checker.Price.Get:
      type: object
      properties:
        debug:
          title: |-
            Запуск в режиме отладки

             Только для админов
          description: '@private'
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Информация о стоимости запуска индексации по проектам
    Audit_2.Methods.Indexing.Checker.Price.Get.Exec:
      type: object
    Audit_2.Methods.Indexing.Export.Links.Get:
      type: object
      properties:
        searchers_keys:
          title: Поисковые ключи
          nullable: true
          type: array
        template_date_range:
          title: Диапозон значений шаблона
          nullable: true
          type: string
        dates:
          title: Произвольные даты без использования диапазона
          nullable: true
          type: array
        date1:
          title: Дата начала диапазона
          nullable: true
          type: string
        date2:
          title: Дата окончания диапазона
          nullable: true
          type: string
        type_range:
          title: Тип диапазона дат
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.TypeRange'
        type_range_compare:
          title: Тип диапазона дат (при сравнении)
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.TypeRange'
        count_dates:
          title: Количество дней в диапазоне
          type: integer
        tags_ids:
          title: ID тегов
          nullable: true
          type: array
        data_sort:
          title: Сортировка данных
          nullable: true
          type: array
        only_changed_for:
          title: Применение изменений только для
          nullable: true
          type: string
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - type_range
        - type_range_compare
        - project_id
      title: |-
        Получение гостевой ссылки на просмотр индексации

        Необходимо указать либо date1 и date2, либо dates (вместе указывать нельзя)
    Audit_2.Methods.Indexing.Export.Links.Get.Exec:
      title: Короткая гостевая ссылка на просмотр индексации
      nullable: true
      type: string
    Export_2.Types.Repository.Name:
      type: string
      enum:
        - gdrive
      title: Хранилище для экспорта
    Audit_2.Methods.Indexing.Export.ToRepository.Get:
      type: object
      properties:
        repository:
          allOf:
            - $ref: '#/components/schemas/Export_2.Types.Repository.Name'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - repository
        - project_id
      title: Экспорт файла в хранилище
    Audit_2.Methods.Indexing.Summary.Chart.Get:
      type: object
      properties:
        dates:
          title: Произвольные даты без диапазона
          type: array
        searcher_key:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.SearcherKey'
        show_counts_changes:
          title: Отобразить количество изменений
          type: boolean
        show_counts_in_index:
          title: Отобразить количество страниц в индексе
          type: boolean
        show_counts_all:
          title: Отобразить количество проверенных страниц
          type: boolean
        forChart:
          title: |-
            Вернуть данные в формате для графика

            Недокументируемый параметр
          description: '@private'
          type: boolean
        project_id:
          $ref: '#/components/schemas/project_id'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - dates
        - project_id
      title: Получение сводок индексации для графика
    Audit_2.Methods.Indexing.Summary.Chart.Get.Exec:
      title: Сводки индексации
      nullable: true
      type: array
    Audit_2.Types.Sitemap.MaxPages:
      type: integer
      enum:
        - 100
        - 1000
        - 10000
        - 100000
        - 150000
        - 300000
      title: |-
        Предполагаемое число страниц на вашем сайте

        Выбираейте приблизительное занчение, например 100, 1000 или 10000 в зависимсоти от размеров вашего сйта

        Это значение влияет на стоимость генерации карты сайта
    Audit_2.Methods.Sitemap.Checker.Go.Edit:
      type: object
      properties:
        debug:
          title: |-
            Запуск в режиме отладки

             Только для админов
          description: '@private'
          type: boolean
        max_pages:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Sitemap.MaxPages'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - max_pages
        - filters
      title: Отправка проектов на проверку карты сайта
    Audit_2.Methods.Sitemap.Checker.Go.Edit.Exec:
      title: Список id проектов, отрпавленных на проверку
      type: object
      properties:
        projectIds:
          type: array
          items:
            type: integer
      required:
        - projectIds
    Audit_2.Methods.Sitemap.Checker.Price.Get:
      type: object
      properties:
        debug:
          title: |-
            Запуск в режиме отладки

             Только для админов
          description: '@private'
          type: boolean
        max_pages:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Sitemap.MaxPages'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - max_pages
        - filters
      title: Информация о стоимости запуска индексации по проектам
    Audit_2.Methods.Sitemap.Checker.Price.Get.Exec:
      type: object
    Audit_2.Methods.Watcher.Checker.Go.Edit:
      type: object
      properties:
        debug:
          title: |-
            Запуск в режиме отладки

             Только для админов
          description: '@private'
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Отправка проектов на проверку радара
    Audit_2.Methods.Watcher.Checker.Go.Edit.Exec:
      title: Список id проектов, отрпавленных на проверку
      type: object
      properties:
        projectIds:
          type: array
          items:
            type: integer
      required:
        - projectIds
    Audit_2.Methods.Watcher.Checker.Price.Get:
      type: object
      properties:
        debug:
          title: |-
            Запуск в режиме отладки

             Только для админов
          description: '@private'
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Информация о стоимости запуска индексации по проектам
    Audit_2.Methods.Watcher.Checker.Price.Get.Exec:
      type: object
    properties-check_id:
      title: ID проверки радара
      type: integer
    Audit_2.Methods.Watcher.Export.Links.Get:
      type: object
      properties:
        view_name:
          title: Выбранный элемент в меню
          type: string
        fulltext:
          title: Выводить полные тексты (для вкладки контент)
          type: boolean
        changed:
          default: all
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Audit.Summary.FilterCheckState'
        tags_ids:
          title: Фильтр по тегам
          nullable: true
          type: array
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/properties-check_id'
      required:
        - fulltext
        - project_id
        - check_id
      title: Создание гостевой ссылки на просмотр радара
    Audit_2.Methods.Watcher.Export.Links.Get.Exec:
      title: Короткая ссылка гостевого доступа для просмотра радара
      nullable: true
      type: string
    Audit_2.Methods.Watcher.Summary.Chart.Get:
      type: object
      properties:
        watcher_types:
          title: Тип проверки
          nullable: true
          type: array
        checks_ids:
          title: ID проверок
          type: array
        show_counts_changes:
          title: Отобразить количество изменений по типам
          type: boolean
        forChart:
          title: Недокументируемый параметр, данные для графика
          type: boolean
        project_id:
          $ref: '#/components/schemas/project_id'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - checks_ids
        - project_id
      title: Получение сводок радара для графика
    Audit_2.Methods.Watcher.Summary.Chart.Get.Exec:
      title: Сводки с количеством изменений по каждому типу проверки
      nullable: true
      type: array
    Content_2.Methods.Apometr.Snapshots.Top.Get:
      type: object
      properties:
        datetime:
          title: Дата и время проверки
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Datetime'
        region_index:
          title: Индекс региона
          type: integer
        action:
          allOf:
            - $ref: '#/components/schemas/Content_2.Types.Apometr.Action'
      required:
        - datetime
        - region_index
        - action
      title: Получение топа выдачи сайтов за определенную проверку
    Content_2.Methods.Apometr.Snapshots.Top.Get.Exec:
      title: |-
        Статистика домена по каждой категории

        Позиция 0 - значит, домен вышел из топа
      nullable: true
      type: array
      items:
        type: array
        items:
          type: object
          properties:
            domain:
              type: string
            pos:
              type: string
            prev:
              type: integer
            delta:
              type: integer
          required:
            - domain
            - pos
            - prev
            - delta
    Content_2.Methods.Apometr.Text.Calendar.Get:
      type: object
      properties:
        date:
          title: Дата календаря
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
      required: []
      title: Получение календаря текстовых апдейтов
    Content_2.Methods.Apometr.Text.Calendar.Get.Exec:
      title: 'Матрица: массив с индексами времени с массивом с индексами дат со значением количества страниц в индексе (в UNIXTIME)'
      type: object
      additionalProperties:
        type: object
        additionalProperties:
          type: integer
    Content_2.Methods.Apometr.Text.Updates.Get:
      type: object
      properties:
        limit:
          default: 100
          type: integer
        searcher_key:
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.SearcherKey'
        date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
      required:
        - searcher_key
      title: Получение текстовых апдейтов
    Content_2.Methods.Apometr.Text.Updates.Get.Exec:
      type: array
    Content_2.Methods.Apometr.Updates.Dates.Get:
      type: object
      properties:
        limit:
          nullable: true
          type: integer
      required: []
      title: Получение дат апдейтов
    Content_2.Methods.Apometr.Updates.Dates.Get.Exec:
      type: array
    Content_2.Methods.Journal.Course.Certificates.Add:
      type: object
      properties:
        course_url:
          title: Url курса относительно домена
          type: string
        user_name:
          title: Имя на кого выписывается сертификат
          type: string
      required:
        - course_url
        - user_name
      title: |-
        Создание сертификата

        Можно создавать только для пройденных курсов
    Content_2.Methods.Journal.Course.Certificates.Add.Exec:
      nullable: true
      type: integer
    Content_2.Methods.Journal.Course.Certificates.Edit:
      type: object
      properties:
        course_url:
          title: Url курса относительно домена
          type: string
        user_name:
          title: Имя на кого выписывается сертификат
          type: string
      required:
        - course_url
        - user_name
      title: |-
        Изменение сертификата

        Можно менять только имя, если оно не указано
    Content_2.Methods.Journal.Course.Certificates.Edit.Exec:
      nullable: true
      type: integer
    Content_2.Methods.Journal.Course.Certificates.Get:
      type: object
      properties:
        course_url:
          title: Url курса относительно домена
          type: string
      required:
        - course_url
      title: Получение своего сертификата
    Content_2.Methods.Journal.Course.Certificates.Get.Exec:
      nullable: true
    Content_2.Methods.Journal.Course.Chapters.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: |-
        Получение модулей курса

        Дополнительные поля:
         - lessons - см. includeLessons()
    Content_2.Methods.Journal.Course.Chapters.Get.Exec:
      type: array
    Content_2.Methods.Journal.Dictionary.ArticlesByLetter.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: |-
        Получение списка страниц по буквам для модуля SEO словарь
        Результат функции кешируется
    Content_2.Methods.Journal.Dictionary.ArticlesByLetter.Get.Exec:
      title: '- массив с ключом "Буква" и значением массив страниц Pages'
      nullable: true
      type: object
      additionalProperties:
        type: object
        properties:
          url:
            type: string
          h1:
            type: string
        required:
          - url
          - h1
    Content_2.Methods.Journal.Dictionary.WordOfday.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение стаьи для "Слово дня" в модуле SEO словарь
    Content_2.Methods.Journal.Dictionary.WordOfday.Get.Exec:
      nullable: true
      type: array
    Keywords_2.Types.Collect.Ext.Type:
      type: string
      enum:
        - groupName
        - groupNameWithKeywords
        - keywords
      title: По каким параметрам расширять группу
    Keywords_2.Methods.Collect.Ext.Go.Edit:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        keywords_minus:
          title: Минус фразы
          nullable: true
          type: array
        type:
          title: Каким типом расширять группу
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Collect.Ext.Type'
        qualifiers:
          title: Объекты определителей настроек ПС и регионов
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Collect.Qualifiers'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - type
        - qualifiers
      title: Постановка задачи на расширение группы
    Keywords_2.Methods.Collect.Ext.Go.Edit.Exec:
      nullable: true
    Keywords_2.Methods.Collect.Ext.Price.Get:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        keywords_minus:
          title: Минус фразы
          nullable: true
          type: array
        apply_discount:
          title: 'Отображать сумму с учетом скидки (по умолчанию: 1)'
          default: true
          type: boolean
        type:
          title: Каким типом расширять группу
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Collect.Ext.Type'
        qualifiers:
          title: Объекты определителей настроек ПС и регионов
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Collect.Qualifiers'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - type
        - qualifiers
      title: Получение цены на расширение группы
    Keywords_2.Methods.Collect.Ext.Price.Get.Exec:
      title: Информация о стоимости запуска подбора запросов
      nullable: true
      type: object
      properties:
        pricesByUsers:
          type: object
          additionalProperties:
            type: object
            properties:
              price:
                type: number
              priceOriginal:
                type: number
              qualifiers:
                type: object
                properties:
                  region_key:
                    type: integer
                  searcher_key:
                    anyOf:
                      - type: integer
                        enum:
                          - '0'
                      - type: integer
                        enum:
                          - '1'
                      - type: integer
                        enum:
                          - '5'
                      - type: integer
                        enum:
                          - '100'
                      - type: integer
                        enum:
                          - '101'
                      - type: integer
                        enum:
                          - '102'
                      - type: integer
                        enum:
                          - '104'
                      - type: integer
                        enum:
                          - '105'
                      - type: integer
                        enum:
                          - '106'
                  region_lang:
                    anyOf:
                      - type: string
                      - type: 'null'
                  also_searched:
                    anyOf:
                      - type: integer
                      - type: 'null'
                  depth:
                    anyOf:
                      - type: integer
                      - type: 'null'
                  hint_depth:
                    anyOf:
                      - type: integer
                        enum:
                          - '1'
                      - type: integer
                        enum:
                          - '2'
                      - type: integer
                        enum:
                          - '3'
                  hint_generators:
                    type: array
                    items:
                      anyOf:
                        - type: string
                          enum:
                            - letter
                        - type: string
                          enum:
                            - letter_ru
                        - type: string
                          enum:
                            - number
                        - type: string
                          enum:
                            - space
                required:
                  - region_key
                  - searcher_key
                  - hint_depth
                  - hint_generators
              comment:
                type: string
            required:
              - price
              - priceOriginal
              - qualifiers
              - comment
      required:
        - pricesByUsers
    Positions_2.Methods.Searchers.Regions.Export.Get:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - project_id
        - fields
        - orders
        - filters
        - offset
      title: |-
        Экспорт регионов (CSV)

        - searcher_key, name_or_key (название или код)[, country_code (2 буквенный код страны), lang, device, depth]
    Positions_2.Methods.Searchers.Regions.Import.Add:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        regions:
          title: |-
            Массив регионов в формате CSV

            array regions - массив регионов в формате CSV
            file(csv) regions - файл с содержимым для импорта в формат CSV
            - нельзя передавать regions одновременно в виде массива и в виде файла

            формат csv (от 2 до 6 столбцов):
            - searcher_key, name_or_key (название или код)[, country_code (2 буквенный код страны), lang, device, depth]
          nullable: true
      required:
        - project_id
      title: Импорт регионов (CSV)
    Positions_2.Methods.Searchers.Regions.Import.Add.Exec:
      nullable: true
      type: integer
    Positions_2.Methods.Searchers.Regions.Sort.Edit:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        searcher_key:
          title: Ключ ПС
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.SearcherKey'
        regions_indexes:
          title: Ключи регионов
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - project_id
        - searcher_key
        - regions_indexes
        - filters
      title: Настройка сортировки регионов
    Positions_2.Methods.Searchers.Regions.Sort.Edit.Exec:
      nullable: true
    Projects_2.Methods.Tasks.Volumes.Price.Get:
      type: object
      properties:
        keywords:
          title: Ключевые фразы
          type: array
        no_recheck:
          title: |-
            Проверять ли запросы

            - 0: проверять
            - 1: не проверять запросы с актуальной частотой
            - 2: не проверять запросы с частотой
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Volumes.NoRecheck'
        qualifiers:
          title: Объекты определителей частоты
          allOf:
            - $ref: '#/components/schemas/Keywords_2.Types.Volumes.Qualifiers'
      required:
        - keywords
        - qualifiers
      title: Получение проверки частоты задачи без проекта
    Projects_2.Methods.Tasks.Volumes.Price.Get.Exec:
      type: number
    Projects_2.Methods.Tasks.Volumes.Status.Get:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - project_id
        - fields
        - orders
        - filters
        - offset
      title: Получение статуса проверки частоты задачи
    Projects_2.Methods.Tasks.Volumes.Status.Get.Exec:
      nullable: true
    Tickets_2.Methods.Admin.Templates.Sort.Edit:
      type: object
      properties:
        ids:
          title: ID шаблонов
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
      required:
        - ids
      title: Изменение сортировки шаблонов
    Tickets_2.Methods.Admin.Templates.Sort.Edit.Exec:
      nullable: true
      type: integer
    Tickets_2.Methods.Admin.Ticket.ResourceAdmin.Edit:
      type: object
      properties:
        resource_admin:
          title: Ссылка
          type: string
        ticket_id:
          title: ID тикета
          type: integer
      required:
        - resource_admin
        - ticket_id
      title: Изменение админской ссылки к тикетам. Только для админов
    Tickets_2.Methods.Admin.Ticket.ResourceAdmin.Edit.Exec:
      nullable: true
      type: integer
    Tpvsr_2.Methods.Stat.Export.GuestLinks.Get:
      type: object
      properties:
        hash:
          title: Хэш ссылки
          type: string
      required:
        - hash
      title: Поучение гостевой ссылки
    Tpvsr_2.Methods.Stat.Export.GuestLinks.Get.Exec:
      type: string
    Tpvsr_2.Types.Stat.Export.Referrers.Output:
      type: string
      enum:
        - csv
      title: Формат экспорта
    Tpvsr_2.Methods.Stat.Export.Referrers.Get:
      type: object
      properties:
        hash:
          title: Хэш ссылки
          type: string
        output:
          allOf:
            - $ref: '#/components/schemas/Tpvsr_2.Types.Stat.Export.Referrers.Output'
      required:
        - hash
        - output
      title: Получение списка источников
    Tpvsr_2.Methods.Stat.Export.Referrers.Get.Exec:
      type: string
    Admin_2.Methods.Actions.Positions.History.Copy.Add:
      type: object
      properties:
        projectId:
          title: Откуда скопировать
          type: integer
        projectId2:
          title: Куда скопировать
          type: integer
        skipEmpty:
          title: Пропустить пустые истории
          type: integer
        test:
          title: Являеется ли запуск - тестом
          type: boolean
      required:
        - projectId
        - projectId2
        - skipEmpty
        - test
      title: Копирование истории позиций
    Admin_2.Methods.Actions.Positions.History.Copy.Add.Exec:
      allOf:
        - $ref: '#/components/schemas/Admin_2.Objects.Actions.Result'
    Content_2.Methods.Journal.Course.Certificates.ByID.Get:
      type: object
      properties:
        id:
          title: Id сертификата
          type: integer
      required:
        - id
      title: Получение сертификата по id
    Content_2.Methods.Journal.Course.Certificates.ByID.Get.Exec:
      nullable: true
    Content_2.Methods.Journal.Course.Certificates.Image.Get:
      type: object
      properties:
        format:
          title: |-
            Формат файла

            * pdf
            * png
          type: string
        output:
          title: |-
            Возвращаемый формат

            * dataURL: вернуть в ответе как Data URL
            * inline вывести файл как есть
          nullable: true
          type: string
        dpr:
          title: devicePixelRatio, см. в js window.devicePixelRatio, имеет смысл для format = png
          nullable: true
          type: number
        id:
          title: Id сертификата
          type: integer
      required:
        - format
        - id
      title: Получение сертификата в виде изображения
    Content_2.Methods.Journal.Course.Certificates.Image.Get.Exec:
      nullable: true
    Informer_2.Methods.Push.Safari.WebService.AuthToken.Get:
      type: object
      properties: {}
      required: []
      title: |-
        Получение токена авторизации для работы с safari web push

        Создаст токен, если его не существует
    Informer_2.Methods.Push.Safari.WebService.AuthToken.Get.Exec:
      type: string
    Snapshots_2.Methods.HiddenDomains.Edit:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        domains:
          title: Список доменов
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.StringArray'
      required:
        - project_id
      title: Выделение сайтов (доменов) как неважные
    Snapshots_2.Methods.HiddenDomains.Edit.Exec:
      nullable: true
      anyOf:
        - type: boolean
        - type: integer
        - type: 'null'
    Snapshots_2.Methods.HiddenDomains.Get:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
      required:
        - project_id
      title: Получение списка сайтов (доменов), которые выделены как неважные
    Snapshots_2.Methods.HiddenDomains.Get.Exec:
      type: array
    Users_2.Methods.Get:
      type: object
      properties: {}
      required: []
      title: Получение данных пользователя
    Users_2.Methods.Get.Exec:
      allOf:
        - $ref: '#/components/schemas/stdClass'
    Users_2.Methods.Auth.Get:
      type: object
      properties:
        authorisation_login:
          title: |-
            Логин авторизации

            Может принимать Email|null|emptyString
          nullable: true
          type: string
        authorisation_pass:
          title: Пароль авторизации
          nullable: true
          type: string
      required: []
      title: Проверка на авторизацию пользователя
    Users_2.Methods.Auth.Get.Exec:
      nullable: true
      type: array
    Snapshots_2.Types.Competitors.OutputFormat:
      type: string
      enum:
        - domain
        - url
      title: Формат вывода конкурентов
    TV.API.Types.DateArray:
      type: array
      items:
        $ref: '#/components/schemas/TV.API.Types.Date'
      title: 'Тип массива: Date[]'
      description: |-
        @extends AbstractStringArray<Date>
        @method Date[] getValues()
        @method Date current()
        @see \TV\API\Types\Date
    page:
      title: |-
        Порядковый номер деления массива объектов с помощью limit, который используется для определения количество пропускамых объектов (offset)

        Используется в паре с limit и offset
      default: 1
      type: integer
    Snapshots_2.Methods.Competitors.Get:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        region_index:
          title: |-
            Индекс региона

            Если не задан нужно задать параметры searcher_key, region_key, region_lang, region_device
          nullable: true
          type: integer
        searcher_key:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.SearcherKey'
        region_key:
          title: Ключ региона
          nullable: true
          type: integer
        region_lang:
          title: Язык региона
          nullable: true
          type: string
        region_device:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.RegionDevice'
        show_tops:
          title: Добавить в результат данные по топам
          type: boolean
        show_avg:
          title: Добавить в результат среднюю позицию
          type: boolean
        show_median:
          title: Добавить в результат медианную позицию
          type: boolean
        show_visibility:
          title: Добавить в результат
          type: boolean
        show_urls:
          title: Добавить в результат
          type: boolean
        competitor_by:
          title: '@deprecated Используется в старой версии дизайна'
          deprecated: true
          default: domain
          allOf:
            - $ref: '#/components/schemas/Snapshots_2.Types.Competitors.OutputFormat'
        domains:
          title: Фильтр по доменам
          nullable: true
          type: array
        show_exists_dates:
          title: Добавить в результат даты, в которых были проверки (existsDates)
          type: boolean
        dates:
          title: |-
            Произвольные даты без использования диапазона

            Если не задан нужно задать параметры date1, date2, type_range, count_dates
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.DateArray'
        date1:
          title: Дата начала диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        date2:
          title: Дата окончания диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        type_range:
          title: Тип диапазона дат
          default: 2
          type: integer
        count_dates:
          title: Количество дней в диапазоне
          default: 31
          type: integer
        only_exists_first_date:
          title: |-
            Только запросы, присутствующие в первой проверке указанного периода

            - 2 - только добавленные запросы за период, работает не корректно из-за ограничения JOIN CH
          nullable: true
          type: integer
        group_folder_id_depth:
          title: При фильтрации по ID папок также искать в подпапках
          type: boolean
        show_trash:
          title: Искать в корзине
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        page:
          $ref: '#/components/schemas/page'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - project_id
      title: |-
        Получение списка конкурентов

        Метод базируется на объекте keywords (доступны только фильтры)
    Snapshots_2.Methods.Competitors.Get.Exec:
      type: array
    System_2.Types.Tpl.Lang:
      type: string
      enum:
        - ru
        - en
        - ''
      title: Язык шаблона
    System_2.Types.Tpl.Currency:
      type: string
      enum:
        - RUB
        - USD
        - ''
      title: Валюта шаблонов
    System_2.Methods.Tpl.Get:
      type: object
      properties:
        tpl:
          title: Путь к шаблону
          type: string
        tpl_data:
          title: Данные для шаблона (кеш будет отключен)
          nullable: true
          type: array
        wait_change_etag:
          title: Ожидать изменение шаблона (кеш будет отключен)
          nullable: true
          type: string
        lang:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/System_2.Types.Tpl.Lang'
        currency:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/System_2.Types.Tpl.Currency'
        v:
          title: Версия кэша
          nullable: true
          type: integer
      required:
        - tpl
      title: Получение кешируемого HTML-шаблона
    System_2.Methods.Tpl.Get.Exec:
      type: string
    Snapshots_2.Methods.Competitors.Chart.Get:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        region_index:
          title: |-
            Индекс региона

            Если не задан нужно задать параметры searcher_key, region_key, region_lang, region_device
          nullable: true
          type: integer
        searcher_key:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.SearcherKey'
        region_key:
          title: Ключ региона
          nullable: true
          type: integer
        region_lang:
          title: Язык региона
          nullable: true
          type: string
        region_device:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.RegionDevice'
        show_tops:
          title: Добавить в результат данные по топам
          type: boolean
        show_avg:
          title: Добавить в результат среднюю позицию
          type: boolean
        show_median:
          title: Добавить в результат медианную позицию
          type: boolean
        show_visibility:
          title: Добавить в результат
          type: boolean
        show_urls:
          title: Добавить в результат
          type: boolean
        competitor_by:
          title: '@deprecated Используется в старой версии дизайна'
          deprecated: true
          default: domain
          allOf:
            - $ref: '#/components/schemas/Snapshots_2.Types.Competitors.OutputFormat'
        domains:
          title: Фильтр по доменам
          nullable: true
          type: array
        show_exists_dates:
          title: Добавить в результат даты, в которых были проверки (existsDates)
          type: boolean
        dates:
          title: |-
            Произвольные даты без использования диапазона

            Если не задан нужно задать параметры date1, date2, type_range, count_dates
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.DateArray'
        date1:
          title: Дата начала диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        date2:
          title: Дата окончания диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        type_range:
          title: Тип диапазона дат
          default: 2
          type: integer
        count_dates:
          title: Количество дней в диапазоне
          default: 31
          type: integer
        only_exists_first_date:
          title: |-
            Только запросы, присутствующие в первой проверке указанного периода

            - 2 - только добавленные запросы за период, работает не корректно из-за ограничения JOIN CH
          nullable: true
          type: integer
        group_folder_id_depth:
          title: При фильтрации по ID папок также искать в подпапках
          type: boolean
        show_trash:
          title: Искать в корзине
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        page:
          $ref: '#/components/schemas/page'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - project_id
      title: Получение данных сводки конкурентов для графика
    Snapshots_2.Methods.Competitors.Chart.Get.Exec:
      type: object
      properties:
        dates:
          type: array
          items:
            type: string
        seriesByDomain:
          type: object
          additionalProperties:
            type: object
            properties:
              tops:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: integer
              traffic:
                type: array
                items:
                  type: integer
              keywords:
                type: array
                items:
                  type: integer
              visibility:
                type: array
                items:
                  type: integer
            required:
              - tops
      required:
        - dates
        - seriesByDomain
    System_2.Methods.Api.GenKey.Edit:
      type: object
      properties: {}
      required: []
      title: Генерация нового API ключа
    System_2.Methods.Api.GenKey.Edit.Exec:
      type: string
    Snapshots_2.Methods.Competitors.AbstractRegular:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        region_index:
          title: |-
            Индекс региона

            Если не задан нужно задать параметры searcher_key, region_key, region_lang, region_device
          nullable: true
          type: integer
        searcher_key:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.SearcherKey'
        region_key:
          title: Ключ региона
          nullable: true
          type: integer
        region_lang:
          title: Язык региона
          nullable: true
          type: string
        region_device:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.RegionDevice'
        show_tops:
          title: Добавить в результат данные по топам
          type: boolean
        show_avg:
          title: Добавить в результат среднюю позицию
          type: boolean
        show_median:
          title: Добавить в результат медианную позицию
          type: boolean
        show_visibility:
          title: Добавить в результат
          type: boolean
        show_urls:
          title: Добавить в результат
          type: boolean
        competitor_by:
          title: '@deprecated Используется в старой версии дизайна'
          deprecated: true
          default: domain
          allOf:
            - $ref: '#/components/schemas/Snapshots_2.Types.Competitors.OutputFormat'
        domains:
          title: Фильтр по доменам
          nullable: true
          type: array
        show_exists_dates:
          title: Добавить в результат даты, в которых были проверки (existsDates)
          type: boolean
        dates:
          title: |-
            Произвольные даты без использования диапазона

            Если не задан нужно задать параметры date1, date2, type_range, count_dates
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.DateArray'
        date1:
          title: Дата начала диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        date2:
          title: Дата окончания диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        type_range:
          title: Тип диапазона дат
          default: 2
          type: integer
        count_dates:
          title: Количество дней в диапазоне
          default: 31
          type: integer
        only_exists_first_date:
          title: |-
            Только запросы, присутствующие в первой проверке указанного периода

            - 2 - только добавленные запросы за период, работает не корректно из-за ограничения JOIN CH
          nullable: true
          type: integer
        group_folder_id_depth:
          title: При фильтрации по ID папок также искать в подпапках
          type: boolean
        show_trash:
          title: Искать в корзине
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        page:
          $ref: '#/components/schemas/page'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - project_id
    Snapshots_2.Methods.Competitors.AbstractRegular.Exec:
      title: |-
        Непосредственный вызов API функции

        Запрещено делать публичной, это приведет к поломке preCall()

        В описании к функции отвечать на вопрос: `Что является результатом запроса?` Например: `Список пользователей`

        Не менять `protected`, проверка проводится при генерации схем в `TV\API\Objects\ClassAPIMethodInfo`
      nullable: true
    Snapshots_2.Types.Competitors.Export.Output:
      type: string
      enum:
        - csv
      title: Тип экспортируемого файла
    Snapshots_2.Methods.Competitors.Export.Get:
      type: object
      properties:
        output:
          allOf:
            - $ref: '#/components/schemas/Snapshots_2.Types.Competitors.Export.Output'
        returnFilenameFromFolder:
          title: Вернуть ли URI-идентификатор или имя файла, из директории.
          description: '@internal'
          nullable: true
          type: string
        properties:
          title: |-
            Параметры экспорта, возможные поля:
            - showSummary
          type: array
        project_id:
          title: Id проекта
          type: integer
        region_index:
          title: |-
            Индекс региона

            Если не задан нужно задать параметры searcher_key, region_key, region_lang, region_device
          nullable: true
          type: integer
        searcher_key:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.SearcherKey'
        region_key:
          title: Ключ региона
          nullable: true
          type: integer
        region_lang:
          title: Язык региона
          nullable: true
          type: string
        region_device:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.RegionDevice'
        show_tops:
          title: Добавить в результат данные по топам
          type: boolean
        show_avg:
          title: Добавить в результат среднюю позицию
          type: boolean
        show_median:
          title: Добавить в результат медианную позицию
          type: boolean
        show_visibility:
          title: Добавить в результат
          type: boolean
        show_urls:
          title: Добавить в результат
          type: boolean
        competitor_by:
          title: '@deprecated Используется в старой версии дизайна'
          deprecated: true
          default: domain
          allOf:
            - $ref: '#/components/schemas/Snapshots_2.Types.Competitors.OutputFormat'
        domains:
          title: Фильтр по доменам
          nullable: true
          type: array
        show_exists_dates:
          title: Добавить в результат даты, в которых были проверки (existsDates)
          type: boolean
        dates:
          title: |-
            Произвольные даты без использования диапазона

            Если не задан нужно задать параметры date1, date2, type_range, count_dates
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.DateArray'
        date1:
          title: Дата начала диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        date2:
          title: Дата окончания диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        type_range:
          title: Тип диапазона дат
          default: 2
          type: integer
        count_dates:
          title: Количество дней в диапазоне
          default: 31
          type: integer
        only_exists_first_date:
          title: |-
            Только запросы, присутствующие в первой проверке указанного периода

            - 2 - только добавленные запросы за период, работает не корректно из-за ограничения JOIN CH
          nullable: true
          type: integer
        group_folder_id_depth:
          title: При фильтрации по ID папок также искать в подпапках
          type: boolean
        show_trash:
          title: Искать в корзине
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        page:
          $ref: '#/components/schemas/page'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - output
        - project_id
      title: Экспорт списка конкурентов
    Snapshots_2.Methods.Competitors.Export.Get.Exec:
      nullable: true
      type: string
    Snapshots_2.Methods.Competitors.Chart.Export.Get:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        region_index:
          title: |-
            Индекс региона

            Если не задан нужно задать параметры searcher_key, region_key, region_lang, region_device
          nullable: true
          type: integer
        searcher_key:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.SearcherKey'
        region_key:
          title: Ключ региона
          nullable: true
          type: integer
        region_lang:
          title: Язык региона
          nullable: true
          type: string
        region_device:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Positions_2.Types.RegionDevice'
        show_tops:
          title: Добавить в результат данные по топам
          type: boolean
        show_avg:
          title: Добавить в результат среднюю позицию
          type: boolean
        show_median:
          title: Добавить в результат медианную позицию
          type: boolean
        show_visibility:
          title: Добавить в результат
          type: boolean
        show_urls:
          title: Добавить в результат
          type: boolean
        competitor_by:
          title: '@deprecated Используется в старой версии дизайна'
          deprecated: true
          default: domain
          allOf:
            - $ref: '#/components/schemas/Snapshots_2.Types.Competitors.OutputFormat'
        domains:
          title: Фильтр по доменам
          nullable: true
          type: array
        show_exists_dates:
          title: Добавить в результат даты, в которых были проверки (existsDates)
          type: boolean
        dates:
          title: |-
            Произвольные даты без использования диапазона

            Если не задан нужно задать параметры date1, date2, type_range, count_dates
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.DateArray'
        date1:
          title: Дата начала диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        date2:
          title: Дата окончания диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        type_range:
          title: Тип диапазона дат
          default: 2
          type: integer
        count_dates:
          title: Количество дней в диапазоне
          default: 31
          type: integer
        only_exists_first_date:
          title: |-
            Только запросы, присутствующие в первой проверке указанного периода

            - 2 - только добавленные запросы за период, работает не корректно из-за ограничения JOIN CH
          nullable: true
          type: integer
        group_folder_id_depth:
          title: При фильтрации по ID папок также искать в подпапках
          type: boolean
        show_trash:
          title: Искать в корзине
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        page:
          $ref: '#/components/schemas/page'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - project_id
      title: |-
        Экспорт сводки с графика

        Описание параметров смотреть в get/snapshots_2/competitors
    Snapshots_2.Types.Competitors.Export.Repository:
      type: string
      enum:
        - gdrive
      title: Название директории для эспорта
    Snapshots_2.Methods.Competitors.Export.ToRepository.Get:
      type: object
      properties:
        project_id:
          title: Id проекта
          type: integer
        repository:
          allOf:
            - $ref: '#/components/schemas/Snapshots_2.Types.Competitors.Export.Repository'
      required:
        - project_id
        - repository
      title: |-
        Экспорт в хранилище

        Производит редирект на файл в кранилище
