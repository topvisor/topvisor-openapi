openapi: 3.0.0
info:
  title: Topvisor
  version: 2.0.0
servers:
  - url: https://api.topvisor.com/v2/json
    description: Интерфейс для работы с API. Запрещено междоменное общение.
security:
  - authToken: []
  - authLogin: []
tags:
  - name: Admin_2
    description: admin_2
  - name: Analytics_2
    description: analytics_2
  - name: Annotations_2
    description: annotations_2
  - name: App_2
    description: app_2
  - name: Audit_2
    description: audit_2
  - name: Bank_2
    description: bank_2
  - name: Broker_2
    description: broker_2
  - name: Comments_2
    description: comments_2
  - name: Competitors_2
    description: competitors_2
  - name: Content_2
    description: content_2
  - name: Controller_2
    description: controller_2
  - name: Cron_2
    description: cron_2
  - name: Eastereggs_2
    description: eastereggs_2
  - name: Example_2
    description: example_2
  - name: Export_2
    description: export_2
  - name: Fa2_2
    description: fa2_2
  - name: Gitlab_2
    description: gitlab_2
  - name: Informer_2
    description: informer_2
  - name: Keywords_2
    description: keywords_2
  - name: Landings_2
    description: landings_2
  - name: Mentions_2
    description: mentions_2
  - name: Models
    description: models
  - name: Openapi_2
    description: openapi_2
  - name: Payments_2
    description: payments_2
  - name: Positions_2
    description: positions_2
  - name: Projects_2
    description: projects_2
  - name: Qr_2
    description: qr_2
  - name: Quiz_2
    description: quiz_2
  - name: Recurring_2
    description: recurring_2
  - name: Redmine_2
    description: redmine_2
  - name: Reports_2
    description: reports_2
  - name: Robot_2
    description: robot_2
  - name: Schedule_2
    description: schedule_2
  - name: Scripts_2
    description: scripts_2
  - name: Selectel_2
    description: selectel_2
  - name: Slack_2
    description: slack_2
  - name: Sms_2
    description: sms_2
  - name: Snapshots_2
    description: snapshots_2
  - name: System_2
    description: system_2
  - name: Tags_2
    description: tags_2
  - name: Telegram_2
    description: telegram_2
  - name: Templates_2
    description: templates_2
  - name: Tickets_2
    description: tickets_2
  - name: Tinkoff_2
    description: tinkoff_2
  - name: Tpa_2
    description: tpa_2
  - name: Tpvsr_2
    description: tpvsr_2
  - name: Urls_2
    description: urls_2
  - name: Users_2
    description: users_2
  - name: Votes_2
    description: votes_2
  - name: Vue_2
    description: vue_2
  - name: Webscreens_2
    description: webscreens_2
paths:
  /add/analytics_2/:
    post:
      operationId: AddAnalytics2
      tags:
        - Analytics_2
      summary: Фиксация события test
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Analytics_2.Methods.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/annotations_2/:
    post:
      operationId: AddAnnotations2
      tags:
        - Annotations_2
      summary: Добавление примечания
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotations_2.Methods.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/annotations_2/:
    post:
      operationId: DelAnnotations2
      tags:
        - Annotations_2
      summary: Удаление примечания
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotations_2.Methods.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/annotations_2/:
    post:
      operationId: EditAnnotations2
      tags:
        - Annotations_2
      summary: Редактирование примечания
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotations_2.Methods.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/annotations_2/:
    post:
      operationId: GetAnnotations2
      tags:
        - Annotations_2
      summary: Получение примечаний
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotations_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Annotations'
                              description: Only for typescript, does not contain real data
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Annotations'
                description: Only for typescript, does not contain real data
  /get/app_2/:
    post:
      operationId: GetApp2
      tags:
        - App_2
      summary: Получение заархивированного приложения
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /add/comments_2/:
    post:
      operationId: AddComments2
      tags:
        - Comments_2
      summary: Добавление комментария
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comments_2.Methods.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                            title: Id вставленного комментария
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/comments_2/:
    post:
      operationId: DelComments2
      tags:
        - Comments_2
      summary: Удаление комментария
      description: |-
        Удалять комментарии можно только в течение ограниченного времени

        Админы могут удалять комментарии в любое время
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comments_2.Methods.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/comments_2/:
    post:
      operationId: EditComments2
      tags:
        - Comments_2
      summary: Изменение комментария
      description: Изменять комментарий можно только в течение ограниченного времени
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comments_2.Methods.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/comments_2/:
    post:
      operationId: GetComments2
      tags:
        - Comments_2
      summary: Получение комментариев
      description: Возвращает набор комментариев со всеми подкомменатриями, limit, offset не виляют на получение вложенных комментариев
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comments_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/payments_2/:
    post:
      operationId: AddPayments2
      tags:
        - Payments_2
      summary: Создание платежки и переход к оплате
      description: |-
        Возвращает id платежа, если указан параметр $return_id = true

        Производит редирект, если настроена форма оплаты на стороне платежной системы

        Возвращает информацию о платеже, если ожидается вывод формы оплаты на сайте

        При ошибке производит редирект на страницу с инофрмацией об ошибке
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/payments_2/:
    post:
      operationId: GetPayments2
      tags:
        - Payments_2
      summary: Получение списка платежей
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Payments'
                description: Only for typescript, does not contain real data
  /get/qr_2/:
    post:
      operationId: GetQr2
      tags:
        - Qr_2
      summary: Генерация QR кода по тексту
      description: Возвращает изображение в формате data:image/png;base64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Qr_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: string
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/recurring_2/:
    post:
      operationId: DelRecurring2
      tags:
        - Recurring_2
      summary: Удаление настроек автоопераций
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recurring_2.Methods.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/recurring_2/:
    post:
      operationId: EditRecurring2
      tags:
        - Recurring_2
      summary: Настройка рекуррентного платежа
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recurring_2.Methods.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tags_2/:
    post:
      operationId: EditTags2
      tags:
        - Tags_2
      summary: Сохранение списка тегов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tags_2.Methods.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/tags_2/:
    post:
      operationId: GetTags2
      tags:
        - Tags_2
      summary: Получение списка тегов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tags_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/urls_2/:
    post:
      operationId: AddUrls2
      tags:
        - Urls_2
      summary: Добавление url
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Urls_2.Methods.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Urls'
                description: Only for typescript, does not contain real data
  /edit/urls_2/:
    post:
      operationId: EditUrls2
      tags:
        - Urls_2
      summary: Изменение urls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Urls_2.Methods.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Urls'
                description: Only for typescript, does not contain real data
  /get/urls_2/:
    post:
      operationId: GetUrls2
      tags:
        - Urls_2
      summary: Получение списка urls проекта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Urls_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            title: Список urls проекта
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Urls'
                description: Only for typescript, does not contain real data
  /get/annotations_2/my/:
    post:
      operationId: GetAnnotations2My
      tags:
        - Annotations_2
      summary: Получение всех своих примечаний по всем проектам и сервисам
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotations_2.Methods.My.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Annotations'
                              description: Only for typescript, does not contain real data
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Annotations'
                description: Only for typescript, does not contain real data
  /get/app_2/actions/:
    post:
      operationId: GetApp2Actions
      tags:
        - App_2
      summary: Получение данных подтверждения
      description: |-
        Возвращает результат подтверждения в виде
        массива с сообщением (acceptAction),
        логической переменной (acceptEmail),
        null при неправильно введенном типе
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App_2.Methods.Actions.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/app_2/privacy/:
    post:
      operationId: GetApp2Privacy
      tags:
        - App_2
      summary: Получение текста политики конфиденциальности
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App_2.Methods.Privacy.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/Controller_2.Objects.Page'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/countUrls/:
    post:
      operationId: GetAudit2CountUrls
      tags:
        - Audit_2
      summary: Получение количества настроенных URL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.CountUrls.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                            title: Количество настроенных URL
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/indexing/:
    post:
      operationId: GetAudit2Indexing
      tags:
        - Audit_2
      summary: Получение отчета по проверке индексации
      description: Необходимо указать либо date1 и date2, либо dates (вместе указывать нельзя)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Urls'
                              description: Only for typescript, does not contain real data
                            title: Список ссылок с данными по ним
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Urls'
                description: Only for typescript, does not contain real data
  /edit/audit_2/settings/:
    post:
      operationId: EditAudit2Settings
      tags:
        - Audit_2
      summary: Применение наастроек Анализа сайта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Settings.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                            title: Количество применных настроек
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/settings/:
    post:
      operationId: GetAudit2Settings
      tags:
        - Audit_2
      summary: Получение настроек аудита
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Settings.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                            title: Настройки аудита
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/watcher/:
    post:
      operationId: GetAudit2Watcher
      tags:
        - Audit_2
      summary: Получение результатов проверок радара
      description: |-
        Отчет генерируется на основе объектов urls

        Необходимо указать либо check_id1 и check_id2, либо checks_ids (вместе указывать нельзя)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Watcher.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                            title: Генерируемый на основе urls, список результатов проверок радара
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/bank/:
    post:
      operationId: GetBank2Bank
      tags:
        - Bank_2
      summary: Получение данных банка по БИК
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Bank.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/history/:
    post:
      operationId: GetBank2History
      tags:
        - Bank_2
      summary: Получение истории транзакций
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.History.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.BalanceHistory'
                description: Only for typescript, does not contain real data
  /get/bank_2/info/:
    post:
      operationId: GetBank2Info
      tags:
        - Bank_2
      summary: Предоставление инфомации по счету
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Info.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/bank_2/requisites/:
    post:
      operationId: AddBank2Requisites
      tags:
        - Bank_2
      summary: Добавиление реквизитов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Requisites.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: string
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/bank_2/requisites/:
    post:
      operationId: DelBank2Requisites
      tags:
        - Bank_2
      summary: Закрытие договора (оферту закрыть невозможно)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Requisites.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/bank_2/requisites/:
    post:
      operationId: EditBank2Requisites
      tags:
        - Bank_2
      summary: Изменение реквизитов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Requisites.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/requisites/:
    post:
      operationId: GetBank2Requisites
      tags:
        - Bank_2
      summary: Получение списка договоров
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Requisites.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Requisites'
                description: Only for typescript, does not contain real data
  /get/bank_2/ur/:
    post:
      operationId: GetBank2Ur
      tags:
        - Bank_2
      summary: Получение данных юридического лица по ИНН
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Ur.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/comments_2/like/:
    post:
      operationId: EditComments2Like
      tags:
        - Comments_2
      summary: Редактирование статуса лайка для комментария
      description: Возвращает результат редактирования статуса лайка
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comments_2.Methods.Like.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/content_2/authors/:
    post:
      operationId: EditContent2Authors
      tags:
        - Content_2
      summary: Изменить настройки автора
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Authors.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/content_2/authors/:
    post:
      operationId: GetContent2Authors
      tags:
        - Content_2
      summary: Получение данных об авторе
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content_2.Methods.Authors.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Content.Authors'
                description: Only for typescript, does not contain real data
  /add/cron_2/commands/:
    post:
      operationId: AddCron2Commands
      tags:
        - Cron_2
      summary: Добавление задачи cron
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cron_2.Methods.Commands.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.CronCommands'
                description: Only for typescript, does not contain real data
  /del/cron_2/commands/:
    post:
      operationId: DelCron2Commands
      tags:
        - Cron_2
      summary: Удаление задачи cron
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cron_2.Methods.Commands.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.CronCommands'
                description: Only for typescript, does not contain real data
  /edit/cron_2/commands/:
    post:
      operationId: EditCron2Commands
      tags:
        - Cron_2
      summary: Изменение задачи cron
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cron_2.Methods.Commands.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.CronCommands'
                description: Only for typescript, does not contain real data
  /get/cron_2/commands/:
    post:
      operationId: GetCron2Commands
      tags:
        - Cron_2
      summary: Получение задач cron
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cron_2.Methods.Commands.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.CronCommands'
                              description: Only for typescript, does not contain real data
                            title: Список задач cron
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.CronCommands'
                description: Only for typescript, does not contain real data
  /get/cron_2/services/:
    post:
      operationId: GetCron2Services
      tags:
        - Cron_2
      summary: Получение списка имен сервисов, в которых есть команды cron
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cron_2.Methods.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.CronCommands'
                              description: Only for typescript, does not contain real data
                            title: Список имен сервисов
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.CronCommands'
                description: Only for typescript, does not contain real data
  /get/example_2/array/:
    post:
      operationId: GetExample2Array
      tags:
        - Example_2
      summary: Метод с примерами параметров типа Enum
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Example_2.Methods.Array.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                            title: Ассоциативный результирующий массив, с данными, переданными в метод и результатом genSet()
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/example_2/custom/:
    post:
      operationId: GetExample2Custom
      tags:
        - Example_2
      summary: Получение текущего времени
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Example_2.Methods.Custom.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: string
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/example_2/enum/:
    post:
      operationId: GetExample2Enum
      tags:
        - Example_2
      summary: Метод с примерами параметров типа Enum
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Example_2.Methods.Enum.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                            title: Ассоциативный результирующий массив, с данными, переданными в метод
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/example_2/projects/:
    post:
      operationId: GetExample2Projects
      tags:
        - Example_2
      summary: Получение списка проектов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Example_2.Methods.Projects.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Projects'
                              description: Only for typescript, does not contain real data
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
                description: Only for typescript, does not contain real data
  /get/openapi_2/download/:
    post:
      operationId: GetOpenapi2Download
      tags:
        - Openapi_2
      summary: Создать Open API схемы и скачать в zip
      description: |-
        В результате вернет zip файл в потоке вывода

        @see https://editor.swagger.io/ Редактор Open API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenAPI_2.Methods.Download.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/payments_2/companies/:
    post:
      operationId: GetPayments2Companies
      tags:
        - Payments_2
      summary: Получение компании пользователя, через которых, были совершены платежи
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.Companies.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/payments_2/contractSign/:
    post:
      operationId: EditPayments2ContractSign
      tags:
        - Payments_2
      summary: Подписание контракта (только для админов)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.ContractSign.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/payments_2/nextRequisitesId/:
    post:
      operationId: EditPayments2NextRequisitesId
      tags:
        - Payments_2
      summary: Изменение платежных реквизитов тарифа
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.NextRequisitesId.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/payments_2/urTinkoffCreateApplication/:
    post:
      operationId: AddPayments2UrTinkoffCreateApplication
      tags:
        - Payments_2
      summary: Отправка заявки на подключение Тинькофф Бизнес
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.UrTinkoffCreateApplication.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/payments_2/validateMerchantCardAP/:
    post:
      operationId: GetPayments2ValidateMerchantCardAP
      tags:
        - Payments_2
      summary: Валидация домена для подтверждения оплаты Apple Pay (system = card_ap)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.ValidateMerchantCardAP.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/projects_2/folders/:
    post:
      operationId: AddProjects2Folders
      tags:
        - Projects_2
      summary: Добавление папки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Folders.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                            title: '@returns ?int id добавленной папки'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /del/projects_2/folders/:
    post:
      operationId: DelProjects2Folders
      tags:
        - Projects_2
      summary: Удаление папок
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Folders.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects.Folders'
                description: Only for typescript, does not contain real data
  /get/projects_2/folders/:
    post:
      operationId: GetProjects2Folders
      tags:
        - Projects_2
      summary: Получение списка папок
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Folders.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects.Folders'
                description: Only for typescript, does not contain real data
  /del/recurring_2/recurringCard/:
    post:
      operationId: DelRecurring2RecurringCard
      tags:
        - Recurring_2
      summary: Удалить привязанную карту (system = card)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recurring_2.Methods.RecurringCard.Del'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/recurring_2/recurringCard/:
    post:
      operationId: GetRecurring2RecurringCard
      tags:
        - Recurring_2
      summary: Получение привязанных карт пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recurring_2.Methods.RecurringCard.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/tickets_2/messages/:
    post:
      operationId: AddTickets2Messages
      tags:
        - Tickets_2
      summary: Добавление сообщения к тикиту
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Messages.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                            title: Id добавленного сообщения
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/tickets_2/tickets/:
    post:
      operationId: AddTickets2Tickets
      tags:
        - Tickets_2
      summary: Создание тикета
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Tickets.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                            title: Id тикета
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tickets_2/tickets/:
    post:
      operationId: EditTickets2Tickets
      tags:
        - Tickets_2
      summary: Редактирование тикета
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Tickets.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/tickets_2/tickets/:
    post:
      operationId: GetTickets2Tickets
      tags:
        - Tickets_2
      summary: Получение списка тикетов с сообщениями
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Tickets.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Tickets'
                              description: Only for typescript, does not contain real data
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Tickets'
                description: Only for typescript, does not contain real data
  /get/urls_2/export/:
    post:
      operationId: GetUrls2Export
      tags:
        - Urls_2
      summary: Экспорт urls в определенном формате
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Urls_2.Methods.Export.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /add/urls_2/import/:
    post:
      operationId: AddUrls2Import
      tags:
        - Urls_2
      summary: Импортирование urls
      description: |-
        Доступные поля для импорта:
        - url
        - sitemap
        - audit
        - indexing
        - watcher
        - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Urls_2.Methods.Import.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                            title: |-
                              @return ?array{countSended: int, countDuplicated: int, countAdded: int, countChanged: int}

                              @throws Exception
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/urls_2/tags/:
    post:
      operationId: EditUrls2Tags
      tags:
        - Urls_2
      summary: Изменение тегов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Urls_2.Methods.Tags.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Urls'
                description: Only for typescript, does not contain real data
  /get/admin_2/actions/call/:
    post:
      operationId: GetAdmin2ActionsCall
      tags:
        - Admin_2
      summary: Получение результата вызова actions-метода
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Actions.Call.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/admin_2/users/promocodes/:
    post:
      operationId: AddAdmin2UsersPromocodes
      tags:
        - Admin_2
      summary: Добавить промокоды к достижению
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Users.Promocodes.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                            title: '@throws Exception'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Users.Verif'
                description: Only for typescript, does not contain real data
  /get/admin_2/users/promocodes/:
    post:
      operationId: GetAdmin2UsersPromocodes
      tags:
        - Admin_2
      summary: Получить промокоды
      description: |-
        В params хранится строка в формате:
        - {{ rank_id }}
        - {{ rank_id }},single_code - для многоразового кода
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Users.Promocodes.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Users.Verif'
                              description: Only for typescript, does not contain real data
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Users.Verif'
                description: Only for typescript, does not contain real data
  /add/admin_2/users/ranks/:
    post:
      operationId: AddAdmin2UsersRanks
      tags:
        - Admin_2
      summary: Добавить достижение
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Users.Ranks.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Admin.Users.Ranks'
                description: Only for typescript, does not contain real data
  /edit/admin_2/users/ranks/:
    post:
      operationId: EditAdmin2UsersRanks
      tags:
        - Admin_2
      summary: Изменить достижение
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Users.Ranks.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Admin.Users.Ranks'
                description: Only for typescript, does not contain real data
  /get/admin_2/users/ranks/:
    post:
      operationId: GetAdmin2UsersRanks
      tags:
        - Admin_2
      summary: Получить достижения
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Users.Ranks.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Admin.Users.Ranks'
                              description: Only for typescript, does not contain real data
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Admin.Users.Ranks'
                description: Only for typescript, does not contain real data
  /get/audit_2/audit/browse/:
    post:
      operationId: GetAudit2AuditBrowse
      tags:
        - Audit_2
      summary: Получение сводки анализа сайта
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Browse.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                            title: Сводка анализа сайта
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/audit/checks/:
    post:
      operationId: GetAudit2AuditChecks
      tags:
        - Audit_2
      summary: |-
        Получение общей информации о проверках
        - только для проверки, которая не завершена
        - в ответе будут заменены значения кодов ответа на текущие: count_000, count_1xx, count_2xx, count_3xx, count_4xx, count_5xx
        - в ответе будет заменено значение count_pages и count_all на текущие
        - в ответ будет добавлены значения robot_step и robot_count_tasks_allм
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Checks.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            title: Список выполненных (выполняемых) проверок аудита
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Audit.Checks'
                description: Only for typescript, does not contain real data
  /get/audit_2/audit/css/:
    post:
      operationId: GetAudit2AuditCss
      tags:
        - Audit_2
      summary: Получение проверенных css
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Css.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Audit.Css'
                              description: Only for typescript, does not contain real data
                            title: Список проверенных css
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Audit.Css'
                description: Only for typescript, does not contain real data
  /get/audit_2/audit/export/:
    post:
      operationId: GetAudit2AuditExport
      tags:
        - Audit_2
      summary: Экспорт результатов проверки файла
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Export.Get'
        required: true
      responses:
        '200':
          description: Файл результатов проверки сайта
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/audit_2/audit/images/:
    post:
      operationId: GetAudit2AuditImages
      tags:
        - Audit_2
      summary: Получение проверенных изображений
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Images.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Audit.Images'
                              description: Only for typescript, does not contain real data
                            title: Список проверенных изображений
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Audit.Images'
                description: Only for typescript, does not contain real data
  /get/audit_2/audit/js/:
    post:
      operationId: GetAudit2AuditJs
      tags:
        - Audit_2
      summary: Получение проверенных js
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Js.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Audit.Js'
                              description: Only for typescript, does not contain real data
                            title: Список проверенных js
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Audit.Js'
                description: Only for typescript, does not contain real data
  /get/audit_2/audit/links/:
    post:
      operationId: GetAudit2AuditLinks
      tags:
        - Audit_2
      summary: Получение проверенных ссылок
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Links.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Audit.Links'
                              description: Only for typescript, does not contain real data
                            title: Список проверенных ссылок
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Audit.Links'
                description: Only for typescript, does not contain real data
  /get/audit_2/audit/log/:
    post:
      operationId: GetAudit2AuditLog
      tags:
        - Audit_2
      summary: Получение данных проверенных ресурсов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Log.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                            title: Данные проверенных ресурсов
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/audit/pages/:
    post:
      operationId: GetAudit2AuditPages
      tags:
        - Audit_2
      summary: Получение страниц, по которым был выполнен аудит
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Pages.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Audit.Pages'
                              description: Only for typescript, does not contain real data
                            title: Список страниц
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Audit.Pages'
                description: Only for typescript, does not contain real data
  /get/audit_2/audit/summary/:
    post:
      operationId: GetAudit2AuditSummary
      tags:
        - Audit_2
      summary: Получение сводки о выполненном аудите
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Summary.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Audit.Checks'
                              description: Only for typescript, does not contain real data
                            title: |-
                              Возвращает объект со сводкой по категориям, пример:
                               - `$res['all']['all']['count_checks_success']` - количество пройденных проверок во всех категориях
                               - `$res['pages']['indexing']['count_checks_success']` - количество пройденных проверок в категории Страницы / Индексация
                               - `$res['all']['all']['count_checks_success']` - количество пройденных проверок во всех категориях
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Audit.Checks'
                description: Only for typescript, does not contain real data
  /get/audit_2/audit/summaryPage/:
    post:
      operationId: GetAudit2AuditSummaryPage
      tags:
        - Audit_2
      summary: Получение сводки страницы
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.SummaryPage.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Audit.Pages'
                              description: Only for typescript, does not contain real data
                            title: Сводка о выполненном аудите по одной странице
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Audit.Pages'
                description: Only for typescript, does not contain real data
  /get/audit_2/indexing/export/:
    post:
      operationId: GetAudit2IndexingExport
      tags:
        - Audit_2
      summary: Экспорт результатов индексации
      description: Необходимо указать либо date1 и date2, либо dates (вместе указывать нельзя)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Export.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: string
                            title: Результаты индексации
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/indexing/links/:
    post:
      operationId: GetAudit2IndexingLinks
      tags:
        - Audit_2
      summary: Создание гостевой ссылки на просмотр позиций
      description: Необходимо указать либо date1 и date2, либо dates (вместе указывать нельзя)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Links.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: string
                            title: Короткая гостевая ссылка на просмотр позиций
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/indexing/summary/:
    post:
      operationId: GetAudit2IndexingSummary
      tags:
        - Audit_2
      summary: Получение сводки индексации
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Summary.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                            title: Сводка индексации
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/watcher/byURL/:
    post:
      operationId: GetAudit2WatcherByURL
      tags:
        - Audit_2
      summary: Построение отчета по одному URL
      description: |-
        Отличия от get/audit_2/watcher:
        - отчет генерируется на основе объекта watcher_results, а не urls
        - параметры выбора периода отчета игнорируются
        - выбор прверок регулируется параметрами запроса filters, limit и offset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Watcher.ByURL.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            title: Отчет по одному URL
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Watcher.Results'
                description: Only for typescript, does not contain real data
  /get/audit_2/watcher/checks/:
    post:
      operationId: GetAudit2WatcherChecks
      tags:
        - Audit_2
      summary: Получение проверок радара
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Watcher.Checks.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                            title: Список проверок радара
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/watcher/summary/:
    post:
      operationId: GetAudit2WatcherSummary
      tags:
        - Audit_2
      summary: Получение сводки радара
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Watcher.Summary.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                            title: Сводка с количеством изменений по каждому типу проверки
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/diadoc/sendContract/:
    post:
      operationId: GetBank2DiadocSendContract
      tags:
        - Bank_2
      summary: Отправка договора в диадок
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Diadoc.SendContract.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/diadoc/sendTotalReceipt/:
    post:
      operationId: GetBank2DiadocSendTotalReceipt
      tags:
        - Bank_2
      summary: Отправка акта сверки в диадок
      description: Параметры см. в bank_2_requisites::protected_get_printTotalReceipt();
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Diadoc.SendTotalReceipt.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/history/export/:
    post:
      operationId: GetBank2HistoryExport
      tags:
        - Bank_2
      summary: Экспорт лога банка
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.History.Export.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/bank_2/history/summary/:
    post:
      operationId: GetBank2HistorySummary
      tags:
        - Bank_2
      summary: Получение сводки проведенных операций
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.History.Summary.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.BalanceHistory'
                              description: Only for typescript, does not contain real data
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.BalanceHistory'
                description: Only for typescript, does not contain real data
  /edit/bank_2/referrals/toBonus/:
    post:
      operationId: EditBank2ReferralsToBonus
      tags:
        - Bank_2
      summary: Перевод средств с реферального счета на бонусный
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Referrals.ToBonus.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/requisites/contractTariffId/:
    post:
      operationId: GetBank2RequisitesContractTariffId
      tags:
        - Bank_2
      summary: Получение id тарифа пользователя по типу контракта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Requisites.ContractTariffId.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/requisites/print/:
    post:
      operationId: GetBank2RequisitesPrint
      tags:
        - Bank_2
      summary: Скачивание документа в формате PDF
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Requisites.Print.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/bank_2/requisites/printTotalReceipt/:
    post:
      operationId: GetBank2RequisitesPrintTotalReceipt
      tags:
        - Bank_2
      summary: Получение акта сверки (акты по предоплате выводятся в одном платеже)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Requisites.PrintTotalReceipt.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/bank_2/requisites/printZip/:
    post:
      operationId: GetBank2RequisitesPrintZip
      tags:
        - Bank_2
      summary: Скачивание архива документов в формате PDF
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_2.Methods.Requisites.PrintZip.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /add/landings_2/hr/feedback/:
    post:
      operationId: AddLandings2HrFeedback
      tags:
        - Landings_2
      summary: Отправление письма с лэндинга вакансий на hr@topvisor.com
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Landings_2.Methods.Hr.Feedback.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/payments_2/tariff/delCard/:
    post:
      operationId: EditPayments2TariffDelCard
      tags:
        - Payments_2
      summary: Отписка от тарифа, оплаченного картой
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.Tariff.DelCard.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/payments_2/tariff/nextToDiadoc/:
    post:
      operationId: EditPayments2TariffNextToDiadoc
      tags:
        - Payments_2
      summary: 'Настройка оплаты тарифов: выставлять ли счета через диадок'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.Tariff.NextToDiadoc.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/payments_2/tariff/setNext/:
    post:
      operationId: EditPayments2TariffSetNext
      tags:
        - Payments_2
      summary: Смена тарифа со следующего месяца
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments_2.Methods.Tariff.SetNext.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/projects_2/folders/move/:
    post:
      operationId: EditProjects2FoldersMove
      tags:
        - Projects_2
      summary: Перемещение проектов в папку
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Folders.Move.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/projects_2/folders/moveFolder/:
    post:
      operationId: EditProjects2FoldersMoveFolder
      tags:
        - Projects_2
      summary: Переместить папку
      description: Вложенные папки запрещены, поэтому перемещение происходит только в пределах одного списка
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Folders.MoveFolder.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/projects_2/folders/name/:
    post:
      operationId: EditProjects2FoldersName
      tags:
        - Projects_2
      summary: Изменение имени папки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projects_2.Methods.Folders.Name.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result: {}
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tickets_2/admin/ticket/:
    post:
      operationId: EditTickets2AdminTicket
      tags:
        - Tickets_2
      summary: Редактирование тикета (для админов)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Admin.Ticket.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tickets_2/admin/ticketSplit/:
    post:
      operationId: EditTickets2AdminTicketSplit
      tags:
        - Tickets_2
      summary: Перенос последниего сообщения (до 1 сообщения автора) в новый тикет
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Admin.TicketSplit.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/tickets_2/tickets/setReaded/:
    post:
      operationId: EditTickets2TicketsSetReaded
      tags:
        - Tickets_2
      summary: Пометка тикета как "прочитанный" для автора тикета или админов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tickets_2.Methods.Tickets.SetReaded.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/urls_2/import/recognizeLinkSitemapXml/:
    post:
      operationId: GetUrls2ImportRecognizeLinkSitemapXml
      tags:
        - Urls_2
      summary: Получение URL к карте сайта по файлу robots.txt для указанного домена
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Urls_2.Methods.Import.RecognizeLinkSitemapXml.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: string
                            title: URL к карте сайта
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /add/users_2/join/email/:
    post:
      operationId: AddUsers2JoinEmail
      tags:
        - Users_2
      summary: Привязка email к аккаунту
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users_2.Methods.Join.Email.Add'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: integer
                            title: '@throws Exception'
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/admin_2/users/informer/subscriptions/:
    post:
      operationId: GetAdmin2UsersInformerSubscriptions
      tags:
        - Admin_2
      summary: График с количеством подписок на рубрики с сегментцией по способам рассылки
      description: График кешируется, первый запрос может выполняться дольше
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_2.Methods.Users.Informer.Subscriptions.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/TV.Objects.Highcharts.Chart'
                            title: Данные для построения графика
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/audit_2/audit/checker/go/:
    post:
      operationId: EditAudit2AuditCheckerGo
      tags:
        - Audit_2
      summary: Запуск проверки аудита
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Checker.Go.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Projects'
                              description: Only for typescript, does not contain real data
                            title: |-
                              @return array{projectIds: int[]}

                              @throws Exception
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
                description: Only for typescript, does not contain real data
  /get/audit_2/audit/checker/price/:
    post:
      operationId: GetAudit2AuditCheckerPrice
      tags:
        - Audit_2
      summary: Получение стоимости проверки аудита
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Checker.Price.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Projects'
                              description: Only for typescript, does not contain real data
                            title: |-
                              @return array{pricesByUsers: array<int, array{projectsIds: int[], price: float}>}

                              ```
                              {
                                  "pricesByUsers": {
                                          "{{userId}}": {
                                              "projectsIds": [],
                                              "price": float,
                                              "priceOriginal": float
                                          }
                                  }
                               }
                              ```

                              @throws Exception
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
                description: Only for typescript, does not contain real data
  /get/audit_2/audit/export/links/:
    post:
      operationId: GetAudit2AuditExportLinks
      tags:
        - Audit_2
      summary: Получение гостевой ссылки на просмотр аудита позиций
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Export.Links.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: string
                            title: Короткая гостевая ссылка на просмотр аудита позиций
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/audit/export/summary/:
    post:
      operationId: GetAudit2AuditExportSummary
      tags:
        - Audit_2
      summary: Экспорт отчета Анализа сайта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Export.Summary.Get'
        required: true
      responses:
        '200':
          description: Файл отчета анализа сайта
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/audit_2/audit/log/actualError/:
    post:
      operationId: GetAudit2AuditLogActualError
      tags:
        - Audit_2
      summary: Получение информации о текущей ошибке на роботе
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Log.ActualError.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/stdClass'
                            title: Вернет null, если ошибки на роботе нет
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/audit/log/chart/:
    post:
      operationId: GetAudit2AuditLogChart
      tags:
        - Audit_2
      summary: Получение данных для графика
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Log.Chart.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                            title: Данные для графика
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                      - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/audit/results/export/:
    post:
      operationId: GetAudit2AuditResultsExport
      tags:
        - Audit_2
      summary: Экспорт результатов аудита
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Results.Export.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: boolean
                            title: Ответ об успешнности экспорта результатов аудита
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/audit/results/page/:
    post:
      operationId: GetAudit2AuditResultsPage
      tags:
        - Audit_2
      summary: Получение результатов анализа страницы
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Audit.Results.Page.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                            title: |-
                              Результаты анализа страницы
                              ```
                              {
                                     "result": {
                                         'page_in_filter': bool,
                                         'index': => int,
                                         'snippet': => string,
                                         'content': => string
                                     }
                              }
                              ```
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/audit_2/indexing/checker/go/:
    post:
      operationId: EditAudit2IndexingCheckerGo
      tags:
        - Audit_2
      summary: Отправка проектов на проверку индексации
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Checker.Go.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Projects'
                              description: Only for typescript, does not contain real data
                            title: |-
                              @return array{projectIds: int[]}

                              @throws Exception
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
                description: Only for typescript, does not contain real data
  /get/audit_2/indexing/checker/price/:
    post:
      operationId: GetAudit2IndexingCheckerPrice
      tags:
        - Audit_2
      summary: Полуение стоимости проверки индексации
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Checker.Price.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Projects'
                              description: Only for typescript, does not contain real data
                            title: |-
                              @return array{pricesByUsers: array<int, array{projectsIds: int[], price: float}>}

                              ```
                              {
                                 "pricesByUsers": {
                                     "{{userId}}": {
                                         "projectsIds": [],
                                         "price": float
                                     }
                                 }
                              }
                              ```

                              @throws Exception
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
                description: Only for typescript, does not contain real data
  /get/audit_2/indexing/export/links/:
    post:
      operationId: GetAudit2IndexingExportLinks
      tags:
        - Audit_2
      summary: Получение гостевой ссылки на просмотр индексации
      description: Необходимо указать либо date1 и date2, либо dates (вместе указывать нельзя)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Export.Links.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: string
                            title: Короткая гостевая ссылка на просмотр индексации
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/indexing/export/toRepository/:
    post:
      operationId: GetAudit2IndexingExportToRepository
      tags:
        - Audit_2
      summary: Экспорт файла в хранилище
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Export.ToRepository.Get'
        required: true
      responses:
        '200':
          description: Будет произведен редиркт на файл в хранилище
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /get/audit_2/indexing/summary/chart/:
    post:
      operationId: GetAudit2IndexingSummaryChart
      tags:
        - Audit_2
      summary: Получение сводок индексации для графика
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Indexing.Summary.Chart.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                            title: Сводки индексации
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /edit/audit_2/sitemap/checker/go/:
    post:
      operationId: EditAudit2SitemapCheckerGo
      tags:
        - Audit_2
      summary: Отправка проектов на проверку карты сайта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Sitemap.Checker.Go.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Projects'
                              description: Only for typescript, does not contain real data
                            title: |-
                              @return array{projectIds: int[]}

                              @throws Exception
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
                description: Only for typescript, does not contain real data
  /get/audit_2/sitemap/checker/price/:
    post:
      operationId: GetAudit2SitemapCheckerPrice
      tags:
        - Audit_2
      summary: Полуение стоимости проверки карты сайта
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Sitemap.Checker.Price.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Projects'
                              description: Only for typescript, does not contain real data
                            title: |-
                              @return array{pricesByUsers: array<int, array{projectsIds: int[], price: float}>}

                              ```
                              {
                                 "pricesByUsers": {
                                     "{{userId}}": {
                                         "projectsIds": [],
                                         "price": float
                                     }
                                 }
                              }
                              ```

                              @throws Exception
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
                description: Only for typescript, does not contain real data
  /edit/audit_2/watcher/checker/go/:
    post:
      operationId: EditAudit2WatcherCheckerGo
      tags:
        - Audit_2
      summary: Отправка проектов на проверку радара
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Watcher.Checker.Go.Edit'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Projects'
                              description: Only for typescript, does not contain real data
                            title: |-
                              @return array{projectIds: int[]}

                              @throws Exception
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
                description: Only for typescript, does not contain real data
  /get/audit_2/watcher/checker/price/:
    post:
      operationId: GetAudit2WatcherCheckerPrice
      tags:
        - Audit_2
      summary: Полуение стоимости проверки радара
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Watcher.Checker.Price.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/Models.Projects'
                              description: Only for typescript, does not contain real data
                            title: |-
                              @return array{pricesByUsers: array<int, array{projectsIds: int[], price: float}>}

                              ```
                              {
                                 "pricesByUsers": {
                                     "{{userId}}": {
                                         "projectsIds": [],
                                         "price": float
                                     }
                                 }
                              }
                              ```

                              @throws Exception
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                $ref: '#/components/schemas/Models.Projects'
                description: Only for typescript, does not contain real data
  /get/audit_2/watcher/export/links/:
    post:
      operationId: GetAudit2WatcherExportLinks
      tags:
        - Audit_2
      summary: Создание гостевой ссылки на просмотр радара
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Watcher.Export.Links.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: string
                            title: Короткая ссылка гостевого доступа для просмотра радара
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
  /get/audit_2/watcher/summary/chart/:
    post:
      operationId: GetAudit2WatcherSummaryChart
      tags:
        - Audit_2
      summary: Получение сводок радара для графика
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit_2.Methods.Watcher.Summary.Chart.Get'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                            title: Сводки с количеством изменений по каждому типу проверки
                        required:
                          - result
                      - $ref: '#/components/schemas/ResponseSuccess'
                  - $ref: '#/components/schemas/ResponseError'
            model:
              schema:
                type: 'null'
components:
  securitySchemes:
    authToken:
      type: apiKey
      description: 'Авторизаци по API ключу в формате: `Bearer userId:AccessToken`'
      name: Authorization
      in: header
    authLogin:
      type: apiKey
      description: Пользовательская авторизиаця через ввода Логина и пароля или через сторонний сервис
      name: auth
      in: cookie
  schemas:
    Analytics_2.Methods.Add:
      type: object
      properties:
        ec:
          title: Категория
          nullable: true
          type: string
        ea:
          title: Дейсвтие
          nullable: true
          type: string
        el:
          title: Ярлык в base64
          nullable: true
          type: string
        uid:
          title: ID пользователя
          nullable: true
          type: integer
        hash_id:
          title: Хеш для уникализации события
          nullable: true
          type: integer
        hash:
          title: Хэш для проверки подлинности события
          nullable: true
          type: integer
      required: []
      title: Фиксация события test
    TV.API.Types.StringArray:
      type: array
      items:
        type: string
      title: 'Тип массива: string[]'
    ResponseSuccess:
      type: object
      properties:
        errors:
          title: Результат ответа API метода
          description: Тип результата зависит от типа запроса и его настроек
          nullable: true
          type: 'null'
        messages:
          title: Список ообщений, полученных при выполнении запроса
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.StringArray'
      required: []
      title: Результат успешного API запроса
    stdClass:
      type: object
      properties: {}
      required: []
    Error:
      type: object
      properties:
        code:
          title: Код ошибки
          description: Код ошибки 0 - deprecated
          type: integer
        string:
          title: Описание ошибки
          type: string
        detail:
          title: Объект с дополнительной информацией
          allOf:
            - $ref: '#/components/schemas/stdClass'
      required:
        - code
        - string
        - detail
      title: Информация об ошибке
    Errors:
      type: array
      items:
        $ref: '#/components/schemas/Error'
      title: Список ошибок
    ResponseError:
      type: object
      properties:
        result:
          title: При ошибке результат отсутствует
          nullable: true
          type: 'null'
        errors:
          title: Список ошибок, полученных при выполнении запроса
          description: '@requires'
          allOf:
            - $ref: '#/components/schemas/Errors'
        messages:
          title: Список ообщений, полученных при выполнении запроса
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.StringArray'
      required:
        - errors
      title: Результат API запроса с ошибкой
    Annotations_2.Types.ServiceName:
      type: string
      enum:
        - positions
        - audit
        - watcher
        - indexing
    Annotations_2.Methods.Add:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        service:
          title: Имя сервиса
          allOf:
            - $ref: '#/components/schemas/Annotations_2.Types.ServiceName'
        target_id:
          title: Идентификатор отчета в сервисе
          type: string
        text:
          title: Комментарий, если не указан, комментарий добавлен не будет
          type: string
      required:
        - project_id
        - service
        - target_id
      title: Добавление примечания
    Annotations_2.Methods.Del:
      type: object
      properties:
        id:
          title: ID примечания
          type: integer
        project_id:
          title: ID проекта
          type: integer
        service:
          title: Имя сервиса
          allOf:
            - $ref: '#/components/schemas/Annotations_2.Types.ServiceName'
      required:
        - id
        - project_id
        - service
      title: Удаление примечания
    Annotations_2.Methods.Edit:
      type: object
      properties:
        id:
          title: ID примечания
          type: integer
        project_id:
          title: ID проекта
          type: integer
        service:
          title: Имя сервиса
          allOf:
            - $ref: '#/components/schemas/Annotations_2.Types.ServiceName'
        text:
          title: Текст комментария
          description: Если не текст указан, комментарий будет удален
          type: string
      required:
        - id
        - project_id
        - service
      title: Редактирование примечания
    fields:
      title: Список полей объекта, которые надо вернуть в результате
      description: |-
        Если запрос поддерижвает параметр fetch_style, формат ответа может быть разным, fields будет влиять на содержание данных в этом ответе

        Использует поля модели

        @see AbstractMethod::MODEL
      type: array
      items:
        oneOf:
          - type: string
          - type: number
    orders:
      title: Список полей объекта, по которым необходимо выполнить сортировку
      description: |-
        Поля могут быть строками или объектом: {name: string, direction: 'ASC' | 'DESC', orderValues: array}

        Использует поля модели

        @see AbstractMethod::MODEL
      type: array
      items:
        oneOf:
          - type: string
          - type: number
    filters:
      title: Список фильтров по полям объекта
      description: |-
        {name: string, operator: Field::AVAILABLE_OPERATORS, values: array}

        Использует поля модели

        Поля обязатлеьное, если $id не указан

        @see AbstractMethod::MODEL
        @see Field::AVAILABLE_OPERATORS
      type: array
      items:
        oneOf:
          - type: string
          - type: number
    id:
      title: Id объекта, для фильтрации объектов по id
      description: Только для моделей с полем id
      nullable: true
      type: integer
    limit:
      title: Количество объектов, которые необходимо получить в результате
      description: Используется в паре с offset
      nullable: true
      type: integer
    offset:
      title: Число объектов, которое необходимо пропустить при получении резальтата
      description: Используется в паре с limit
      type: integer
    fetch_style:
      title: 'Определяет формат результата: коллекция, объект, значение'
      description: |-
        Примеры:
        - fetchAll - получить коллекцию объектов
        - fetch - получить один объект
        - fetchColumn - получить свойсвто объекта

        @see Selector::AVAILABLE_FETCH_STYLES
        @see Selector::execFetch() - см. реализацию
      nullable: true
      type: string
    Annotations_2.Methods.Get:
      type: object
      properties:
        project_id:
          title: ID проекта
          type: integer
        service:
          title: Имя сервиса
          allOf:
            - $ref: '#/components/schemas/Annotations_2.Types.ServiceName'
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - project_id
        - service
        - fields
        - orders
        - filters
        - offset
      title: Получение примечаний
    Models.Annotations:
      properties:
        id: {}
        user_id:
          nullable: true
        project_id:
          nullable: true
        service:
          nullable: true
        target_id:
          nullable: true
        text:
          nullable: true
        create_time:
          nullable: true
    Pagination:
      type: object
      properties:
        nextOffset:
          title: Смещение для получения следующий порции данных
          description: Вернется только в случае существования следующей порции
          nullable: true
          type: integer
        total:
          title: Общее число результатов, без учета применения пагинации
          nullable: true
          type: integer
      required: []
      title: Результаты пагинации
    App_2.Methods.Get:
      type: object
      properties: {}
      required: []
      title: Получение заархивированного приложения
    TV.API.Types.Topvisor.Subdomain:
      type: string
      enum:
        - ''
        - journal
    Comments_2.Methods.Add:
      type: object
      properties:
        subdomain:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Topvisor.Subdomain'
        text:
          title: Текст комментария
          type: string
        page_url:
          title: Адрес страницы (нельзя указывать совместно с reply_id)
          nullable: true
          type: string
        reply_id:
          title: Привязать к комментарию с id = reply_id  (нельзя указывать совместно с page_url)
          nullable: true
          type: integer
      required:
        - text
      title: Добавление комментария
    Comments_2.Methods.Del:
      type: object
      properties:
        id:
          title: ID комментария
          type: integer
      required:
        - id
      title: Удаление комментария
      description: |-
        Удалять комментарии можно только в течение ограниченного времени

        Админы могут удалять комментарии в любое время
    Comments_2.Methods.Edit:
      type: object
      properties:
        id:
          title: ID комментария
          type: integer
        text:
          title: Текст комментария, не может быть пустой строкой
          type: string
      required:
        - id
        - text
      title: Изменение комментария
      description: Изменять комментарий можно только в течение ограниченного времени
    Comments_2.Methods.Get:
      type: object
      properties:
        subdomain:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Topvisor.Subdomain'
        page_url:
          title: Адрес страницы (нельзя указывать совместно с reply_id)
          nullable: true
          type: string
        reply_id:
          title: Получить ответы на комменатрий с id = reply_id (нельзя указывать совместно с page_url)
          nullable: true
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение комментариев
      description: Возвращает набор комментариев со всеми подкомменатриями, limit, offset не виляют на получение вложенных комментариев
    Payments_2.Types.System:
      type: string
      enum:
        - balance
        - card
        - card_ios
        - card_android
        - card_ap
        - card_gp
        - invoice
        - tinkoff_business
        - ap
        - ym
        - qw
        - sb
        - wm2
        - pp
        - pd
        - pd_invoice
        - rk
        - pt
        - lp
        - ppg
    Payments_2.Types.Country:
      type: string
      enum:
        - RU
        - UA
        - BY
        - KZ
        - other
    Payments_2.Methods.Add:
      type: object
      properties:
        system:
          title: Платежная система
          allOf:
            - $ref: '#/components/schemas/Payments_2.Types.System'
        sum:
          title: Сумма платежа
          type: number
        country:
          title: Страна реквизитов
          allOf:
            - $ref: '#/components/schemas/Payments_2.Types.Country'
        requisites_id:
          title: Номер договора/оферты для платежа
          type: string
        tariff_id:
          title: ID тарифа (если указан, сумма будет переопределена)
          type: integer
        tariff_count_month:
          title: Число предоплаченных месяцев по тарифу
          description: |-
            Примеры:
            - при оплате тарифа на 1 месяц должен быть равен 1
            - при оплате тарифа на 2 месяца должен быть равен 2
          type: integer
        comment:
          title: Комментарий
          type: string
        items:
          title: Комментарий
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        card_id:
          title: ID карты в системе оплаты для привязки
          type: string
        payment_data:
          title: Пробрасываемые данные в redirectToPay() для FinishAuthorize Tinkoff для Apple Pay и Google Pay
          type: string
        email:
          title: |-
            Email (указывается, если у пользователя не привязан email)
            TODO: Добавить тип Email
          nullable: true
          type: string
        phone:
          title: Телефон (указывается для определенных систем оплаты)
          type: string
        is_cancelable:
          title: Флаг - отменяемый платеж, используется для сохранения данных банковской карты пользователя, сумма платежа вернется пользователю после отмены
          type: boolean
        return_id:
          title: Возвратить id платежа, не выполняя redirectToPay()
          type: boolean
      required:
        - system
        - sum
        - country
      title: Создание платежки и переход к оплате
      description: |-
        Возвращает id платежа, если указан параметр $return_id = true

        Производит редирект, если настроена форма оплаты на стороне платежной системы

        Возвращает информацию о платеже, если ожидается вывод формы оплаты на сайте

        При ошибке производит редирект на страницу с инофрмацией об ошибке
    Payments_2.Methods.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение списка платежей
    Models.Payments:
      properties:
        COUNT(*):
          nullable: true
        HAS_DOC():
          nullable: true
        id: {}
        external_id:
          nullable: true
        user_id:
          nullable: true
        system:
          nullable: true
        requisites_id:
          nullable: true
        data:
          nullable: true
        sum:
          nullable: true
        currency:
          nullable: true
        status:
          nullable: true
        recurrent_type:
          nullable: true
        tariff_id:
          nullable: true
        tariff_count_month:
          nullable: true
        date:
          nullable: true
        date_month:
          nullable: true
        date_finished:
          nullable: true
        date_month_finished:
          nullable: true
        fromBase64Data:
          nullable: true
    Qr_2.Types.TplN:
      type: integer
      enum:
        - 0
        - 1
        - 2
    Qr_2.Methods.Get:
      type: object
      properties:
        text:
          title: Кодируемый текст
          type: string
        tpl_n:
          title: Кодируемый текст
          description: |-
            - 0 - черно-белый
            - 1 - шашечки
            - 2 - группы с закруглениями
          allOf:
            - $ref: '#/components/schemas/Qr_2.Types.TplN'
        use_brand:
          title: Использовать ли брендированное лого
          type: boolean
        use_logo_colors:
          title: Использовать ли цвета из лого
          type: boolean
        color:
          title: Использовать указанный цвет, цвет задается массивом из 3 элементов [r, g, b]
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        point_size:
          title: Размер точек QR кода в пикселях
          default: 4
          type: integer
      required:
        - text
      title: Генерация QR кода по тексту
      description: Возвращает изображение в формате data:image/png;base64
    Recurring_2.Types.Type:
      type: string
      enum:
        - refill
        - domainRenew
      title: Тип рекуррентного платежа
    TV.API.Types.Url:
      type: string
      title: |-
        Краткий URL в punycode, не может содержать UTF-символы:
        - без схемы
        - без "www." в домене
        - без слешей на конце
        - без "<" и ">"
      description: |-
        Будет проивзедено автоматическое приведение к формату

        Разрешен ввод пустой строки, для удаления значения url
    Recurring_2.Methods.Del:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Recurring_2.Types.Type'
        target:
          title: Объект доменного платежа (в случае domainRenew - домен)
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Url'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - type
        - target
        - filters
      title: Удаление настроек автоопераций
    Recurring_2.Types.System:
      type: string
      enum:
        - card
        - invoice
      title: Платежная система рекуррентного платежа
    Recurring_2.Methods.Edit:
      type: object
      properties:
        system:
          allOf:
            - $ref: '#/components/schemas/Recurring_2.Types.System'
        type:
          allOf:
            - $ref: '#/components/schemas/Recurring_2.Types.Type'
        min_sum:
          title: Сумма, при достижении которой произойдет автоплатеж
          nullable: true
          type: integer
        refill_sum:
          title: Cумма автоплатежа
          nullable: true
          type: integer
        target:
          title: Объект доменного платежа (в случае domainRenew - домен)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Url'
        cardId:
          title: Id карты в системе Тинькофф
          nullable: true
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - system
        - type
        - filters
      title: Настройка рекуррентного платежа
    Tags_2.Types.Type:
      type: string
      enum:
        - tickets
        - projects
        - keywords
        - snippets
        - shortLinks
        - urls
      title: Тип тега, к каким объектам применяется
    Tags_2.Methods.Edit:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Tags_2.Types.Type'
        tags:
          title: |-
            Список тегов в формате:
            <code>
            {
               id:id,
               name:name,
               color_id:color_id
            }
            </code>
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        project_id:
          nullable: true
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - type
        - tags
        - filters
      title: Сохранение списка тегов
    Tags_2.Methods.Get:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Tags_2.Types.Type'
        project_id:
          nullable: true
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - type
        - fields
        - orders
        - filters
        - offset
      title: Получение списка тегов
    Urls_2.Types.Flag:
      type: integer
      enum:
        - -1
        - 0
        - 1
        - 2
      title: Флаг активности
    Tags_2.Types.TagId:
      type: string
      enum:
        - '1'
        - '2'
        - '3'
        - '4'
        - '5'
        - '6'
        - '7'
        - '8'
        - '9'
        - '10'
        - '11'
        - '12'
        - '13'
        - '14'
        - '15'
        - '16'
        - '17'
        - '18'
        - '19'
        - '20'
      title: id тега
    Tags_2.Types.TagsIds:
      type: array
      items:
        $ref: '#/components/schemas/Tags_2.Types.TagId'
      title: Список id тегов
      description: |-
        Тип массива: TagId[]

        @see Tags_2\Types\TagId
    project_id:
      title: ID проекта
      type: integer
    Urls_2.Methods.Add:
      type: object
      properties:
        url:
          title: URL соответствующий домену проекта
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Url'
        sitemap:
          title: |-
            Флаг активности в карте сайта
            - 1 - присутствовал в прошлых версиях карты сайта
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        audit:
          title: Флаг активности в аудите
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        indexing:
          title: Флаг активности в радаре
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        watcher:
          title: Флаг активности в индексации
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        tags:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Tags_2.Types.TagsIds'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - url
        - project_id
      title: Добавление url
    Models.Urls:
      properties:
        COUNT(*):
          nullable: true
        WATCHER_HTTP_CODES_HUNDREDS():
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
          example:
            need set qualifiers:
              - check_id
        id:
          type: integer
        url:
          type: string
          nullable: true
        project_id:
          type: integer
          nullable: true
        sitemap:
          nullable: true
        audit:
          nullable: true
        watcher:
          nullable: true
        indexing:
          nullable: true
        tags:
          nullable: true
        sitemap_lastmod:
          nullable: true
        sitemap_changefreq:
          nullable: true
        sitemap_priority:
          nullable: true
        indexing_data:
          type: integer
          nullable: true
          example:
            need set qualifiers:
              - date
              - searcher_key
        indexing_alert:
          type: integer
          nullable: true
          example:
            need set qualifiers:
              - date
              - searcher_key
        watcher_http_codes:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_http_codes_changed:
          type: integer
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_redirects:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_h1:
          type: string
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_h1_changed:
          type: integer
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_title:
          type: string
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_title_changed:
          type: integer
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_description:
          type: string
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_description_changed:
          type: integer
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_content:
          type: string
          nullable: true
          example:
            need set qualifiers:
              - check_id
        watcher_content_changed:
          type: integer
          nullable: true
          example:
            need set qualifiers:
              - check_id
    Urls_2.Methods.Edit:
      type: object
      properties:
        sitemap:
          title: |-
            Флаг активности в карте сайта
            - 1 - присутствовал в прошлых версиях карты сайта
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        audit:
          title: Флаг активности в аудите
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        indexing:
          title: Флаг активности в радаре
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        watcher:
          title: Флаг активности в индексации
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - filters
        - project_id
      title: Изменение urls
    Urls_2.Methods.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - fields
        - orders
        - filters
        - offset
        - project_id
      title: Получение списка urls проекта
    Annotations_2.Methods.My.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение всех своих примечаний по всем проектам и сервисам
    App_2.Methods.Actions.Get:
      type: object
      properties:
        email:
          title: Email пользователя
          type: string
        code:
          title: Код для генерации ссылки подтверждения
          type: string
        type_action:
          title: Тип подтверждения
          default: acceptAction
          nullable: true
          type: string
      required:
        - email
        - code
      title: Получение данных подтверждения
      description: |-
        Возвращает результат подтверждения в виде
        массива с сообщением (acceptAction),
        логической переменной (acceptEmail),
        null при неправильно введенном типе
    TV.API.Types.Lang:
      type: string
      enum:
        - ru
        - en
    App_2.Methods.Privacy.Get:
      type: object
      properties:
        lang:
          title: Язык страницы
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Lang'
      required: []
      title: Получение текста политики конфиденциальности
    Controller_2.Objects.Location:
      type: object
      properties: {}
      required: []
    Controller_2.Objects.OpenGraph:
      type: object
      properties: {}
      required: []
    Controller_2.Objects.Page.Options:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        keywords:
          type: string
        noindex:
          type: boolean
        canonical:
          type: string
        alternates:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
      required:
        - title
        - description
        - keywords
        - noindex
        - canonical
        - alternates
    Controller_2.Objects.Page.Article:
      type: object
      properties:
        type:
          default: module
          type: string
        duration:
          nullable: true
          type: string
        word_count:
          nullable: true
          type: string
        htmlRaw:
          type: string
        url:
          type: string
        parent_url:
          type: string
        publish_time:
          nullable: true
          type: string
        h1:
          type: string
        description:
          nullable: true
          type: string
        menu_name:
          nullable: true
          type: string
        intro:
          nullable: true
          type: string
        html:
          type: string
        image:
          type: string
        tags:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        count_views:
          type: integer
        count_unique_views:
          nullable: true
          type: integer
        count_likes:
          type: integer
        count_comments:
          nullable: true
          type: integer
        theme:
          type: string
        noindex:
          type: boolean
        quiz_id:
          type: string
        state:
          default: ACTIVE
          type: string
        rubric_name:
          type: string
        user_id:
          type: integer
        user_name:
          nullable: true
          type: string
        user_description:
          type: string
        user_avatar:
          type: string
        view:
          type: integer
        like:
          type: integer
        bookmark:
          type: string
        bookmark_author:
          type: string
        author_alias:
          type: string
        user_id_2:
          nullable: true
          type: integer
        user_id_3:
          nullable: true
          type: integer
      required:
        - type
        - htmlRaw
        - url
        - parent_url
        - h1
        - html
        - image
        - tags
        - count_views
        - count_likes
        - theme
        - noindex
        - quiz_id
        - state
        - rubric_name
        - user_id
        - user_description
        - user_avatar
        - view
        - like
        - bookmark
        - bookmark_author
        - author_alias
    Tpl.Core.SecondMenu:
      type: object
      properties: {}
      required: []
    Tpl.Core.LeftMenu:
      type: object
      properties:
        items:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
      required:
        - items
    TV.Core.Sites.Site:
      type: object
      properties:
        host:
          title: Базовый домен сайта
          type: string
        config:
          title: '@type class-string<TV\Types\Config\Site> config - Интерфейс конфигурации сайта, пример: `Config\Sites\{{ SiteName }}\ConfigSite::class`'
          type: string
        configTPA:
          title: Настройки интеграций
          description: |-
            @type array{
                yandex_client_id:string,
                yandex_client_id_auth:string,
                google_client_id:string,
                google_client_secret:string,
                sms_client:string,
                selectel_api_key:string,
                vk_pixel_id:string,
                vk_group_id:string,
                vk_service_token:string,
                vk_group_token:string,
                telegram_token:string,
                telegram_token_apometr:string,
                tinkoff_business_token:string,
                tinkoff_openapi_token:string,
                tinkoff_security_key:string,
                tinkoff_ap_cert_pass:string,
                tinkoff_partner_key:string,
                tinkoff_partner_secret:string,
                botan_token_TopvisorBot:string,
                botan_token_ApometrBot:string,
                diadoc:string,
                fbAppId:string,
                fbTokens:array,
                twTokens:array
            }
          type: array
          items:
            oneOf:
              - type: string
              - type: number
      required:
        - host
        - config
        - configTPA
    Controller_2.Objects.TplEngine:
      type: object
      properties: {}
      required: []
      title: Движок работы с шаблонизатором
      description: Является неотъемлемой частью Page
    Controller_2.Objects.Page:
      type: object
      properties:
        location:
          allOf:
            - $ref: '#/components/schemas/Controller_2.Objects.Location'
        openGraph:
          allOf:
            - $ref: '#/components/schemas/Controller_2.Objects.OpenGraph'
        options:
          allOf:
            - $ref: '#/components/schemas/Controller_2.Objects.Page.Options'
        article:
          allOf:
            - $ref: '#/components/schemas/Controller_2.Objects.Page.Article'
        secondMenu:
          allOf:
            - $ref: '#/components/schemas/Tpl.Core.SecondMenu'
        leftMenu:
          allOf:
            - $ref: '#/components/schemas/Tpl.Core.LeftMenu'
        params:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        site:
          allOf:
            - $ref: '#/components/schemas/TV.Core.Sites.Site'
        subdomain:
          type: string
        langContext:
          type: string
        langUrl:
          type: string
        modUrl:
          type: string
        mod:
          type: string
        subMod:
          type: string
        theme:
          default: regular
          type: string
        jsonLDs:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        htmlAttributes:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        logo:
          type: string
        redirect:
          type: string
        redirectCode:
          default: 302
          type: integer
        tplEngine:
          allOf:
            - $ref: '#/components/schemas/Controller_2.Objects.TplEngine'
        tplStaticPath:
          type: string
        tplStatic:
          type: string
        tplStaticRendered:
          type: string
        tplPath:
          default: pages/content.php
          type: string
        tplRendered:
          type: string
        tplSiteRendered:
          type: string
        data:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        rightsLabels:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        isFullSize:
          type: boolean
        showFooter:
          type: boolean
        isAdaptive:
          type: boolean
        additionalHeadCode:
          type: string
        v:
          type: string
        vJS:
          type: string
      required:
        - location
        - openGraph
        - options
        - article
        - secondMenu
        - leftMenu
        - params
        - site
        - subdomain
        - langContext
        - langUrl
        - modUrl
        - mod
        - subMod
        - theme
        - jsonLDs
        - htmlAttributes
        - logo
        - redirect
        - redirectCode
        - tplEngine
        - tplStaticPath
        - tplStatic
        - tplStaticRendered
        - tplPath
        - tplRendered
        - tplSiteRendered
        - data
        - rightsLabels
        - isFullSize
        - showFooter
        - isAdaptive
        - additionalHeadCode
        - v
        - vJS
    Audit_2.Types.Type:
      type: string
      enum:
        - audit
        - indexing
        - sitemap
        - watcher
      title: Модуль аудита
    Audit_2.Methods.CountUrls.Get:
      type: object
      properties:
        audit_type:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Type'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - audit_type
        - project_id
      title: Получение количества настроенных URL
    Audit_2.Types.Indexing.SearcherKey:
      type: string
      enum:
        - '0'
        - '1'
        - '5'
        - '6'
      title: Id поисковой системы для индексации
    Audit_2.Types.Indexing.SearcherKeys:
      type: array
      items:
        $ref: '#/components/schemas/Audit_2.Types.Indexing.SearcherKey'
      title: Id поисковых систем для индексации
    TV.API.Types.Date:
      type: string
      title: Дата
      example: '2000-01-01'
    Audit_2.Types.Indexing.Export.TypeRange:
      type: integer
      enum:
        - 0
        - 2
        - 3
        - 4
        - 7
        - 100
      title: Тип диапазона индексации
    Audit_2.Methods.Indexing.Get:
      type: object
      properties:
        searchers_keys:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.SearcherKeys'
        indexing_fields:
          title: Список полей индексации, которые необъодимо получить
          description: См. поля indexing_* в объекте Urls
          default:
            - data
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        show_headers:
          title: Вернуть ли заголовки отчета
          type: boolean
        show_counts_indexing:
          title: Вернуть ли суммарное количество страниц в индексе по URL
          type: boolean
        show_exists_dates:
          title: Вернуть ли даты проверок
          type: boolean
        filter_by_alert:
          title: Фильтр по изменениям в указанной ПС в указанную дату
          description: 'Формат записи: `{{ date }}:{{ searcher_key }}`'
          type: string
        dates:
          title: Произвольные даты без использования диапазона
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        date1:
          title: Дата начала диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        date2:
          title: Дата окончания диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        periodDays:
          title: Период в днях
          default: 7
          type: integer
        type_range:
          title: Тип диапазона дат
          default: 7
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.Export.TypeRange'
        count_dates:
          title: Количество дней в диапазоне
          default: 60
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - searchers_keys
        - fields
        - orders
        - filters
        - offset
        - project_id
      title: Получение отчета по проверке индексации
      description: Необходимо указать либо date1 и date2, либо dates (вместе указывать нельзя)
    Audit_2.Types.Settings.WatcherType:
      type: string
      enum:
        - title
        - description
        - h1
        - content
      title: Тип отчета радара
    Audit_2.Types.Settings.WatcherTypes:
      type: array
      items:
        $ref: '#/components/schemas/Audit_2.Types.Settings.WatcherType'
      title: Типы отчетов радара
    TV.API.Types.RegExp:
      type: string
      title: Регулярное выражение
      description: |
        Пустое значение разрешено

        Управляющие символы "/" в начале и в конце строки будут удалены
      example: /^year_(\d\d\d\d)$/
    Audit_2.Types.Settings.ServerLocation:
      type: string
      enum:
        - EASTERN_EUROPE
        - WESTERN_EUROPE
      title: Местоположение сервера для выполнения задач инструментов аудита
    Audit_2.Methods.Settings.Edit:
      type: object
      properties:
        audit_user_agent:
          title: User-Agent (аудит)
          description: |-
            Можно указать id устройства

            @see Audit_2\Types\Settings\Device
          nullable: true
          type: string
        audit_use_cookie:
          title: Сохранять куки между запросами (аудит)
          nullable: true
          type: boolean
        audit_scan_links:
          title: Проверять ссылки (аудит)
          nullable: true
          type: boolean
        audit_scan_images:
          title: Проверять изображения (аудит)
          nullable: true
          type: boolean
        audit_scan_js:
          title: Проверять JS (аудит)
          nullable: true
          type: boolean
        audit_scan_css:
          title: Проверять css (аудит)
          nullable: true
          type: boolean
        audit_api_key:
          title: Ключ api для https://developers.google.com/speed/docs/insights/v5/get-started (аудит)
          nullable: true
          type: string
        audit_page_delay:
          title: Паузы между проверками страниц сайта (аудит)
          nullable: true
          type: number
        audit_resource_delay:
          title: Паузы между првоерками ресурсов страниц сайта (аудит)
          nullable: true
          type: number
        audit_cookies:
          title: Дополнитлеьные Cookies (аудит)
          nullable: true
          type: string
        audit_auto_collect_pages:
          title: Использовать ли при запуске аудита автоматический сбор URL (аудит)
          nullable: true
          type: boolean
        audit_auto_collect_pages_limit:
          title: Лимит страниц при автоматическом проходе по сайту (аудит)
          nullable: true
          type: integer
        audit_auto_collect_pages_start_url:
          title: Страница, с которой начинается автоматический сбор URL (аудит)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Url'
        indexing_searchers_keys:
          title: Поисковые системы (индексация)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.SearcherKeys'
        watcher_user_agent:
          title: User-Agent (радар)
          description: |-
            Можно указать id устройства

            @see Audit_2\Types\Settings\Device
          nullable: true
          type: string
        watcher_max_redirects:
          nullable: true
          type: integer
        watcher_types:
          title: Типы отчетов, которые необходимо построить (радар)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Settings.WatcherTypes'
        watcher_regexp:
          title: Регулярное выражение для сбора контента (радар)
          description: |-
            Если не указано, будут ипользоваться теги разметки

            @see https://topvisor.com/support/watcher/settings/#tags
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.RegExp'
        watcher_ignore_js:
          title: Вырезать из кода страницы javascript (радар)
          nullable: true
          type: boolean
        watcher_strip_tags_from_result:
          title: Вырезать из результатов html-тэги (радар)
          nullable: true
          type: boolean
        watcher_cookies:
          title: Дополнитлеьные cookies (радар)
          nullable: true
          type: string
        server_location:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Settings.ServerLocation'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - project_id
      title: Применение наастроек Анализа сайта
    Audit_2.Types.Settings.FieldName:
      type: string
      enum:
        - audit_user_agent
        - audit_use_cookie
        - audit_cookies
        - audit_scan_links
        - audit_scan_images
        - audit_scan_js
        - audit_scan_css
        - audit_api_key
        - audit_page_delay
        - audit_resource_delay
        - audit_auto_collect_pages
        - audit_auto_collect_pages_limit
        - audit_auto_collect_pages_start_url
        - indexing_searchers_keys
        - watcher_user_agent
        - watcher_cookies
        - watcher_max_redirects
        - watcher_types
        - watcher_regexp
        - watcher_ignore_js
        - watcher_strip_tags_from_result
        - server_location
      title: Имя настройки для интсрумента аудита
    Audit_2.Types.Settings.FieldNames:
      type: array
      items:
        $ref: '#/components/schemas/Audit_2.Types.Settings.FieldName'
      title: Имена настроек для инструментов аудита
    Audit_2.Methods.Settings.Get:
      type: object
      properties:
        fields:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Settings.FieldNames'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - fields
        - project_id
      title: Получение настроек аудита
    Audit_2.Types.Watcher.TypeRange:
      type: integer
      enum:
        - 0
        - 2
        - 3
        - 4
        - 7
        - 100
      title: Тип диапазона радара
    Audit_2.Types.Watcher.Type:
      type: string
      enum:
        - http_codes
        - redirects
        - h1
        - title
        - description
        - content
      title: Тип проверки радара
    Audit_2.Types.Watcher.ShowDiff:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
      title: Добавить в результат различия данных
    Audit_2.Methods.Watcher.Get:
      type: object
      properties:
        checks_ids:
          title: ID проверок в произвольном порядке
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        check_id1:
          title: ID проверки начала диапазона
          nullable: true
          type: integer
        check_id2:
          title: ID проверки конца диапазона
          nullable: true
          type: integer
        type_range:
          default: 7
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Watcher.TypeRange'
        count_ids:
          title: Максимальное число возвращаемых проверок (не более 60)
          default: 60
          type: integer
        watcher_type:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Watcher.Type'
        watcher_fields:
          title: Выбор столбцов данных с результатами проверки
          default:
            - http_codes
            - redirects
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        show_headers:
          title: Добавить в результат заголовки отчета
          type: boolean
        show_diff:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Watcher.ShowDiff'
        show_counts_watcher:
          title: Добавить в результат количество проверок
          type: boolean
        project_id:
          $ref: '#/components/schemas/project_id'
        fields:
          $ref: '#/components/schemas/fields'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        orders:
          $ref: '#/components/schemas/orders'
        offset:
          $ref: '#/components/schemas/offset'
      required:
        - watcher_type
        - project_id
      title: Получение результатов проверок радара
      description: |-
        Отчет генерируется на основе объектов urls

        Необходимо указать либо check_id1 и check_id2, либо checks_ids (вместе указывать нельзя)
    Bank_2.Methods.Bank.Get:
      type: object
      properties:
        bik:
          title: БИК банка
          type: string
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение данных банка по БИК
    Bank_2.Methods.History.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение истории транзакций
    Models.BalanceHistory:
      properties:
        COUNT(*):
          nullable: true
        TOTAL():
          nullable: true
        currency:
          nullable: true
        plus:
          nullable: true
        sum_group:
          nullable: true
        user_id:
          type: integer
          nullable: true
        by_user_id:
          nullable: true
        sum:
          nullable: true
        type:
          nullable: true
        info:
          nullable: true
        target:
          nullable: true
        target_id:
          type: integer
          nullable: true
        date:
          nullable: true
        project_name:
          nullable: true
        project_tags:
          nullable: true
        project_folder_id:
          nullable: true
        by_user_email:
          nullable: true
    Bank_2.Methods.Info.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Предоставление инфомации по счету
    Bank_2.Types.Requisites.Type:
      type: string
      enum:
        - contract
        - offer
        - partnerOffer
        - fl223
        - domainsContract
        - domainsOffer
        - domainsPersonContract
        - domainsPersonOffer
      title: Тип реквизитов
    Bank_2.Methods.Requisites.Add:
      type: object
      properties:
        data:
          title: см. объект Bank_2\Objects\Requisites
          type: string
        type:
          allOf:
            - $ref: '#/components/schemas/Bank_2.Types.Requisites.Type'
        tariff_id:
          title: Id тарифа, для договоров, ассоциируемых с тарифом (например fl223)
          type: integer
      required:
        - data
        - type
      title: Добавиление реквизитов
    Bank_2.Methods.Requisites.Del:
      type: object
      properties:
        id:
          title: Id реквезитов
          type: string
      required:
        - id
      title: Закрытие договора (оферту закрыть невозможно)
    Bank_2.Methods.Requisites.Edit:
      type: object
      properties:
        id:
          title: Id реквезитов
          type: string
        data:
          title: Данные реквезитов
          description: см. объект Bank_2\Objects\Requisites
          type: string
      required:
        - id
        - data
      title: Изменение реквизитов
    Bank_2.Methods.Requisites.Get:
      type: object
      properties:
        include_edc_data:
          title: Добавить информацию о доступных контрагентах организации для ЭДО
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение списка договоров
    Models.Requisites:
      properties:
        LABEL():
          nullable: true
        id: {}
        user_id:
          nullable: true
        country:
          nullable: true
        contract_date:
          nullable: true
        contract_type:
          nullable: true
        contract_balance:
          nullable: true
        contract_tariff_id:
          nullable: true
        data:
          nullable: true
        signed:
          nullable: true
        deleted:
          nullable: true
        edc_connected:
          nullable: true
        fromBase64Data:
          nullable: true
    Bank_2.Methods.Ur.Get:
      type: object
      properties:
        inn:
          title: ИНН юридического лица
          type: string
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - inn
        - fields
        - orders
        - filters
        - offset
      title: Получение данных юридического лица по ИНН
    Comments_2.Methods.Like.Edit:
      type: object
      properties:
        id:
          title: Id комментария
          type: integer
        like:
          title: |-
            Установка лайка
            - 0: снять лайк
            - 1: поставить лайк
          type: boolean
      required:
        - id
        - like
      title: Редактирование статуса лайка для комментария
      description: Возвращает результат редактирования статуса лайка
    Content_2.Methods.Authors.Edit:
      type: object
      properties:
        alias:
          title: Имя для url страницы автора
          description: Только латинские буквы, цифры и символ дефиса
          nullable: true
          type: string
        promo_text:
          title: Промо текст
          nullable: true
          type: string
        promo_label:
          title: Текс для промо кнопки
          nullable: true
          type: string
        promo_link:
          title: Ссылка для промо кнопки
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Url'
        show_in_author_list:
          title: Отображать ли автора в списке авторов
          nullable: true
          type: boolean
      required: []
      title: Изменить настройки автора
    Content_2.Methods.Authors.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение данных об авторе
    Models.Content.Authors:
      properties:
        IS_ACTIVE():
          type: integer
          nullable: true
        user_id:
          type: integer
          nullable: true
        alias:
          type: string
          nullable: true
        promo_text:
          type: string
          nullable: true
        promo_label:
          type: string
          nullable: true
        promo_link:
          type: string
          nullable: true
        count_pages:
          type: integer
          nullable: true
        count_views:
          type: integer
          nullable: true
        count_unique_views:
          type: string
          nullable: true
        count_likes:
          type: integer
          nullable: true
        show_in_author_list:
          type: integer
          nullable: true
        user_site:
          type: string
          nullable: true
        user_name:
          type: string
          nullable: true
        user_avatar:
          type: string
          nullable: true
        user_description:
          type: string
          nullable: true
        bookmark_author:
          type: integer
          nullable: true
    Cron_2.Types.Day:
      type: string
      enum:
        - '1'
        - '2'
        - '3'
        - '4'
        - '5'
        - '6'
        - '7'
      title: День недели, в который должен производиться запуск cron
    Cron_2.Types.Days:
      type: array
      items:
        $ref: '#/components/schemas/Cron_2.Types.Day'
      title: Дни недели, в которые должен производиться запуск cron
    Cron_2.Types.Hour:
      type: string
      title: Час в который должен производиться запуск cron
      description: |-
        Пустое значение зарезервированно для запуска cron каждый час

        Значение должно находиться в диапазоне от 0 до 23 включительно
    Cron_2.Types.Minute:
      type: string
      title: Минута или интервал в минутах в который должен производиться запуск cron
      description: |-
        Значение должно находится в диапазоне от 0 до 59 включительно

        Если значение является интервалом, в начало ставится символ '*'
    command:
      title: Имя команды cron
      type: string
    Cron_2.Methods.Commands.Add:
      type: object
      properties:
        description:
          title: Описание задачи
          type: string
        days:
          allOf:
            - $ref: '#/components/schemas/Cron_2.Types.Days'
        hh:
          allOf:
            - $ref: '#/components/schemas/Cron_2.Types.Hour'
        i:
          allOf:
            - $ref: '#/components/schemas/Cron_2.Types.Minute'
        'on':
          title: Статус активности задачи
          type: boolean
        command:
          $ref: '#/components/schemas/command'
      required:
        - description
        - days
        - hh
        - i
        - command
      title: Добавление задачи cron
    Models.CronCommands:
      properties:
        SERVICE():
          nullable: true
        command:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        days:
          type: string
          nullable: true
        hh:
          type: string
          nullable: true
        i:
          type: string
          nullable: true
        'on':
          type: integer
          nullable: true
        task_create_time:
          nullable: true
        task_start_time:
          nullable: true
        task_status:
          type: string
          nullable: true
    Cron_2.Methods.Commands.Del:
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        command:
          $ref: '#/components/schemas/command'
      required:
        - filters
        - command
      title: Удаление задачи cron
    Cron_2.Methods.Commands.Edit:
      type: object
      properties:
        description:
          title: Описание задачи
          nullable: true
          type: string
        days:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Cron_2.Types.Days'
        hh:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Cron_2.Types.Hour'
        i:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Cron_2.Types.Minute'
        'on':
          title: Статус активности задачи
          nullable: true
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        command:
          $ref: '#/components/schemas/command'
      required:
        - filters
        - command
      title: Изменение задачи cron
    Cron_2.Methods.Commands.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение задач cron
    Cron_2.Methods.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение списка имен сервисов, в которых есть команды cron
    TV.API.Types.IntArray:
      type: array
      items:
        type: integer
      title: 'Тип массива: int'
      description: |-
        Принимает: Любые целые числа и числа в строках

        Хранит: int
    TV.API.Types.BoolArray:
      type: array
      items:
        type: boolean
      title: 'Тип массива: boolean'
      description: |-
        Принимает: 0|1|false|true

        Хранит: false|true
    Example_2.Types.Number:
      type: integer
      enum:
        - 1
        - 2
        - 3
    Example_2.Types.EnumNumberArray:
      type: array
      items:
        $ref: '#/components/schemas/Example_2.Types.Number'
      title: 'Тип: enum'
      description: |-
        Принимает: 0|1|false|true

        Хранит: false|true
    Example_2.Methods.Array.Get:
      type: object
      properties:
        ints:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        strings:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.StringArray'
        booleans:
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.BoolArray'
        enum_numbers:
          allOf:
            - $ref: '#/components/schemas/Example_2.Types.EnumNumberArray'
      required:
        - ints
        - strings
        - booleans
        - enum_numbers
      title: Метод с примерами параметров типа Enum
    Example_2.Methods.Custom.Get:
      type: object
      properties:
        format:
          title: Формат даты
          description: |-
            Не обязательный параметр строкового типа со значением по умолчанию

            Можно не указывать, но в exec() он не может быть пустым
          default: Y-m-d H:i:s
          type: string
      required: []
      title: Получение текущего времени
    Example_2.Types.Letter:
      type: string
      enum:
        - a
        - b
        - c
    Example_2.Methods.Enum.Get:
      type: object
      properties:
        number:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Example_2.Types.Number'
        number2:
          allOf:
            - $ref: '#/components/schemas/Example_2.Types.Number'
        letter:
          allOf:
            - $ref: '#/components/schemas/Example_2.Types.Letter'
      required:
        - number2
        - letter
      title: Метод с примерами параметров типа Enum
    Example_2.Methods.Projects.Get:
      type: object
      properties:
        name:
          title: Имя проекта
          description: |-
            Используется для фильтрации по имени проекта, см. self::exec()

            Не обязательный параметр метода строкового типа
          nullable: true
          type: string
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение списка проектов
    Models.Projects:
      properties:
        COUNT(*):
          nullable: true
        IS_YOUTUBE():
          nullable: true
        IS_APP_STORE():
          nullable: true
        IS_GOOGLE_PLAY():
          nullable: true
        GEN_SEARCH_STRING():
          nullable: true
        id: {}
        user_id:
          nullable: true
        name:
          type: string
          nullable: true
        url:
          nullable: true
        date:
          nullable: true
        last_view:
          nullable: true
        folder_id:
          type: integer
          nullable: true
        folder_name:
          nullable: true
        site:
          nullable: true
        update:
          nullable: true
        status_positions:
          type: string
          nullable: true
        positions_time:
          nullable: true
        positions_date:
          nullable: true
        positions_percent:
          nullable: true
        status_positions_time:
          nullable: true
        status_positions_date:
          nullable: true
        status_positions_percent:
          nullable: true
        status_positions_by_keywords:
          nullable: true
        status_volumes:
          nullable: true
        status_claster:
          nullable: true
        status_audit:
          nullable: true
        status_audit_time:
          nullable: true
        status_audit_percent:
          nullable: true
        status_watcher:
          nullable: true
        status_watcher_percent:
          nullable: true
        status_indexing:
          nullable: true
        status_indexing_percent:
          nullable: true
        status_sitemap:
          nullable: true
        status_sitemap_percent:
          nullable: true
        status_urlsUpdater:
          nullable: true
        'on':
          nullable: true
        subdomains:
          nullable: true
        filter:
          nullable: true
        auto_correct:
          nullable: true
        with_snippets:
          nullable: true
        do_snapshots:
          nullable: true
        do_snapshots_with_snippets:
          nullable: true
        report_last_time:
          nullable: true
        common_traffic:
          nullable: true
        guest_link_right:
          nullable: true
        count_keywords:
          nullable: true
        right:
          nullable: true
        ord:
          nullable: true
        favorite:
          nullable: true
        tags:
          nullable: true
        user_email:
          nullable: true
        user_currency:
          nullable: true
        broker_count_campaigns:
          nullable: true
        broker_count_banners:
          nullable: true
        broker_count_banners_off:
          nullable: true
        domain_expire:
          nullable: true
        ssl_expire:
          nullable: true
        competitor:
          nullable: true
        competitor_ord:
          nullable: true
        pos_summary_up:
          nullable: true
        pos_summary_stay:
          nullable: true
        pos_summary_down:
          nullable: true
        pos_summary_avg:
          nullable: true
        pos_summary_visibility:
          nullable: true
    OpenAPI_2.Methods.Download.Get:
      type: object
      properties:
        format:
          title: Формат схемы Open API, json или yaml
          default: json
          type: string
      required: []
      title: Создать Open API схемы и скачать в zip
      description: |-
        В результате вернет zip файл в потоке вывода

        @see https://editor.swagger.io/ Редактор Open API
    Payments_2.Methods.Companies.Get:
      type: object
      properties: {}
      required: []
      title: Получение компании пользователя, через которых, были совершены платежи
    Payments_2.Methods.ContractSign.Edit:
      type: object
      properties:
        requisites_id:
          title: Номер договора/оферты для платежа
          type: string
        signed:
          title: Флаг обозначающий подписан ли контракт
          type: boolean
      required:
        - requisites_id
        - signed
      title: Подписание контракта (только для админов)
    Payments_2.Methods.NextRequisitesId.Edit:
      type: object
      properties:
        next_requisites_id:
          title: ID следующего запроса
          type: string
      required:
        - next_requisites_id
      title: Изменение платежных реквизитов тарифа
    Payments_2.Methods.UrTinkoffCreateApplication.Add:
      type: object
      properties: {}
      required: []
      title: Отправка заявки на подключение Тинькофф Бизнес
    Payments_2.Methods.ValidateMerchantCardAP.Get:
      type: object
      properties:
        validation_url:
          title: URL для запроса к Apple Pay
          type: string
      required:
        - validation_url
      title: Валидация домена для подтверждения оплаты Apple Pay (system = card_ap)
    Projects_2.Methods.Folders.Add:
      type: object
      properties:
        name:
          title: Имя папки
          type: string
      required:
        - name
      title: Добавление папки
    Projects_2.Methods.Folders.Del:
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Удаление папок
    Models.Projects.Folders:
      properties:
        id: {}
        user_id:
          nullable: true
        name:
          nullable: true
        order:
          nullable: true
    Projects_2.Methods.Folders.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение списка папок
    Recurring_2.Methods.RecurringCard.Del:
      type: object
      properties:
        card_id:
          title: Id карты в системе Тинькофф
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - card_id
        - filters
      title: Удалить привязанную карту (system = card)
    Recurring_2.Methods.RecurringCard.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение привязанных карт пользователя
    Tickets_2.Methods.Messages.Add:
      type: object
      properties:
        ticket_id:
          title: Id тикета
          type: integer
        text:
          title: Текст сообщения
          type: string
        is_silent:
          title: Не проводить рассылку уведомлений
          type: boolean
      required:
        - ticket_id
        - text
      title: Добавление сообщения к тикиту
    Tickets_2.Types.Tickets.Type:
      type: string
      enum:
        - system
        - other
        - email
        - ios
        - vk
        - chrome
        - twitter
        - facebook
        - telegram
        - android
        - guest
      title: Откуда поступил тикет
    TV.API.Types.Email:
      type: string
      title: E-mail
      example: name@example.com
    Tickets_2.Methods.Tickets.Add:
      type: object
      properties:
        text:
          title: Текст тикета
          type: string
        type:
          default: system
          allOf:
            - $ref: '#/components/schemas/Tickets_2.Types.Tickets.Type'
        lang:
          title: Язык тикета, нужен для подгрузки правильного языка в ответных письмах через почту
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Lang'
        user_data:
          title: Данные среды пользователя
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        resource:
          title: URL страницы, с которой отправлен тикет
          description: Не используется, если указан user_data
          nullable: true
          type: string
        is_silent:
          title: Не проводить рассылку уведомлений
          type: boolean
        email:
          title: Необходим только для незарегистрированных пользователей
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Email'
        social_user_id:
          title: Id пользователя внутри социальной сети, из которой был отправлен тикет
          description: Может быть в любом виде
          type: string
        secret:
          title: Данные для авторизации в сервисе-конкуренте для переноса проектов
          description: Недокументированный параметр
          nullable: true
          type: string
        task_id:
          title: Номер задачи redmine, связанной с тикетом
          description: Недокументированный параметр
          type: integer
      required:
        - text
      title: Создание тикета
    Tickets_2.Methods.Tickets.Edit:
      type: object
      properties:
        status:
          title: Флаг того, что тикет закрыт
          nullable: true
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Редактирование тикета
    Tickets_2.Methods.Tickets.Get:
      type: object
      properties:
        fields_messages:
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        show_messages_users:
          title: Добавить в результат данные пользователей, написавших сообщения в тикеты
          type: boolean
        show_writings:
          title: Добавить в результат данные о том, что пишет собеседник
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение списка тикетов с сообщениями
    Models.Tickets:
      properties:
        REQUISITES():
          nullable: true
        LAST_MESSAGE_TEXT():
          nullable: true
        LAST_MESSAGE_USER_ID():
          nullable: true
        READED(0):
          nullable: true
        READED(1):
          nullable: true
        id: {}
        user_id:
          nullable: true
        social_user_id:
          nullable: true
        type:
          nullable: true
        text:
          nullable: true
        create:
          nullable: true
        time:
          nullable: true
        status:
          nullable: true
        lang:
          nullable: true
        email:
          nullable: true
        user_data:
          nullable: true
        manager_id:
          nullable: true
        owner_readed:
          nullable: true
        answerer_readed:
          nullable: true
        admin_writing:
          nullable: true
        task_id:
          nullable: true
        tags:
          nullable: true
        rate:
          nullable: true
        rate_comment:
          nullable: true
        rate_time:
          nullable: true
        admin_comment:
          nullable: true
        VS_USER_IS_ONLINE():
          nullable: true
        vs_user_name:
          nullable: true
        vs_user_email:
          nullable: true
        vs_user_avatar:
          nullable: true
        vs_user_lastactive:
          nullable: true
        social_nickname:
          nullable: true
        social_network:
          nullable: true
        social_last_message_time:
          nullable: true
        social_name:
          nullable: true
        social_type:
          nullable: true
        social_post_id:
          nullable: true
        social_reply_to_id:
          nullable: true
        message_id:
          nullable: true
        message_user_id:
          nullable: true
        message_text:
          nullable: true
        message_data:
          nullable: true
        message_files:
          nullable: true
        message_time:
          nullable: true
        message_noticed:
          nullable: true
    Urls_2.Types.Export.Output:
      type: string
      enum:
        - csv
        - csvUTF8s
        - xml
      title: Формат экспорта urls
    Urls_2.Methods.Export.Get:
      type: object
      properties:
        output:
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Export.Output'
        show_fields_names:
          title: Вывести fieldName в заголовках столбцов (для CSV)
          type: boolean
        show_fields_labels:
          title: Вывести fieldLabel в заголовках столбцов (для CSV)
          type: boolean
        forClipboard:
          title: Вернуть данные в формате для копироваиня в буфер обмена
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - output
        - fields
        - orders
        - filters
        - offset
        - project_id
      title: Экспорт urls в определенном формате
    TV.API.Types.UrlArray:
      type: array
      items:
        $ref: '#/components/schemas/TV.API.Types.Url'
      title: 'Тип массива: Url[]'
      description: '@see Url'
    Urls_2.Methods.Import.Add:
      type: object
      properties:
        urls:
          title: Список URL соответствующих домену проекта, допускается формат CSV
          description: |-
            Можно передать в виде файла с именем urls, допускаются форматы CSV и XML (допустимы сжатые XML в .gz)

            Нельзя передавать одновременно в виде массива и в виде файла или использовать совместно с link_sitemap_xml
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.UrlArray'
        link_sitemap_xml:
          title: Файл с содержимым для импорта, допускается формат XML (допустимы сжатые XML в .gz)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Url'
        tags:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Tags_2.Types.TagsIds'
        reset:
          title: Очистить список URL перед импортом
          type: boolean
        setActiveByRegexpByType:
          title: Недокументириуемый параметр
          description: set(Audit_2\Types\Type => regexp)
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        sitemap:
          title: |-
            Флаг активности в карте сайта
            - 1 - присутствовал в прошлых версиях карты сайта
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        audit:
          title: Флаг активности в аудите
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        indexing:
          title: Флаг активности в радаре
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        watcher:
          title: Флаг активности в индексации
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Flag'
        debug:
          nullable: true
          type: boolean
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - project_id
      title: Импортирование urls
      description: |-
        Доступные поля для импорта:
        - url
        - sitemap
        - audit
        - indexing
        - watcher
        - tags
    Urls_2.Types.Tags.Action:
      type: string
      enum:
        - set
        - add
        - remove
      title: Способ установки тегов
    Urls_2.Methods.Tags.Edit:
      type: object
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/Tags_2.Types.TagsIds'
        action:
          allOf:
            - $ref: '#/components/schemas/Urls_2.Types.Tags.Action'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - tags
        - action
        - filters
        - project_id
      title: Изменение тегов
    Admin_2.Methods.Actions.Call.Get:
      type: object
      properties:
        action:
          title: Действие
          nullable: true
          type: string
        test:
          title: Является ли тестом
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - test
        - fields
        - orders
        - filters
        - offset
      title: Получение результата вызова actions-метода
    Admin_2.Methods.Users.Promocodes.Add:
      type: object
      properties:
        rank_id:
          type: integer
        single_code:
          title: single_code - многоразовый промокод
          nullable: true
          type: string
        codes:
          title: Список многоразовых промокодов
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
      required:
        - rank_id
      title: Добавить промокоды к достижению
    Models.Users.Verif:
      properties:
        email:
          nullable: true
        code:
          nullable: true
        action:
          nullable: true
        params:
          nullable: true
        data:
          nullable: true
        date:
          nullable: true
    Admin_2.Methods.Users.Promocodes.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получить промокоды
      description: |-
        В params хранится строка в формате:
        - {{ rank_id }}
        - {{ rank_id }},single_code - для многоразового кода
    Admin_2.Types.Users.Ranks.Category:
      type: string
      enum:
        - ''
        - journal
    Admin_2.Methods.Users.Ranks.Add:
      type: object
      properties:
        name_id:
          nullable: true
          type: string
        category:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Users.Ranks.Category'
        name_ru:
          nullable: true
          type: string
        name_en:
          nullable: true
          type: string
        descr_ru:
          nullable: true
          type: string
        descr_en:
          nullable: true
          type: string
        descr_how_to_use_ru:
          nullable: true
          type: string
        descr_how_to_use_en:
          nullable: true
          type: string
        bonus_RUB:
          nullable: true
          type: integer
        bonus_USD:
          nullable: true
          type: integer
        cashback_expenses:
          nullable: true
          type: integer
        cashback_first_payment:
          nullable: true
          type: integer
        discount:
          nullable: true
          type: integer
        referrer_id:
          nullable: true
          type: integer
        from_date:
          nullable: true
          type: string
        to_date:
          nullable: true
          type: string
        max_count_usage:
          nullable: true
          type: integer
        currency:
          nullable: true
          type: string
        only_new_users:
          nullable: true
          type: boolean
        color:
          nullable: true
          type: string
        always_visible:
          nullable: true
          type: boolean
      required: []
      title: Добавить достижение
    Models.Admin.Users.Ranks:
      properties:
        COUNT_CODES():
          nullable: true
        id: {}
        name_id:
          nullable: true
        category:
          nullable: true
        name:
          nullable: true
        name_ru:
          nullable: true
        name_en:
          nullable: true
        descr:
          nullable: true
        descr_ru:
          nullable: true
        descr_en:
          nullable: true
        descr_how_to_use:
          nullable: true
        descr_how_to_use_ru:
          nullable: true
        descr_how_to_use_en:
          nullable: true
        bonus:
          nullable: true
        bonus_RUB:
          nullable: true
        bonus_USD:
          nullable: true
        cashback_expenses:
          nullable: true
        cashback_first_payment:
          nullable: true
        discount:
          nullable: true
        referrer_id:
          nullable: true
        from_date:
          nullable: true
        to_date:
          nullable: true
        limit:
          nullable: true
        currency:
          nullable: true
        only_new_users:
          nullable: true
        color:
          nullable: true
        always_visible:
          nullable: true
    Admin_2.Methods.Users.Ranks.Edit:
      type: object
      properties:
        id:
          type: integer
        name_id:
          nullable: true
          type: string
        category:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Admin_2.Types.Users.Ranks.Category'
        name_ru:
          nullable: true
          type: string
        name_en:
          nullable: true
          type: string
        descr_ru:
          nullable: true
          type: string
        descr_en:
          nullable: true
          type: string
        descr_how_to_use_ru:
          nullable: true
          type: string
        descr_how_to_use_en:
          nullable: true
          type: string
        bonus_RUB:
          nullable: true
          type: integer
        bonus_USD:
          nullable: true
          type: integer
        cashback_expenses:
          nullable: true
          type: integer
        cashback_first_payment:
          nullable: true
          type: integer
        discount:
          nullable: true
          type: integer
        referrer_id:
          nullable: true
          type: integer
        from_date:
          nullable: true
          type: string
        to_date:
          nullable: true
          type: string
        max_count_usage:
          nullable: true
          type: integer
        currency:
          nullable: true
          type: string
        only_new_users:
          nullable: true
          type: boolean
        color:
          nullable: true
          type: string
        always_visible:
          nullable: true
          type: boolean
      required:
        - id
      title: Изменить достижение
    Admin_2.Methods.Users.Ranks.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получить достижения
    check_id:
      title: ID проверки аудита
      type: integer
    Audit_2.Methods.Audit.Browse.Get:
      type: object
      properties:
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - project_id
        - check_id
      title: Получение сводки анализа сайта
      deprecated: true
    Audit_2.Methods.Audit.Checks.Get:
      type: object
      properties:
        show_raw_data:
          title: Добавить в результат данные о незавершенной проверке
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - fields
        - orders
        - filters
        - offset
        - project_id
      title: |-
        Получение общей информации о проверках
        - только для проверки, которая не завершена
        - в ответе будут заменены значения кодов ответа на текущие: count_000, count_1xx, count_2xx, count_3xx, count_4xx, count_5xx
        - в ответе будет заменено значение count_pages и count_all на текущие
        - в ответ будет добавлены значения robot_step и robot_count_tasks_allм
    Models.Audit.Checks:
      properties:
        DURATION():
          nullable: true
        id: {}
        project_id:
          nullable: true
        device:
          nullable: true
        scan_links:
          nullable: true
        scan_images:
          nullable: true
        scan_js:
          nullable: true
        scan_css:
          nullable: true
        robots_txt_exists:
          nullable: true
        sitemap_xml_exists:
          nullable: true
        www_redirect_exists:
          nullable: true
        ssl_redirect_exists:
          nullable: true
        tls_exists:
          nullable: true
        fatal:
          nullable: true
        rkn_no_ban:
          nullable: true
        notice:
          nullable: true
        error:
          nullable: true
        time_start:
          nullable: true
        time_finish:
          nullable: true
        count_pages:
          nullable: true
        count_all:
          nullable: true
        count_000:
          nullable: true
        count_1xx:
          nullable: true
        count_2xx:
          nullable: true
        count_3xx:
          nullable: true
        count_4xx:
          nullable: true
        count_5xx:
          nullable: true
        complete:
          nullable: true
        count_warnings:
          nullable: true
        count_errors:
          nullable: true
        count_problems:
          nullable: true
        is_mobile:
          nullable: true
        domain_check_rkn_no_ban:
          nullable: true
        domain_check_webmaster_no_errors:
          nullable: true
        domain_check_robots_txt_exists:
          nullable: true
        domain_check_sitemap_xml_exists:
          nullable: true
        domain_check_www_redirect_exists:
          nullable: true
        domain_check_ssl_redirect_exists:
          nullable: true
        domain_check_tls_exists:
          nullable: true
        pages_check_http_code_200_errors:
          nullable: true
        pages_check_redirects_not_exists_errors:
          nullable: true
        pages_check_redirects_many_not_exists_errors:
          nullable: true
        pages_check_ttfb_max_errors:
          nullable: true
        pages_check_cacheable_errors:
          nullable: true
        pages_check_robots_txt_allowed_errors:
          nullable: true
        pages_check_sitemap_xml_exists_errors:
          nullable: true
        pages_check_sitemap_xml_exists_with_canonical_errors:
          nullable: true
        pages_check_sitemap_included_none_blocked_errors:
          nullable: true
        pages_check_noindex_off_errors:
          nullable: true
        pages_check_nofollow_off_errors:
          nullable: true
        pages_check_title_exists_errors:
          nullable: true
        pages_check_title_length_max_errors:
          nullable: true
        pages_check_title_is_unique_errors:
          nullable: true
        pages_check_description_exists_errors:
          nullable: true
        pages_check_description_is_unique_errors:
          nullable: true
        pages_check_description_length_min_errors:
          nullable: true
        pages_check_description_length_max_errors:
          nullable: true
        pages_check_h1_exists_errors:
          nullable: true
        pages_check_html_lang_exists_errors:
          nullable: true
        pages_check_url_length_errors:
          nullable: true
        pages_check_canonical_exists_errors:
          nullable: true
        pages_check_alternate_errors:
          nullable: true
        pages_check_http_resources_count_errors:
          nullable: true
        pages_check_links_exists_errors:
          nullable: true
        pages_check_refresh_not_exists_errors:
          nullable: true
        pages_check_compression_exists_errors:
          nullable: true
        pages_check_schema_exists_errors:
          nullable: true
        pages_check_og_title_exists_errors:
          nullable: true
        pages_check_og_description_exists_errors:
          nullable: true
        pages_check_og_image_exists_errors:
          nullable: true
        pages_check_og_url_exists_errors:
          nullable: true
        pages_check_og_url_canonical_errors:
          nullable: true
        pages_check_lcp_max_errors:
          nullable: true
        pages_check_fid_max_errors:
          nullable: true
        pages_check_inp_max_errors:
          nullable: true
        pages_check_cls_max_errors:
          nullable: true
        pages_check_fcp_max_errors:
          nullable: true
        pages_check_si_max_errors:
          nullable: true
        pages_check_tbt_max_errors:
          nullable: true
        links_check_http_code_200_errors:
          nullable: true
        links_check_redirects_not_exists_errors:
          nullable: true
        links_check_redirects_many_not_exists_errors:
          nullable: true
        links_check_ttfb_max_errors:
          nullable: true
        links_check_url_slash_unique_errors:
          nullable: true
        links_check_url_format_good_errors:
          nullable: true
        links_check_title_or_content_exists_errors:
          nullable: true
        links_check_nofollow_off_errors:
          nullable: true
        images_check_http_code_200_errors:
          nullable: true
        images_check_redirects_not_exists_errors:
          nullable: true
        images_check_redirects_many_not_exists_errors:
          nullable: true
        images_check_ttfb_max_errors:
          nullable: true
        images_check_cacheable_errors:
          nullable: true
        images_check_alt_exists_errors:
          nullable: true
        images_check_alt_length_max_errors:
          nullable: true
        images_check_size_max_errors:
          nullable: true
        images_check_robots_disallow_off_errors:
          nullable: true
        images_check_modern_format_errors:
          nullable: true
        js_check_http_code_200_errors:
          nullable: true
        js_check_redirects_not_exists_errors:
          nullable: true
        js_check_redirects_many_not_exists_errors:
          nullable: true
        js_check_ttfb_max_errors:
          nullable: true
        js_check_compression_exists_errors:
          nullable: true
        js_check_cacheable_errors:
          nullable: true
        js_check_is_minified_errors:
          nullable: true
        js_check_no_render_blocking_errors:
          nullable: true
        css_check_http_code_200_errors:
          nullable: true
        css_check_redirects_not_exists_errors:
          nullable: true
        css_check_redirects_many_not_exists_errors:
          nullable: true
        css_check_ttfb_max_errors:
          nullable: true
        css_check_compression_exists_errors:
          nullable: true
        css_check_cacheable_errors:
          nullable: true
        css_check_is_minified_errors:
          nullable: true
        css_check_no_render_blocking_errors:
          nullable: true
    Audit_2.Methods.Audit.Css.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - fields
        - orders
        - filters
        - offset
        - project_id
        - check_id
      title: Получение проверенных css
    Models.Audit.Css:
      properties:
        COUNT(*):
          nullable: true
        HTTP_CODES_HUNDREDS():
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
        check_id:
          nullable: true
        url_ids:
          nullable: true
        url_id:
          nullable: true
        url:
          nullable: true
        count:
          nullable: true
        time_parse:
          nullable: true
        http_codes:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
        last_http_code:
          nullable: true
        redirects:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
        locations:
          nullable: true
        ttfb:
          nullable: true
        count_pages:
          nullable: true
        compression:
          nullable: true
        cacheable:
          nullable: true
        cache_type:
          nullable: true
        cache_time:
          nullable: true
        cache_validator:
          nullable: true
        robots_txt_mention:
          nullable: true
        robots_txt_blocked:
          nullable: true
        minified:
          nullable: true
        broken:
          nullable: true
        notice:
          nullable: true
        error:
          nullable: true
        warning_all:
          nullable: true
        render_blocking:
          nullable: true
        check_http_code_200:
          nullable: true
        check_redirects_not_exists:
          nullable: true
        check_redirects_many_not_exists:
          nullable: true
        check_ttfb_max:
          nullable: true
        check_compression_exists:
          nullable: true
        check_cacheable:
          nullable: true
        check_is_minified:
          nullable: true
        check_no_render_blocking:
          nullable: true
        count_errors:
          nullable: true
        count_warnings:
          nullable: true
    Audit_2.Types.Audit.TargetType:
      type: string
      enum:
        - pages
        - links
        - images
        - js
        - css
      title: Тип очтета аудита
    TV.API.Types.ExportFormat:
      type: string
      enum:
        - csv
        - xlsx
    Audit_2.Methods.Audit.Export.Get:
      type: object
      properties:
        target_type:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Audit.TargetType'
        output:
          title: Формат экспортируемого файла
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.ExportFormat'
        project_id:
          $ref: '#/components/schemas/project_id'
        fields:
          $ref: '#/components/schemas/fields'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - target_type
        - output
        - project_id
        - check_id
      title: Экспорт результатов проверки файла
    Audit_2.Methods.Audit.Images.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - fields
        - orders
        - filters
        - offset
        - project_id
        - check_id
      title: Получение проверенных изображений
    Models.Audit.Images:
      properties:
        COUNT(*):
          nullable: true
        HTTP_CODES_HUNDREDS():
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
        check_id:
          nullable: true
        url_id:
          nullable: true
        url_ids:
          nullable: true
        url:
          nullable: true
        alt:
          nullable: true
        time_parse:
          nullable: true
        http_codes:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
        last_http_code:
          nullable: true
        redirects:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
        locations:
          nullable: true
        count:
          nullable: true
        ttfb:
          nullable: true
        count_pages:
          nullable: true
        size:
          nullable: true
        cacheable:
          nullable: true
        cache_type:
          nullable: true
        cache_time:
          nullable: true
        cache_validator:
          nullable: true
        robots_txt_mention:
          nullable: true
        robots_txt_blocked:
          nullable: true
        extension:
          nullable: true
        content_type:
          nullable: true
        modern_format:
          nullable: true
        broken:
          nullable: true
        search:
          nullable: true
        notice:
          nullable: true
        error:
          nullable: true
        warning_all:
          nullable: true
        check_http_code_200:
          nullable: true
        check_redirects_not_exists:
          nullable: true
        check_redirects_many_not_exists:
          nullable: true
        check_ttfb_max:
          nullable: true
        check_cacheable:
          nullable: true
        check_alt_exists:
          nullable: true
        check_alt_length_max:
          nullable: true
        check_size_max:
          nullable: true
        check_robots_disallow_off:
          nullable: true
        check_modern_format:
          nullable: true
        count_errors:
          nullable: true
        count_warnings:
          nullable: true
    Audit_2.Methods.Audit.Js.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - fields
        - orders
        - filters
        - offset
        - project_id
        - check_id
      title: Получение проверенных js
    Models.Audit.Js:
      properties:
        COUNT(*):
          nullable: true
        HTTP_CODES_HUNDREDS():
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
        check_id:
          nullable: true
        url_ids:
          nullable: true
        url_id:
          nullable: true
        url:
          nullable: true
        count:
          nullable: true
        time_parse:
          nullable: true
        http_codes:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
        last_http_code:
          nullable: true
        redirects:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
        ttfb:
          nullable: true
        count_pages:
          nullable: true
        compression:
          nullable: true
        cacheable:
          nullable: true
        cache_type:
          nullable: true
        cache_time:
          nullable: true
        cache_validator:
          nullable: true
        robots_txt_mention:
          nullable: true
        robots_txt_blocked:
          nullable: true
        minified:
          nullable: true
        broken:
          nullable: true
        notice:
          nullable: true
        error:
          nullable: true
        warning_all:
          nullable: true
        render_blocking:
          nullable: true
        check_http_code_200:
          nullable: true
        check_redirects_not_exists:
          nullable: true
        check_redirects_many_not_exists:
          nullable: true
        check_ttfb_max:
          nullable: true
        check_compression_exists:
          nullable: true
        check_cacheable:
          nullable: true
        check_is_minified:
          nullable: true
        check_no_render_blocking:
          nullable: true
        count_errors:
          nullable: true
        count_warnings:
          nullable: true
    Audit_2.Methods.Audit.Links.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - fields
        - orders
        - filters
        - offset
        - project_id
        - check_id
      title: Получение проверенных ссылок
    Models.Audit.Links:
      properties:
        COUNT(*):
          nullable: true
        search:
          nullable: true
        HTTP_CODES_HUNDREDS():
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
        check_id:
          nullable: true
        project_id:
          nullable: true
        url_id:
          nullable: true
        url_ids:
          nullable: true
        url:
          nullable: true
        type:
          nullable: true
        content:
          type: string
          nullable: true
        time_parse:
          nullable: true
        http_codes:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
        last_http_code:
          nullable: true
        count:
          nullable: true
        title:
          nullable: true
        redirects:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
        nofollow:
          nullable: true
        sponsored:
          nullable: true
        ugc:
          nullable: true
        external:
          nullable: true
        broken:
          nullable: true
        ttfb:
          nullable: true
        count_pages:
          nullable: true
        cacheable:
          nullable: true
        cache_type:
          nullable: true
        cache_time:
          nullable: true
        cache_validator:
          nullable: true
        check_http_code_200:
          nullable: true
        check_redirects_not_exists:
          nullable: true
        check_redirects_many_not_exists:
          nullable: true
        check_ttfb_max:
          nullable: true
        check_url_slash_unique:
          nullable: true
        check_url_format_good:
          nullable: true
        check_title_or_content_exists:
          nullable: true
        check_nofollow_off:
          nullable: true
        notice:
          nullable: true
        error:
          nullable: true
        warning_all:
          nullable: true
        count_errors:
          nullable: true
        count_warnings:
          nullable: true
    TV.API.Types.Datetime:
      type: string
      title: Дата с временем
      example: '2000-01-01 00:00:00'
    Audit_2.Methods.Audit.Log.Get:
      type: object
      properties:
        time1:
          title: Фильтр по периоду
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Datetime'
        time2:
          title: Фильтр по периоду
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Datetime'
        show_urls:
          title: Добавить url к записям
          type: boolean
        show_locations:
          title: Добавить массив locations - адреса страницы и редиректы с HTTP кодами
          type: boolean
        http_codes_hundreds:
          title: Фильтр по категориям кодов
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        page:
          title: Номер страницы (для использования в SQL)
          default: 1
          type: integer
        project_id:
          $ref: '#/components/schemas/project_id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - project_id
        - check_id
      title: Получение данных проверенных ресурсов
    Audit_2.Methods.Audit.Pages.Get:
      type: object
      properties:
        filters_resources_target_type:
          title: Тип отчета для фильтра по ресурсам страницы
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Audit.TargetType'
        filters_resources:
          title: Фильтр по ресурсам страницы, API fitlers для объекта, тип которого указан в filters_extra_target_type
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - fields
        - orders
        - filters
        - offset
        - project_id
        - check_id
      title: Получение страниц, по которым был выполнен аудит
    Models.Audit.Pages:
      properties:
        dummy_opener_summary_page:
          nullable: true
        COUNT(*):
          nullable: true
        HTTP_CODES_HUNDREDS():
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
        check_id:
          nullable: true
        url_id:
          nullable: true
        url:
          nullable: true
        time_parse:
          nullable: true
        http_codes:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
        last_http_code:
          nullable: true
        tls_version:
          nullable: true
        redirects:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
        meta_robots_none:
          nullable: true
        x_robots_tag_none:
          nullable: true
        meta_robots_noindex:
          nullable: true
        x_robots_tag_noindex:
          nullable: true
        meta_robots_nofollow:
          nullable: true
        x_robots_tag_nofollow:
          nullable: true
        canonical:
          nullable: true
        canonical_count:
          nullable: true
        http_resources_count:
          nullable: true
        html_lang:
          nullable: true
        hreflang:
          nullable: true
        rdfa:
          nullable: true
        json_ld:
          nullable: true
        microdata:
          nullable: true
        alternates:
          nullable: true
        refresh:
          nullable: true
        title:
          nullable: true
        description:
          nullable: true
        h1:
          nullable: true
        links_count:
          nullable: true
        images_count:
          nullable: true
        js_count:
          nullable: true
        css_count:
          nullable: true
        lastmod:
          nullable: true
        lastmod_since:
          nullable: true
        sitemap_xml_mention:
          nullable: true
        robots_txt_mention:
          nullable: true
        robots_txt_blocked:
          nullable: true
        og_title:
          nullable: true
        og_description:
          nullable: true
        og_image:
          nullable: true
        og_url:
          nullable: true
        og_type:
          nullable: true
        count_errors:
          nullable: true
        count_warnings:
          nullable: true
        count_problems:
          nullable: true
        broken:
          nullable: true
        ttfb:
          nullable: true
        compression:
          nullable: true
        cacheable:
          nullable: true
        cache_type:
          nullable: true
        cache_time:
          nullable: true
        cache_validator:
          nullable: true
        search:
          nullable: true
        snippet_search:
          nullable: true
        title_dbl:
          nullable: true
        description_dbl:
          nullable: true
        lcp:
          nullable: true
        fid:
          nullable: true
        inp:
          nullable: true
        cls:
          nullable: true
        fcp:
          nullable: true
        si:
          nullable: true
        tti:
          nullable: true
        tbt:
          nullable: true
        cwv_performance:
          nullable: true
        backlinks_inner_count:
          nullable: true
        text_length:
          nullable: true
        check_http_code_200:
          nullable: true
        check_redirects_not_exists:
          nullable: true
        check_redirects_many_not_exists:
          nullable: true
        check_ttfb_max:
          nullable: true
        check_cacheable:
          nullable: true
        check_robots_txt_allowed:
          nullable: true
        check_sitemap_xml_exists:
          nullable: true
        check_sitemap_xml_exists_with_canonical:
          nullable: true
        check_sitemap_included_none_blocked:
          nullable: true
        check_noindex_off:
          nullable: true
        check_nofollow_off:
          nullable: true
        check_title_exists:
          nullable: true
        check_title_length_max:
          nullable: true
        check_title_is_unique:
          nullable: true
        check_description_exists:
          nullable: true
        check_description_is_unique:
          nullable: true
        check_description_length_min:
          nullable: true
        check_description_length_max:
          nullable: true
        check_h1_exists:
          nullable: true
        check_html_lang_exists:
          nullable: true
        check_url_length:
          nullable: true
        check_canonical_exists:
          nullable: true
        check_alternate:
          nullable: true
        check_http_resources_count:
          nullable: true
        check_links_exists:
          nullable: true
        check_refresh_not_exists:
          nullable: true
        check_compression_exists:
          nullable: true
        check_schema_exists:
          nullable: true
        check_og_title_exists:
          nullable: true
        check_og_description_exists:
          nullable: true
        check_og_image_exists:
          nullable: true
        check_og_url_exists:
          nullable: true
        check_og_url_canonical:
          nullable: true
        check_lcp_max:
          nullable: true
        check_fid_max:
          nullable: true
        check_inp_max:
          nullable: true
        check_cls_max:
          nullable: true
        check_fcp_max:
          nullable: true
        check_si_max:
          nullable: true
        check_tbt_max:
          nullable: true
    Audit_2.Types.Audit.Summary.FilterCheckState:
      type: string
      enum:
        - all
        - changed
      title: Фильтр по состоянию изменения в сводке
    Audit_2.Methods.Audit.Summary.Get:
      type: object
      properties:
        filter_check_type:
          title: Фильтр по состоянию сигнала (success, warning, error)
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        filter_check_state:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Audit.Summary.FilterCheckState'
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - fields
        - orders
        - filters
        - offset
        - project_id
        - check_id
      title: Получение сводки о выполненном аудите
    Audit_2.Methods.Audit.SummaryPage.Get:
      type: object
      properties:
        url_id:
          title: Id ссылки на страницу
          type: integer
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - url_id
        - fields
        - orders
        - filters
        - offset
        - project_id
        - check_id
      title: Получение сводки страницы
    Audit_2.Methods.Indexing.Export.Get:
      type: object
      properties:
        searchers_keys:
          title: Поисковые системы
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.SearcherKeys'
        returnFilenameFromFolder:
          title: Если указан, файл будет сохранен в указанной папке и будет возвращен путь к файлу
          description: |-
            Для внутреннего использования

            @private
          nullable: true
          type: string
        output:
          title: Формат экспортируемого файла
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.ExportFormat'
        properties:
          title: Настройки экспорта
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        dates:
          title: Произвольные даты без использования диапазона
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        date1:
          title: Дата начала диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        date2:
          title: Дата окончания диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        periodDays:
          title: Период в днях
          default: 7
          type: integer
        type_range:
          default: 7
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.Export.TypeRange'
        count_dates:
          title: Количество дней в диапазоне
          default: 60
          type: integer
        project_id:
          $ref: '#/components/schemas/project_id'
        fields:
          $ref: '#/components/schemas/fields'
      required:
        - searchers_keys
        - output
        - project_id
      title: Экспорт результатов индексации
      description: Необходимо указать либо date1 и date2, либо dates (вместе указывать нельзя)
    Audit_2.Methods.Indexing.Links.Get:
      type: object
      properties:
        template_date_range:
          title: Диапазон значений шаблона
          type: string
        dates:
          title: Произвольные даты без использования диапазона
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        date1:
          title: Дата начала диапазона
          nullable: true
          type: string
        date2:
          title: Дата окончания диапазона
          nullable: true
          type: string
        type_range:
          title: Тип диапазона дат
          default: 7
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.Export.TypeRange'
        count_dates:
          title: Количество дней в диапазоне
          nullable: true
          type: integer
        searchers_keys:
          title: Ппоисковые ключи
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        tags:
          title: Теги
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        dynamic:
          title: Динамический
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        data_dynamic:
          title: Динаамические данные
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        data_sort:
          title: Сортировка данных
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - template_date_range
        - project_id
      title: Создание гостевой ссылки на просмотр позиций
      description: Необходимо указать либо date1 и date2, либо dates (вместе указывать нельзя)
    Audit_2.Methods.Indexing.Summary.Get:
      type: object
      properties:
        dates:
          title: Произвольные даты без диапазона
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        searcher_key:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.SearcherKey'
        show_counts_changes:
          title: Отобразить количество изменений
          type: boolean
        show_counts_in_index:
          title: Отобразить количество страниц в индексе
          type: boolean
        show_counts_all:
          title: Отобразить количество проверенных страниц
          type: boolean
        forChart:
          title: Вернуть данные в формате для графика
          description: |-
            Недокументируемый параметр

            @private
          type: boolean
        project_id:
          $ref: '#/components/schemas/project_id'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - dates
        - project_id
      title: Получение сводки индексации
    Audit_2.Methods.Watcher.ByURL.Get:
      type: object
      properties:
        url_id:
          title: ID URL
          type: integer
        show_headers:
          title: Включать ли в результат названия столбцов
          type: boolean
        watcher_fields:
          title: Выбор столбцов данных с результатами проверки
          default:
            - http_codes
            - redirects
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        show_diff:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Watcher.ShowDiff'
        watcher_type:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Watcher.Type'
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - url_id
        - watcher_type
        - fields
        - orders
        - filters
        - offset
        - project_id
      title: Построение отчета по одному URL
      description: |-
        Отличия от get/audit_2/watcher:
        - отчет генерируется на основе объекта watcher_results, а не urls
        - параметры выбора периода отчета игнорируются
        - выбор прверок регулируется параметрами запроса filters, limit и offset
    Models.Watcher.Results:
      properties:
        project_id:
          nullable: true
        check_id:
          nullable: true
        url_id:
          nullable: true
        http_codes:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
        http_codes_changed:
          nullable: true
        http_codes_md5:
          nullable: true
        redirects:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          nullable: true
        redirects_changed:
          nullable: true
        redirects_md5:
          nullable: true
        h1:
          nullable: true
        h1_changed:
          nullable: true
        h1_md5:
          nullable: true
        title:
          nullable: true
        title_changed:
          nullable: true
        title_md5:
          nullable: true
        description:
          nullable: true
        description_changed:
          nullable: true
        description_md5:
          nullable: true
        content:
          nullable: true
        content_changed:
          nullable: true
        content_md5:
          nullable: true
    Audit_2.Methods.Watcher.Checks.Get:
      type: object
      properties:
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - project_id
      title: Получение проверок радара
    Audit_2.Methods.Watcher.Summary.Get:
      type: object
      properties:
        watcher_types:
          title: Тип проверки
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        checks_ids:
          title: ID проверок
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        show_counts_changes:
          title: Отобразить количество изменений по типам
          type: boolean
        forChart:
          title: Недокументируемый параметр, данные для графика
          type: boolean
        project_id:
          $ref: '#/components/schemas/project_id'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - checks_ids
        - project_id
      title: Получение сводки радара
    Bank_2.Methods.Diadoc.SendContract.Get:
      type: object
      properties:
        requisites_id:
          title: Id договора
          type: string
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - requisites_id
        - fields
        - orders
        - filters
        - offset
      title: Отправка договора в диадок
    Bank_2.Methods.Diadoc.SendTotalReceipt.Get:
      type: object
      properties:
        org_id:
          title: Id организации
          type: string
        date1:
          title: Дата начала диапазона
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        date2:
          title: Дата конца диапазона
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        org_kpp:
          title: КПП организации
          nullable: true
          type: string
        requisites_id:
          title: Id договора
          nullable: true
          type: string
        signed:
          title: Использовать подпись
          description: Если true, то документ с подписью (не распространяется на договоры)
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - org_id
        - date1
        - date2
        - fields
        - orders
        - filters
        - offset
      title: Отправка акта сверки в диадок
      description: Параметры см. в bank_2_requisites::protected_get_printTotalReceipt();
    Bank_2.Methods.History.Export.Get:
      type: object
      properties:
        output:
          type: string
        show_summary_by_groups:
          title: Вывести итого по группам
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - output
        - fields
        - orders
        - filters
        - offset
      title: Экспорт лога банка
    Bank_2.Methods.History.Summary.Get:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - fields
        - orders
        - filters
        - offset
      title: Получение сводки проведенных операций
    Bank_2.Methods.Referrals.ToBonus.Edit:
      type: object
      properties:
        sum:
          title: Cумма для перевода
          type: string
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - sum
        - filters
      title: Перевод средств с реферального счета на бонусный
    Bank_2.Methods.Requisites.ContractTariffId.Get:
      type: object
      properties:
        contract_type:
          title: Тип контракта
          type: string
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - contract_type
        - fields
        - orders
        - filters
        - offset
      title: Получение id тарифа пользователя по типу контракта
    Bank_2.Methods.Requisites.Print.Get:
      type: object
      properties:
        target_id:
          title: Id документа
          type: string
        type:
          title: Тип документа enum(RequisitesDocuments::$availableDocumentsTypes)
          type: string
        signed:
          title: Использовать подпись
          description: Если true, то документ с подписью (не распространяется на договоры)
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - target_id
        - type
        - fields
        - orders
        - filters
        - offset
      title: Скачивание документа в формате PDF
    Bank_2.Methods.Requisites.PrintTotalReceipt.Get:
      type: object
      properties:
        date1:
          title: Дата начала диапазона
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        date2:
          title: Дата конца диапазона
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        org_id:
          title: Id организации
          type: string
        returnPdfDataForDiadoc:
          title: Для внутреннего использования
          type: boolean
        signed:
          title: Использовать подпись
          description: Если true, то документ с подписью (не распространяется на договоры)
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - date1
        - date2
        - org_id
        - fields
        - orders
        - filters
        - offset
      title: Получение акта сверки (акты по предоплате выводятся в одном платеже)
    Bank_2.Methods.Requisites.PrintZip.Get:
      type: object
      properties:
        targets_ids:
          title: Список id документов
          description: Вместо targets_ids можно указывать набор параметров org_id, date1 и date2
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.IntArray'
        org_id:
          title: Id организации
          nullable: true
          type: string
        date1:
          title: Дата начала диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        date2:
          title: Дата конца диапазона
          nullable: true
          allOf:
            - $ref: '#/components/schemas/TV.API.Types.Date'
        type:
          title: Тип документа enum(RequisitesDocuments::$availableDocumentsTypes)
          type: string
        signed:
          title: Использовать подпись
          description: Если true, то документ с подписью (не распространяется на договоры)
          type: boolean
        fields:
          $ref: '#/components/schemas/fields'
        orders:
          $ref: '#/components/schemas/orders'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        fetch_style:
          $ref: '#/components/schemas/fetch_style'
      required:
        - type
        - fields
        - orders
        - filters
        - offset
      title: Скачивание архива документов в формате PDF
    Landings_2.Methods.Hr.Feedback.Add:
      type: object
      properties:
        name:
          title: Имя и фамилия
          type: string
        email:
          title: Email
          type: string
        phone:
          title: Номер телефона
          type: string
        telegram:
          title: Ссылка на телеграм, можно укзать логин
          type: string
        comment:
          title: Прикрепленное сообщение
          type: string
      required:
        - name
        - email
        - phone
        - telegram
        - comment
      title: Отправление письма с лэндинга вакансий на hr@topvisor.com
    Payments_2.Methods.Tariff.DelCard.Edit:
      type: object
      properties: {}
      required: []
      title: Отписка от тарифа, оплаченного картой
    Payments_2.Methods.Tariff.NextToDiadoc.Edit:
      type: object
      properties:
        next_to_diadoc:
          title: Флаг - применение настройки тарифов
          type: boolean
      required:
        - next_to_diadoc
      title: 'Настройка оплаты тарифов: выставлять ли счета через диадок'
    Payments_2.Methods.Tariff.SetNext.Edit:
      type: object
      properties:
        id:
          title: Id тарифа
          type: string
      required:
        - id
      title: Смена тарифа со следующего месяца
    Projects_2.Methods.Folders.Move.Edit:
      type: object
      properties:
        folder_id:
          title: Id папки
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - folder_id
        - filters
      title: Перемещение проектов в папку
    Projects_2.Methods.Folders.MoveFolder.Edit:
      type: object
      properties:
        id:
          title: Id папки, которую надо перенести
          type: integer
        insert_after_id:
          title: Id папки, после которой надо разместить перемещаемую папку
          description: Укажите 0, если надо переместить папку в начало списка
          type: integer
      required:
        - id
        - insert_after_id
      title: Переместить папку
      description: Вложенные папки запрещены, поэтому перемещение происходит только в пределах одного списка
    Projects_2.Methods.Folders.Name.Edit:
      type: object
      properties:
        id:
          title: Id папки
          type: integer
        name:
          title: Имя папки
          type: string
      required:
        - id
        - name
      title: Изменение имени папки
    Tickets_2.Methods.Admin.Ticket.Edit:
      type: object
      properties:
        id:
          type: integer
        is_important:
          title: Флаг того, что тикет важный
          nullable: true
          type: boolean
        task_id:
          title: Номер задачи redmine, связанной с тикетом
          nullable: true
          type: integer
        tags:
          title: Доступные теги тикета
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Tags_2.Types.TagsIds'
        status:
          title: Статус тикета
          nullable: true
          type: boolean
      required:
        - id
      title: Редактирование тикета (для админов)
    Tickets_2.Methods.Admin.TicketSplit.Edit:
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Перенос последниего сообщения (до 1 сообщения автора) в новый тикет
    Tickets_2.Methods.Tickets.SetReaded.Edit:
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Пометка тикета как "прочитанный" для автора тикета или админов
    Urls_2.Methods.Import.RecognizeLinkSitemapXml.Get:
      type: object
      properties:
        domain:
          title: Домен
          type: string
      required:
        - domain
      title: Получение URL к карте сайта по файлу robots.txt для указанного домена
    Users_2.Methods.Join.Email.Add:
      type: object
      properties:
        email:
          type: string
        pass:
          nullable: true
          type: string
      required:
        - email
      title: Привязка email к аккаунту
    Admin_2.Methods.Users.Informer.Subscriptions.Get:
      type: object
      properties:
        tariff_id:
          nullable: true
          type: integer
      required: []
      title: График с количеством подписок на рубрики с сегментцией по способам рассылки
      description: График кешируется, первый запрос может выполняться дольше
    TV.Objects.Highcharts.Chart:
      type: object
      properties:
        categories:
          title: Категории
          description: Для обчных графиков это значения на оси X
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        series:
          title: Набор серий
          description: |-
            Серия - это объект, выводимый на графике, например линия.

            Серия обязательно должна иметь поле data, в котором перечисляются значения для категорий. Значения должны идти в таком же порядке, что и
            категории
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        additionalData:
          title: Дополнительгная информация
          type: array
          items:
            oneOf:
              - type: string
              - type: number
      required:
        - categories
        - series
        - additionalData
      title: Сокращенный тип с данными для вывода hightcharts
      description: https://www.highcharts.com/
    Audit_2.Methods.Audit.Checker.Go.Edit:
      type: object
      properties:
        debug:
          title: Запуск в режиме отладки
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Запуск проверки аудита
    Audit_2.Methods.Audit.Checker.Price.Get:
      type: object
      properties:
        apply_discount:
          title: Отображать ли сумму с учетом скидки
          default: true
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required: []
      title: Получение стоимости проверки аудита
    Audit_2.Methods.Audit.Export.Links.Get:
      type: object
      properties:
        view_name:
          title: Название просмотра (используется на странице с просмотром проверки)
          type: string
        view_template:
          title: Шаблон просмотра (используется на странице с просмотром проверки)
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        log_http_codes_hundreds:
          title: Логи фильтра по категориям кодов (используется на странице с просмотром проверки)
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        view_signal_type:
          title: Тип сигнала просмотра (используется на странице с просмотром проверки)
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        links_external:
          title: Внешние ссылки (используется на странице с просмотром проверки)
          type: string
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - view_template
        - log_http_codes_hundreds
        - view_signal_type
        - project_id
        - check_id
      title: Получение гостевой ссылки на просмотр аудита позиций
    Audit_2.Methods.Audit.Export.Summary.Get:
      type: object
      properties:
        output:
          title: Формат экспортируемого файла
          type: string
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - output
        - project_id
        - check_id
      title: Экспорт отчета Анализа сайта
    Audit_2.Methods.Audit.Log.ActualError.Get:
      type: object
      properties:
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - project_id
        - check_id
      title: Получение информации о текущей ошибке на роботе
    DateTime:
      type: object
      properties: {}
      required: []
    Audit_2.Methods.Audit.Log.Chart.Get:
      type: object
      properties:
        time1:
          title: Фильтр по периоду
          nullable: true
          allOf:
            - $ref: '#/components/schemas/DateTime'
        time2:
          title: Фильтр по периоду
          nullable: true
          allOf:
            - $ref: '#/components/schemas/DateTime'
        page:
          title: Номер страницы (для использования в SQL)
          default: 1
          type: integer
        limit:
          $ref: '#/components/schemas/limit'
        offset:
          $ref: '#/components/schemas/offset'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - project_id
        - check_id
      title: Получение данных для графика
      deprecated: true
    Audit_2.Types.Audit.Results.Export.TypeReport:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
      title: Тип отчета аудита для экспорта
    Audit_2.Methods.Audit.Results.Export.Get:
      type: object
      properties:
        type_report:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Audit.Results.Export.TypeReport'
        format:
          title: Формат экспорта
          default: pdf
          nullable: true
          type: string
        search:
          title: Данные поиска во всех табличных разделах (только для PDF)
          nullable: true
          type: string
        filter:
          title: Данные фильтрации во всех табличных разделах (только для PDF)
          nullable: true
          type: string
        external:
          title: Вид ссылок (только для PDF)
          nullable: true
          type: string
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - type_report
        - project_id
        - check_id
      title: Экспорт результатов аудита
      deprecated: true
    Audit_2.Methods.Audit.Results.Page.Get:
      type: object
      properties:
        url:
          title: Ссылка на анализируемую страницу
          type: string
        search:
          title: Поиск
          nullable: true
          type: string
        orders:
          $ref: '#/components/schemas/orders'
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/check_id'
      required:
        - url
        - project_id
        - check_id
      title: Получение результатов анализа страницы
      deprecated: true
    Audit_2.Methods.Indexing.Checker.Go.Edit:
      type: object
      properties:
        debug:
          title: Запуск в режиме отладки
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Отправка проектов на проверку индексации
    Audit_2.Methods.Indexing.Checker.Price.Get:
      type: object
      properties:
        apply_discount:
          title: Отображать сумму с учетом скидки
          default: 1
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required: []
      title: Полуение стоимости проверки индексации
    Audit_2.Methods.Indexing.Export.Links.Get:
      type: object
      properties:
        searchers_keys:
          title: Поисковые ключи
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        template_date_range:
          title: Диапозон значений шаблона
          nullable: true
          type: string
        dates:
          title: Произвольные даты без использования диапазона
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        date1:
          title: Дата начала диапазона
          nullable: true
          type: string
        date2:
          title: Дата окончания диапазона
          nullable: true
          type: string
        type_range:
          title: Тип диапазона дат
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.Export.TypeRange'
        type_range_compare:
          title: Сравнение диапазонов типов
          nullable: true
          type: string
        count_dates:
          title: Количество дней в диапазоне
          nullable: true
          type: string
        tags_ids:
          title: ID тегов
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        data_sort:
          title: Сортировка данных
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        only_changed_for:
          title: Применение изменений только для
          nullable: true
          type: string
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - project_id
      title: Получение гостевой ссылки на просмотр индексации
      description: Необходимо указать либо date1 и date2, либо dates (вместе указывать нельзя)
    Export_2.Types.Repository.Name:
      type: string
      enum:
        - gdrive
      title: Хранилище для экспорта
    Audit_2.Methods.Indexing.Export.ToRepository.Get:
      type: object
      properties:
        repository:
          allOf:
            - $ref: '#/components/schemas/Export_2.Types.Repository.Name'
        project_id:
          $ref: '#/components/schemas/project_id'
      required:
        - repository
        - project_id
      title: Экспорт файла в хранилище
    Audit_2.Methods.Indexing.Summary.Chart.Get:
      type: object
      properties:
        dates:
          title: Произвольные даты без диапазона
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        searcher_key:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Indexing.SearcherKey'
        show_counts_changes:
          title: Отобразить количество изменений
          type: boolean
        show_counts_in_index:
          title: Отобразить количество страниц в индексе
          type: boolean
        show_counts_all:
          title: Отобразить количество проверенных страниц
          type: boolean
        forChart:
          title: Вернуть данные в формате для графика
          description: |-
            Недокументируемый параметр

            @private
          type: boolean
        project_id:
          $ref: '#/components/schemas/project_id'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - dates
        - project_id
      title: Получение сводок индексации для графика
    Audit_2.Types.Sitemap.MaxPages:
      type: string
      enum:
        - '100'
        - '1000'
        - '10000'
        - '100000'
        - '150000'
        - '300000'
      title: Максимальное количество страниц для генерации карты сайта
    Audit_2.Methods.Sitemap.Checker.Go.Edit:
      type: object
      properties:
        max_pages:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Sitemap.MaxPages'
        debug:
          title: Запуск в режиме отладки
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - max_pages
        - filters
      title: Отправка проектов на проверку карты сайта
    Audit_2.Methods.Sitemap.Checker.Price.Get:
      type: object
      properties:
        apply_discount:
          title: Отображать ли сумму с учетом скидки
          default: 1
          type: integer
        max_pages:
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Sitemap.MaxPages'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - max_pages
      title: Полуение стоимости проверки карты сайта
    Audit_2.Methods.Watcher.Checker.Go.Edit:
      type: object
      properties:
        debug:
          title: Запуск в режиме отладки
          type: boolean
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - filters
      title: Отправка проектов на проверку радара
    Audit_2.Methods.Watcher.Checker.Price.Get:
      type: object
      properties:
        apply_discount:
          title: Отображать ли сумму с учетом скидки
          default: 1
          type: integer
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required: []
      title: Полуение стоимости проверки радара
    properties-check_id:
      title: ID проверки радара
      type: integer
    Audit_2.Methods.Watcher.Export.Links.Get:
      type: object
      properties:
        view_name:
          title: Выбранный элемент в меню
          type: string
        fulltext:
          title: Выводить полные тексты (для вкладки контент)
          type: boolean
        changed:
          default: all
          allOf:
            - $ref: '#/components/schemas/Audit_2.Types.Audit.Summary.FilterCheckState'
        tags_ids:
          title: Фильтр по тегам
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        project_id:
          $ref: '#/components/schemas/project_id'
        check_id:
          $ref: '#/components/schemas/properties-check_id'
      required:
        - fulltext
        - project_id
        - check_id
      title: Создание гостевой ссылки на просмотр радара
    Audit_2.Methods.Watcher.Summary.Chart.Get:
      type: object
      properties:
        watcher_types:
          title: Тип проверки
          nullable: true
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        checks_ids:
          title: ID проверок
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        show_counts_changes:
          title: Отобразить количество изменений по типам
          type: boolean
        forChart:
          title: Недокументируемый параметр, данные для графика
          type: boolean
        project_id:
          $ref: '#/components/schemas/project_id'
        filters:
          $ref: '#/components/schemas/filters'
        id:
          $ref: '#/components/schemas/id'
      required:
        - checks_ids
        - project_id
      title: Получение сводок радара для графика
