/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * Востановление удаленного проекта
         * @description @see jetbrains://idea/navigate/reference?project=topvisor.com&fqn=Services\Admin_2\Methods\Actions\Backup\Project\Edit
         */
        "Admin_2.Methods.Actions.Backup.Project.Edit": {
            pass_admin_actions: string;
            /** Этап:
             *     - 1: Загрузить и подготовить бекапы
             *     - 2: Выполнить восстановление */
            step: number;
            /** Сервер, с которого делались бекапы */
            server_name: string;
            /** ID пользователя */
            user_id: number;
            /** ID проекта */
            project_id: number;
            /** Дата бекапа */
            date: import('../../../../../TV/API/Types/Date.ts').components['schemas']['TV.API.Types.Date'];
            /** Является ли запуск - тестом */
            test: boolean;
        };
        "Admin_2.Methods.Actions.Backup.Project.Edit.Exec": import('../../../../Objects/Actions/Result.ts').components['schemas']['Admin_2.Objects.Actions.Result'];
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
