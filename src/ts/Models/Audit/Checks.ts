/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        "Models.Audit.Checks": {
            "DURATION()"?: any;
            id?: any;
            project_id?: any;
            device?: any;
            scan_links?: any;
            scan_images?: any;
            scan_js?: any;
            scan_css?: any;
            robots_txt_exists?: any;
            sitemap_xml_exists?: any;
            www_redirect_exists?: any;
            ssl_redirect_exists?: any;
            tls_exists?: any;
            fatal?: any;
            rkn_no_ban?: any;
            notice?: any;
            error?: any;
            time_start?: any;
            time_finish?: any;
            count_pages?: any;
            count_all?: any;
            count_000?: any;
            count_1xx?: any;
            count_2xx?: any;
            count_3xx?: any;
            count_4xx?: any;
            count_5xx?: any;
            complete?: any;
            count_warnings?: any;
            count_errors?: any;
            count_problems?: any;
            is_mobile?: any;
            domain_check_rkn_no_ban?: any;
            domain_check_webmaster_no_errors?: any;
            domain_check_robots_txt_exists?: any;
            domain_check_sitemap_xml_exists?: any;
            domain_check_www_redirect_exists?: any;
            domain_check_ssl_redirect_exists?: any;
            domain_check_tls_exists?: any;
            pages_check_http_code_200_errors?: any;
            pages_check_redirects_not_exists_errors?: any;
            pages_check_redirects_many_not_exists_errors?: any;
            pages_check_ttfb_max_errors?: any;
            pages_check_cacheable_errors?: any;
            pages_check_robots_txt_allowed_errors?: any;
            pages_check_sitemap_xml_exists_errors?: any;
            pages_check_sitemap_xml_exists_with_canonical_errors?: any;
            pages_check_sitemap_included_none_blocked_errors?: any;
            pages_check_noindex_off_errors?: any;
            pages_check_nofollow_off_errors?: any;
            pages_check_title_exists_errors?: any;
            pages_check_title_length_max_errors?: any;
            pages_check_title_is_unique_errors?: any;
            pages_check_description_exists_errors?: any;
            pages_check_description_is_unique_errors?: any;
            pages_check_description_length_min_errors?: any;
            pages_check_description_length_max_errors?: any;
            pages_check_h1_exists_errors?: any;
            pages_check_html_lang_exists_errors?: any;
            pages_check_url_length_errors?: any;
            pages_check_canonical_exists_errors?: any;
            pages_check_alternate_errors?: any;
            pages_check_http_resources_count_errors?: any;
            pages_check_links_exists_errors?: any;
            pages_check_refresh_not_exists_errors?: any;
            pages_check_compression_exists_errors?: any;
            pages_check_schema_exists_errors?: any;
            pages_check_og_title_exists_errors?: any;
            pages_check_og_description_exists_errors?: any;
            pages_check_og_image_exists_errors?: any;
            pages_check_og_url_exists_errors?: any;
            pages_check_og_url_canonical_errors?: any;
            pages_check_lcp_max_errors?: any;
            pages_check_fid_max_errors?: any;
            pages_check_inp_max_errors?: any;
            pages_check_cls_max_errors?: any;
            pages_check_fcp_max_errors?: any;
            pages_check_si_max_errors?: any;
            pages_check_tbt_max_errors?: any;
            links_check_http_code_200_errors?: any;
            links_check_redirects_not_exists_errors?: any;
            links_check_redirects_many_not_exists_errors?: any;
            links_check_ttfb_max_errors?: any;
            links_check_url_slash_unique_errors?: any;
            links_check_url_format_good_errors?: any;
            links_check_title_or_content_exists_errors?: any;
            links_check_nofollow_off_errors?: any;
            images_check_http_code_200_errors?: any;
            images_check_redirects_not_exists_errors?: any;
            images_check_redirects_many_not_exists_errors?: any;
            images_check_ttfb_max_errors?: any;
            images_check_cacheable_errors?: any;
            images_check_alt_exists_errors?: any;
            images_check_alt_length_max_errors?: any;
            images_check_size_max_errors?: any;
            images_check_robots_disallow_off_errors?: any;
            images_check_modern_format_errors?: any;
            js_check_http_code_200_errors?: any;
            js_check_redirects_not_exists_errors?: any;
            js_check_redirects_many_not_exists_errors?: any;
            js_check_ttfb_max_errors?: any;
            js_check_compression_exists_errors?: any;
            js_check_cacheable_errors?: any;
            js_check_is_minified_errors?: any;
            js_check_no_render_blocking_errors?: any;
            css_check_http_code_200_errors?: any;
            css_check_redirects_not_exists_errors?: any;
            css_check_redirects_many_not_exists_errors?: any;
            css_check_ttfb_max_errors?: any;
            css_check_compression_exists_errors?: any;
            css_check_cacheable_errors?: any;
            css_check_is_minified_errors?: any;
            css_check_no_render_blocking_errors?: any;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
