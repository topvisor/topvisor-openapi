/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Установка общих настроек проверки позиций проекта */
        "Positions_2.Methods.Settings.Edit": {
            /** Id проекта */
            project_id: number;
            /** Собирать ли снипиты */
            with_snippets?: boolean | null;
            /** Глубина сбора снимков
             *
             *     enum(0..9)
             *     - 0: не собирать
             *     - 1: 10
             *     - 8: 80
             *     - 9: 100 */
            do_snapshots?: number | null;
            /** Собирать ли сниппеты в снимках */
            do_snapshots_with_snippets?: boolean | null;
            /** Учитывать ли поддомены при проверке
             *
             *     - 1: находить позиции сайта, являющиеся поддоменом к основному */
            subdomains?: boolean | null;
            /** Ограничения
             *
             *     - 0: без ограничений
             *     - 1: умеренный
             *     - 2: семейный поиск */
            filter?: number | null;
            /** Учитывать ли регион */
            auto_correct?: boolean | null;
            /** Способ получения трафика
             *
             *     - 0: с учетом регионов
             *     - 1: без учета регионов */
            common_traffic?: boolean | null;
            /** Права для гостевых ссылок */
            guest_link_right?: import('../../Types/Settings/GuestLinkRights.ts').components['schemas']['Positions_2.Types.Settings.GuestLinkRights'] | null;
            /**
             * Список фильтров по полям объекта
             *
             *     {name: string, operator: Field::AVAILABLE_OPERATORS, values: array}
             *
             *     Использует поля модели
             *
             *     Поля обязатлеьное, если $id не указан
             * @description @see AbstractMethod::MODEL
             *     @see Field::AVAILABLE_OPERATORS
             */
            filters: (string | number)[];
            /** Id объекта, для фильтрации объектов по id
             *
             *     Только для моделей с полем id */
            id?: number | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
