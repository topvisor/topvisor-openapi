/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Информация о стоимости запуска проверки позиций по проектам */
        "Positions_2.Methods.Checker.Price.Get": {
            /**
             * Запуск в режиме отладки
             *
             *     Только для админов
             * @description @private
             */
            debug?: boolean;
            /** Проверка с учетом фильтра по регионам */
            regions_indexes?: components["schemas"]["TV.API.Types.IntArray"] | null;
            /** Проверка с учетом фильтра по папкам */
            folders_ids?: components["schemas"]["TV.API.Types.IntArray"] | null;
            /**
             * При фильтрации по ID папок также проверять в подпапках
             * @description @type bool
             */
            folders_ids_depth?: boolean;
            /** Проверка с учетом фильтра по группам (сочетается с фильтром folders_ids по логике И) */
            groups_ids?: components["schemas"]["TV.API.Types.IntArray"] | null;
            /** Глубина проверки снимка (перекрывает аналогичное значение в настройках проекта)
             *
             *     9 - означет глубину 10
             *
             *     enum(0, 2, 3, 5, 9)
             *
             *     TODO: сдлеать enum */
            do_snapshots?: number | null;
            /** Проверка одного запроса
             *
             *     - не допускается при массовой проверке проектов
             *     - требует указания одного `regions_indexes`
             *     - не допускается совместное использование с `folders_ids`, `groups_ids` и `do_snapshots` */
            keyword_id?: number | null;
            filters: components["schemas"]["filters"];
            id?: components["schemas"]["id"];
        };
        /**
         * Тип массива: int
         *
         *     Принимает: Любые целые числа и числа в строках
         * @description @extends AbstractTypedArray<int>
         *     @method int[] getValues()
         *     @method int current()
         */
        "TV.API.Types.IntArray": number[];
        /**
         * Список фильтров по полям объекта
         *
         *     {name: string, operator: Field::AVAILABLE_OPERATORS, values: array}
         *
         *     Использует поля модели
         *
         *     Поля обязатлеьное, если $id не указан
         * @description @see AbstractMethod::MODEL
         *     @see Field::AVAILABLE_OPERATORS
         */
        filters: (string | number)[];
        /** Id объекта, для фильтрации объектов по id
         *
         *     Только для моделей с полем id */
        id: number | null;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
