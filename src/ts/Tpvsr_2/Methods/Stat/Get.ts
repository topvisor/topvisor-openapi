/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Получение статистики по ссылке
         *
         *     @see jetbrains://idea/navigate/reference?project=topvisor-com&fqn=Services\Tpvsr_2\Methods\Stat\Get */
        "Tpvsr_2.Methods.Stat.Get": {
            /** Хэш ссылки */
            hash: string;
            type_dimensions?: import('../../Types/Stat/Dimension/Types.ts').components['schemas']['Tpvsr_2.Types.Stat.Dimension.Types'] | null;
            browser_dimensions?: import('../../Types/Stat/Dimension/Browsers.ts').components['schemas']['Tpvsr_2.Types.Stat.Dimension.Browsers'] | null;
            os_dimensions?: import('../../Types/Stat/Dimension/Oses.ts').components['schemas']['Tpvsr_2.Types.Stat.Dimension.Oses'] | null;
            referrers_dimensions?: import('../../Types/Stat/Dimension/Referrers.ts').components['schemas']['Tpvsr_2.Types.Stat.Dimension.Referrers'] | null;
        };
        "Tpvsr_2.Methods.Stat.Get.Exec": ({
            chart_data?: {
                dates: string[];
                clicks: {
                    [key: string]: unknown;
                };
            };
            counts_unique?: number;
            referrers?: {
                sites?: {
                    count: number;
                    refs: {
                        [key: string]: unknown;
                    }[];
                };
                overall?: {
                    count: number;
                    refs: {
                        [key: string]: unknown;
                    }[];
                };
                social?: {
                    [key: string]: unknown;
                };
            };
            countries?: {
                name: string;
                country_code: string;
                count: number;
            }[];
            browsers?: {
                [key: string]: number;
            };
            oses?: {
                [key: string]: number;
            };
        } | null) | null;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
