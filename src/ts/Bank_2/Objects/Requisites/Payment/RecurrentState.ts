/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Состояние рекуррентного платежа
         *
         *     Создается при подтверждении проведения оплаты и определяет дальнейшую логику работы с рекуррентными платежами */
        "Bank_2.Objects.Requisites.Payment.RecurrentState": {
            /** Начало расчетного периода, обычно время оплаты */
            timeStart?: string | null;
            /** Окончание расчетного периода */
            timeEnd?: string | null;
            status: import('../../../Types/Subscriptions/Status.ts').components['schemas']['Bank_2.Types.Subscriptions.Status'];
            type: import('../../../Types/Subscriptions/Type.ts').components['schemas']['Bank_2.Types.Subscriptions.Type'];
            manager: import('../../../Types/Subscriptions/Manager.ts').components['schemas']['Bank_2.Types.Subscriptions.Manager'];
            /** Краткая информация о способе платежа
             *
             *     - id платежа
             *     - неполный номер карты и срок действия
             *     - номер договора */
            methodInfo: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
