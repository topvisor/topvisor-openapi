/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @see jetbrains://idea/navigate/reference?project=topvisor-com&fqn=I18n\Audit\En */
        "I18n.Audit": {
            /** @constant */
            readonly Audit: "Website audit";
            /** @constant */
            readonly Indexing: "Index status";
            /** @constant */
            readonly Watcher: "Website watcher";
            /** @constant */
            readonly No_results: "You haven't checked your website yet";
            /** @constant */
            readonly Process_text: "Scanning";
            /** @constant */
            readonly Header_h1: "H1 Header";
            /** @constant */
            readonly Menu: "Website SEO audit";
            /** @constant */
            readonly Associated_pages: "Associated pages";
            /** @constant */
            readonly String_length_short: "Symb. count";
            /** @constant */
            readonly Filter_all: "All";
            /** @constant */
            readonly Filter_with_warnings_or_errors: "All with issues";
            /** @constant */
            readonly Filter_with_warnings: "With warnings";
            /** @constant */
            readonly Filter_with_errors: "With errors";
            /** @constant */
            readonly Filter_checks_changed: "What's new";
            /** @constant */
            readonly Links_inner: "Internal links";
            /** @constant */
            readonly Links_external: "External links";
            /** @constant */
            readonly Pages_to_check: "Pages to check";
            /** @constant */
            readonly Generated_sitemap: "Generated sitemap";
            /** @constant */
            readonly Sitemap_not_found: "Sitemap not found";
            /** @constant */
            readonly Sitemap_already_started_error: "Sitemap already started";
            /** @constant */
            readonly Sitemap_gen: "Sitemap generator";
            /** @constant */
            readonly pages: "pages";
            /** @constant */
            readonly Site_size: "Web page count";
            /** @constant */
            readonly Header_start_short: "Scan";
            /** @constant */
            readonly Step1_gen: "Generate";
            /** @constant */
            readonly Step1_gen_notice: "A valid map can be generated only with a valid robots.txt";
            /** @constant */
            readonly Sitemap_bank_info: "Sitemap generation for";
            /** @constant */
            readonly Audit_bank_info: "Project audit for";
            /** @constant */
            readonly Report: "Report";
            /** @constant */
            readonly Header_browse: "Summary";
            /** @constant */
            readonly Header_common: "Common";
            /** @constant */
            readonly Count_pages_checked: "Scanned pages";
            /** @constant */
            readonly Header_notices: "Warnings";
            /** @constant */
            readonly Header_warnings: "Issues";
            /** @constant */
            readonly Www_redirect: "Redirects between";
            /** @constant */
            readonly robots_txt_blocked: "blocked by robots.txt";
            /** @constant */
            readonly refresh_redirect: "blocked by <i>&lt;meta http-equiv=\"refresh\"&gt;</i>";
            /** @constant */
            readonly noindex: "blocked by <i>&lt;meta name=\"robots\" content=\"noindex\"&gt;</i>";
            /** @constant */
            readonly redirect: "redirects detected";
            /** @constant */
            readonly index_broken: "loading error / incorrect server response code (for example, 404, 503)";
            /** @constant */
            readonly title_empty: "title is missing";
            /** @constant */
            readonly title_size: "too short / long title";
            /** @constant */
            readonly title_dbl: "duplicate title";
            /** @constant */
            readonly description_empty: "description is missing";
            /** @constant */
            readonly description_size: "too short / long description";
            /** @constant */
            readonly description_dbl: "duplicate description";
            /** @constant */
            readonly links_empty_content: "anchor or alternative (attribute <i>title=\"...\"</i>) text is missing";
            /** @constant */
            readonly nofollow: "attribute <i>rel=\"nofollow\"</i> is used";
            /** @constant */
            readonly links_broken: "broken links";
            /** @constant */
            readonly no_title: "alternative text (attribute <i>alt=\"...\"</i>) is missing";
            /** @constant */
            readonly images_broken: "\"broken\" image";
            /** @constant */
            readonly h1_empty: "empty or missing H1 tag";
            /** @constant */
            readonly no_lastmod: "Last-Modified is missing";
            /** @constant */
            readonly no_lastmod_since: "If-Modified-Since not processed";
            /** @constant */
            readonly Header_index: "Index status";
            /** @constant */
            readonly Status_code: "Response code";
            /** @constant */
            readonly Robots_txt_blocked_short: "Blocked robots.txt";
            /** @constant */
            readonly Header_snippet: "Snippet";
            /** @constant */
            readonly Description: "Meta-description (description)";
            /** @constant */
            readonly Snippet_title_dbl: "Duplicate titles";
            /** @constant */
            readonly Snippet_description_dbl: "Duplicate descriptions";
            /** @constant */
            readonly Header_links: "Links";
            /** @constant */
            readonly Link_type: "Type";
            /** @constant */
            readonly Link_content: "Text (anchor)";
            /** @constant */
            readonly Link_title: "Text (title)";
            /** @constant */
            readonly Link_pages: "Pages";
            /** @constant */
            readonly Link_broken: "\"Broken\"";
            /** @constant */
            readonly Link_image: "Image";
            /** @constant */
            readonly Link_image2: "Image";
            /** @constant */
            readonly Link_text: "Text";
            /** @constant */
            readonly Watcher_send_to_informer: "Notification Center";
            /** @constant */
            readonly Generate_sitemap: "Generate sitemap";
            /** @constant */
            readonly Sitemap_generation: "Sitemap generator";
            /** @constant */
            readonly Sitemap_uploading: "Sitemap uploader";
            /** @constant */
            readonly Header_images: "Images";
            /** @constant */
            readonly Image_alt: "Alt-text";
            /** @constant */
            readonly Image_pages: "Pages";
            /** @constant */
            readonly Image_size: "Size";
            /** @constant */
            readonly Image_broken: "\"Broken\"";
            /** @constant */
            readonly Header_content: "Content";
            /** @constant */
            readonly Title_page: "Page title (Title)";
            /** @constant */
            readonly Header_pages_short: "List of pages";
            /** @constant */
            readonly Header_page: "Page audit";
            /** @constant */
            readonly Page_to_disallow: "Skip the page in the next reports";
            /** @constant */
            readonly Page_to_disallow_ok: "The page will be skipped in the next reports";
            /** @constant */
            readonly Page_redirects: "Redirects";
            /** @constant */
            readonly Page_code: "Page response code";
            /** @constant */
            readonly Page_robots_txt_blocked: "Blocked by Robots.txt";
            /** @constant */
            readonly Page_nofollow: "Contains meta robots nofollow";
            /** @constant */
            readonly Page_noindex: "Blocked by meta robots noindex";
            /** @constant */
            readonly Page_canonical: "Contains rel=\"canonical\"";
            /** @constant */
            readonly Page_alternate: "Contains rel=\"alternate\"";
            /** @constant */
            readonly Page_refresh: "Contains meta refresh redirect";
            /** @constant */
            readonly Page_string_length: "Symbol count";
            /** @constant */
            readonly Page_title_dbl: "Duplicate title";
            /** @constant */
            readonly Page_description_dbl: "Duplicate description";
            /** @constant */
            readonly Filter_changed: "Changes";
            /** @constant */
            readonly Filter_http_not_changed: "Changes (HTTP code didn't change)";
            /** @constant */
            readonly Filter_check_selected: "Only current report";
            /** @constant */
            readonly Filter_check_before: "All until the applied date";
            /** @constant */
            readonly Watcher_go: "Check";
            /** @constant */
            readonly Watcher_process_text: "Scanning";
            /** @constant */
            readonly Watcher_bank_info: "Website watcher report for";
            /** @constant */
            readonly Watcher_need_config_1: "To run Watcher";
            /** @constant */
            readonly Watcher_need_config_2: "move to the settings";
            /** @constant */
            readonly Watcher_need_config_3: "and add a list of pages";
            /** @constant */
            readonly Indexing_go: "Scan";
            /** @constant */
            readonly Indexing_check: "Index checker";
            /** @constant */
            readonly Indexing_no_results: "You haven't checked website index status yet";
            /** @constant */
            readonly Indexing_bank_info: "Index status report for";
            /** @constant */
            readonly Indexing_need_config_1: "To check website index status ";
            /** @constant */
            readonly Indexing_need_config_2: "set";
            /** @constant */
            readonly Indexing_need_config_3: "a list of pages to scan and select search engines";
            /** @constant */
            readonly Pages_for_analyse_not_selected: "Please add pages to scan in the settings";
            /** @constant */
            readonly Delete_url_by_regexp: "Delete URLs by regexp match";
            /** @constant */
            readonly Report_limit_warning: "*Report can contain up to 1000 records";
            /** @constant */
            readonly Watcher_store_180_days: "results are stored for 180 days";
            /** @constant */
            readonly Watcher_selector_title: "Select tracking method";
            /** @constant */
            readonly Watcher_regexpr: "Regular expression";
            /** @constant */
            readonly Download_archive_csv: "CSV archive";
            /** @constant */
            readonly Download_archive_pdf: "PDF archive";
            /** @constant */
            readonly List_of_urls: "List of URLs";
            /** @constant */
            readonly Sitemap_xml_url: "Sitemap.xml path";
            /** @constant */
            readonly Sitemap_mail_sitemap: "Sitemap";
            /** @constant */
            readonly Sitemap_mail_audit: "Website audit";
            /** @constant */
            readonly Sitemap_mail_indexing: "Index checker";
            /** @constant */
            readonly Sitemap_mail_watcher: "Website watcher";
            /** @constant */
            readonly Retrieve_from_file: "Retrieve from file";
            /** @constant */
            readonly Watcher_delete_title: "Delete Website Watcher data ";
            /** @constant */
            readonly Watcher_delete_info1: "Website Watcher report dated";
            /** @constant */
            readonly Watcher_delete_info2: "will be deleted. You cannot undo this action.";
            /** @constant */
            readonly Watcher_ignore_options: "Skip code";
            /** @constant */
            readonly Watcher_ignore_html: "HTML code";
            /** @constant */
            readonly Watcher_ignore_js: "javascript code";
            /** @constant */
            readonly Watcher_ignore_nothing: "do not skip";
            /** @constant */
            readonly Watcher_track_button: "Track changes";
            /** @constant */
            readonly Watcher_track_changes: "Track changes";
            /** @constant */
            readonly Watcher_tracking: "Tracking changes of";
            /** @constant */
            readonly Watcher_max_redirects_count: "Max redirects";
            /** @constant */
            readonly Watcher_already_started_error: "Website Watcher already running";
            /** @constant */
            readonly Indexing_already_started_error: "Index Checker already running";
            /** @constant */
            readonly Sitemap_XML_link_not_match_host_error: "Link to XML does not match project host";
            /** @constant */
            readonly Sitemap_required_columns_missing: "Required URLs column missing";
            /** @constant */
            readonly Delete_sitemap: "Are you sure you want to delete all URLs?";
            /** @constant */
            readonly URL_exists: "This URL already exists";
            /** @constant */
            readonly Remove_URL: "Are you sure you want to delete the selected URL?";
            /** @constant */
            readonly Enter_URL_one_per_line: "Enter a list of URLs (one per line), e.g:";
            /** @constant */
            readonly Content_tracking: "Content tracking";
            /** @constant */
            readonly Add_tags_use_regexp_notice: "Add tags to website code or use regular expressions to track changes";
            /** @constant */
            readonly Use_cookie: "Use cookie";
            /** @constant */
            readonly Scan_images: "Scan images";
            /** @constant */
            readonly Scan_js: "Scan JS";
            /** @constant */
            readonly Scan_css: "Scan CSS";
            /** @constant */
            readonly Scan_links: "Scan links";
            /** @constant */
            readonly Indexed_pages_with_no_snippet: "Indexed pages without snippet";
            /** @constant */
            readonly Hints_settings: {
                audit_user_agent: "User Agent can affect how the bot sees the site and how DDoS protection works.";
                audit_page_delay: "How often crawler can open site URLs. If the delay is small, audit will end faster, but the site can go down due to high load. The bigger is the delay, the longer the check will go.<br><br>The delay can increase, if you check Core Web Vitals. For CWV JS is executed, and you need wait for the full rendering of every URL, that takes at least 20 s.";
                audit_resource_delay: "How often crawler can open site resources (images, JS, CSS). If the delay is small, audit will end faster, but the site can go down due to high load. The bigger is the delay, the longer the check will go.";
                audit_use_cookie: "Turn this feature on, if your DDoS protection uses cookies.<br><br>But it may cause more personalized information in checks and they could be distorted.";
                audit_scan_images: "";
                audit_scan_js: "";
                audit_scan_css: "";
                audit_scan_links: "";
                server_location: "Change server location to access blocked websites.";
            };
            /** @constant */
            readonly Server_location: "Servers location";
            /** @constant */
            readonly Servers_locations: {
                WESTERN_EUROPE: "Western Europe";
                EASTERN_EUROPE: "Eastern Europe";
            };
            /** @constant */
            readonly Page_delay: "Delay between URL requests (s)";
            /** @constant */
            readonly Resource_delay: "Delay between resources requests (s)";
            /** @constant */
            readonly API_key_1: "Get free PageSpeed Insights API-key";
            /** @constant */
            readonly API_key_2: "and paste it in the input field";
            /** @constant */
            readonly Redirect_chain: "Redirect chain";
            /** @constant */
            readonly Search_URL: "Search URL";
            /** @constant */
            readonly Auto_collect: "Crawl website";
            /** @constant */
            readonly Add_by_hand: "Add manually";
            /** @constant */
            readonly Select_site_size: "Choose website size";
            /** @constant */
            readonly Please_select_site_size: "Choose website size";
            /** @constant */
            readonly Master_urls_auto_title: "Maximum of pages for audit";
            /** @constant */
            readonly Master_urls_auto_alert: "We'll check only the pages found during crawling. First you'll be charged the price for the maximum number of pages, but there can be less pages on the website. We'll refund the amount for the number of pages that hadn't been checked back on your balance.";
            /** @constant */
            readonly Audit_go_alert_need_config: "To perform audit you need to add URLs manually or enable website crawling, go to ";
            /** @constant */
            readonly Audit_go_alert_by_hand: "URLs for audit are added manually. To change the way of adding pages, go to";
            /** @constant */
            readonly Audit_go_alert_auto_collect_1: "We'll check";
            /** @constant */
            readonly Audit_go_alert_auto_collect_2: "URLs for audit are crawled automatically. To change the maximum number of pages for audit or add them manually, go to";
            /** @constant */
            readonly Audit_bank_autocrawl_info: "Funds reservation for audit with automatic website crawling, project";
            /** @constant */
            readonly Audit_bank_autocrawl_unhold_info: "Reservation refund";
            /** @constant */
            readonly Delete_url: "Delete URL";
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
