/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Экспорт результатов проверки файла */
        "Audit_2.Methods.Audit.Export.Get": {
            target_type: components["schemas"]["Audit_2.Types.Audit.TargetType"];
            /** Формат экспортируемого файла */
            output: components["schemas"]["TV.API.Types.ExportFormat"];
            project_id: components["schemas"]["project_id"];
            fields: components["schemas"]["fields"];
            check_id: components["schemas"]["check_id"];
        };
        /**
         * Тип очтета аудита
         * @enum {string}
         */
        "Audit_2.Types.Audit.TargetType": "pages" | "links" | "images" | "js" | "css";
        /** @enum {string} */
        "TV.API.Types.ExportFormat": "csv" | "xlsx";
        /** ID проекта */
        project_id: number;
        /**
         * Список полей объекта, которые надо вернуть в результате
         * @description Если запрос поддерижвает параметр fetch_style, формат ответа может быть разным, fields будет влиять на содержание данных в этом ответе
         *
         *     Использует поля модели
         *
         *     @see AbstractMethod::MODEL
         */
        fields: (string | number)[];
        /** ID проверки аудита */
        check_id: number;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
