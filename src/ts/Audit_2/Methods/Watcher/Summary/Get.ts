/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Получение сводки радара
         *
         *     @see jetbrains://idea/navigate/reference?project=topvisor.com&fqn=Services\Audit_2\Methods\Watcher\Summary\Get */
        "Audit_2.Methods.Watcher.Summary.Get": {
            /** Тип проверки */
            watcher_types?: unknown[] | null;
            /** ID проверок */
            checks_ids: unknown[];
            /** Отобразить количество изменений по типам */
            show_counts_changes?: boolean;
            /** Недокументируемый параметр, данные для графика */
            forChart?: boolean;
            project_id: import('../../../../TV/API/Params/ProjectIdTrait.ts').components['schemas']['TV.API.Params.ProjectIdTrait']['project_id'];
            filters?: import('../../../../TV/API/Params/FiltersTrait.ts').components['schemas']['TV.API.Params.FiltersTrait']['filters'];
            id?: import('../../../../TV/API/Params/FiltersTrait.ts').components['schemas']['TV.API.Params.FiltersTrait']['id'];
        };
        /** Сводка с количеством изменений по каждому типу проверки */
        "Audit_2.Methods.Watcher.Summary.Get.Exec": unknown[] | null;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
