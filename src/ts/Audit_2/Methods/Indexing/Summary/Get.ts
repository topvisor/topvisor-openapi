/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * Получение сводки индексации
         * @description @see jetbrains://idea/navigate/reference?project=topvisor.com&fqn=Services\Audit_2\Methods\Indexing\Summary\Get
         */
        "Audit_2.Methods.Indexing.Summary.Get": {
            /** Произвольные даты без диапазона */
            dates: unknown[];
            searcher_key?: import('../../../Types/Indexing/SearcherKey.ts').components['schemas']['Audit_2.Types.Indexing.SearcherKey'] | null;
            /** Отобразить количество изменений */
            show_counts_changes?: boolean;
            /** Отобразить количество страниц в индексе */
            show_counts_in_index?: boolean;
            /** Отобразить количество проверенных страниц */
            show_counts_all?: boolean;
            /**
             * Вернуть данные в формате для графика
             *
             *     Недокументируемый параметр
             * @description @private
             */
            forChart?: boolean;
            project_id: import('../../../../TV/API/Params/ProjectIdTrait.ts').components['schemas']['TV.API.Params.ProjectIdTrait']['project_id'];
            filters?: import('../../../../TV/API/Params/FiltersTrait.ts').components['schemas']['TV.API.Params.FiltersTrait']['filters'];
            id?: import('../../../../TV/API/Params/FiltersTrait.ts').components['schemas']['TV.API.Params.FiltersTrait']['id'];
        };
        /** Сводка индексации */
        "Audit_2.Methods.Indexing.Summary.Get.Exec": unknown[] | null;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
