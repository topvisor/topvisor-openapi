/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * Тест phpDoc
         * @description @todo : Удалить после настройки openapi
         */
        "Example_2.Methods.PhpDoc.Get": {
            fields: import('../../../TV/API/Params/FieldsTrait.ts').components['schemas']['TV.API.Params.FieldsTrait']['fields'];
            orders: import('../../../TV/API/Params/OrdersTrait.ts').components['schemas']['TV.API.Params.OrdersTrait']['orders'];
            filters: import('../../../TV/API/Params/FiltersTrait.ts').components['schemas']['TV.API.Params.FiltersTrait']['filters'];
            id?: import('../../../TV/API/Params/FiltersTrait.ts').components['schemas']['TV.API.Params.FiltersTrait']['id'];
            limit?: import('../../../TV/API/Params/LimitTrait.ts').components['schemas']['TV.API.Params.LimitTrait']['limit'];
            offset: import('../../../TV/API/Params/OffsetTrait.ts').components['schemas']['TV.API.Params.OffsetTrait']['offset'];
            fetch_style?: import('../../../TV/API/Params/FetchStyleTrait.ts').components['schemas']['TV.API.Params.FetchStyleTrait']['fetch_style'];
        };
        /** Тест phpDoc
         *
         *     TODO: Удалить после настройки openapi
         *
         *     - static
         *     - parent
         *     - self */
        "Example_2.Methods.PhpDoc.Get.Exec": components["schemas"]["Example_2.Objects.User"];
        /**
         * E-mail
         * @example name@example.com
         */
        "TV.API.Types.Email": string;
        "Example_2.Objects.Address": {
            city: string;
            street?: string | null;
        };
        "Example_2.Objects.User": {
            name: string;
            email: components["schemas"]["TV.API.Types.Email"];
            age: number;
            address: components["schemas"]["Example_2.Objects.Address"];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
