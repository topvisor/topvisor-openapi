/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Метод с примерами параметров типа Enum */
        "Example_2.Methods.Array.Get": {
            ints: import('../../../TV/API/Types/IntArray.ts').components['schemas']['TV.API.Types.IntArray'];
            strings: import('../../../TV/API/Types/StringArray.ts').components['schemas']['TV.API.Types.StringArray'];
            booleans: import('../../../TV/API/Types/BoolArray.ts').components['schemas']['TV.API.Types.BoolArray'];
            enum_numbers: import('../../Types/EnumNumberArray.ts').components['schemas']['Example_2.Types.EnumNumberArray'];
        };
        /**
         * Ассоциативный массив с результирующими переданными параетрами, и результатоми implodeQuotes() и genSet()
         * @description @type array<string, array<string, mixed>>
         */
        "Example_2.Methods.Array.Get.Exec": Record<string, never>[];
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
