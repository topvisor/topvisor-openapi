/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Редактирование рекламной кампании */
        "Broker_2.Methods.Campaigns.Edit": {
            /** Id проекта */
            project_id: number;
            /** Обновить ли данные таргетинга (только для Директа) */
            update_targeting?: boolean;
            /** Включить ли */
            on_tv?: boolean | null;
            /** Частота корректировок (1: раз в час, 2: два раза в час, -1: раз в день, -2: два раза в день) */
            frequency?: number | null;
            /** Не управлять ли отключенными ключевыми фразами */
            no_manage_suspended_keywords?: boolean | null;
            /** Получить ли информацию о том, в каких проектах интегрированы указанные компании */
            include_used_in_other_projects?: boolean;
            filters: import('../../../TV/API/Params/FiltersTrait.ts').components['schemas']['TV.API.Params.FiltersTrait']['filters'];
            id?: import('../../../TV/API/Params/FiltersTrait.ts').components['schemas']['TV.API.Params.FiltersTrait']['id'];
            fields?: import('../../../TV/API/Params/FieldsTrait.ts').components['schemas']['TV.API.Params.FieldsTrait']['fields'];
            orders?: import('../../../TV/API/Params/OrdersTrait.ts').components['schemas']['TV.API.Params.OrdersTrait']['orders'];
            limit?: import('../../../TV/API/Params/LimitTrait.ts').components['schemas']['TV.API.Params.LimitTrait']['limit'];
            offset?: import('../../../TV/API/Params/OffsetTrait.ts').components['schemas']['TV.API.Params.OffsetTrait']['offset'];
            fetch_style?: import('../../../TV/API/Params/FetchStyleTrait.ts').components['schemas']['TV.API.Params.FetchStyleTrait']['fetch_style'];
        };
        "Broker_2.Methods.Campaigns.Edit.Exec": number;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
