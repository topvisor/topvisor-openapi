/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Изменить дополнительные параметры расписания */
        "Schedule_2.Methods.Settings.Edit": {
            /**
             * Тип расписания
             * @description @see Schedule_2\Mods\Schedule::$availableTypes
             */
            type: string;
            /** Id объекта, для которого требуется получить параметры расписания */
            target_id: number;
            /** Id второго объекта, для которого требуется получить параметры расписания (обязательно для mentions) */
            target_id_2?: number | null;
            /** Список email для отправки отчетов */
            emails?: import('../../../TV/API/Types/EmailArray.ts').components['schemas']['TV.API.Types.EmailArray'] | null;
            /** Отправить ли уведомление в информер */
            send_to_informer?: boolean | null;
            /** Id чатов телеграмма для рассылки уведомлений */
            telegram_chats_ids?: import('../../../TV/API/Types/IntArray.ts').components['schemas']['TV.API.Types.IntArray'] | null;
            /** Не совершать ли повторную проверку */
            stop_repeated_check?: boolean | null;
            /** Ключ региона для проверки частосты
             *
             *     Разрешено указывать только Яндекс и Google (0, 1) */
            regions_keys_by_searcher_key?: unknown[] | null;
            /** Имеет смысл только для Яндекс */
            volumes_types?: import('../../../Keywords_2/Types/Volumes/Types.ts').components['schemas']['Keywords_2.Types.Volumes.Types'] | null;
            /** Добавить ли в отчет позиции конкурентов */
            with_competitors?: boolean | null;
            period?: import('../../Types/Settings/Period.ts').components['schemas']['Schedule_2.Types.Settings.Period'] | null;
            formats?: import('../../Types/Settings/Formats.ts').components['schemas']['Schedule_2.Types.Settings.Formats'] | null;
            additional_fields?: import('../../Types/Settings/AdditionalFields.ts').components['schemas']['Schedule_2.Types.Settings.AdditionalFields'] | null;
            /** Ссылка на sitemap */
            link_sitemap_xml?: import('../../../TV/API/Types/Url.ts').components['schemas']['TV.API.Types.Url'] | null;
            /** Регулярное выражение для карты сайта */
            regexp_sitemap?: string | null;
            /** Регулярное выражение для аудита */
            regexp_audit?: string | null;
            /** Регулярное выражение для радара */
            regexp_watcher?: string | null;
            /** Регулярное выражение для индексации */
            regexp_indexing?: string | null;
            /** Ограничение по количеству url получаемых при проверке */
            max_urls_count?: string;
        };
        "Schedule_2.Methods.Settings.Edit.Exec": number | null;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
