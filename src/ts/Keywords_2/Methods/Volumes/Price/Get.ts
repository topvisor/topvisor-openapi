/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Информация о стоимости запуска проверки позиций по проектам */
        "Keywords_2.Methods.Volumes.Price.Get": {
            /**
             * Запуск в режиме отладки
             *
             *     Только для админов
             * @description @private
             */
            debug?: boolean;
            /** Id проекта */
            project_id: number;
            no_recheck?: import('../../../Types/Volumes/NoRecheck.ts').components['schemas']['Keywords_2.Types.Volumes.NoRecheck'] | null;
            /**
             * Тип объекта фильтрации
             * @default keywords
             */
            target_type: string;
            /** Список регионов с настройками для проверки частоты
             *
             *     - Обязателен, если `set_qualifiers_for_visibility` != `true`
             *     - Нельзя указывать, если `set_qualifiers_for_visibility` = `true` */
            qualifiers?: import('../../../Types/Volumes/Qualifiers.ts').components['schemas']['Keywords_2.Types.Volumes.Qualifiers'] | null;
            /** Проверить частоты для всех регионов с нужным типом для расчета видимости */
            set_qualifiers_for_visibility?: boolean | null;
            /** При фильтрации по ID папок также искать в подпапках */
            group_folder_id_depth?: boolean;
            filters?: import('../../../../TV/API/Params/FiltersTrait.ts').components['schemas']['TV.API.Params.FiltersTrait']['filters'];
            id?: import('../../../../TV/API/Params/FiltersTrait.ts').components['schemas']['TV.API.Params.FiltersTrait']['id'];
        };
        "Keywords_2.Methods.Volumes.Price.Get.Exec": unknown;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
