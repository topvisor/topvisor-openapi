/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Получение цены на расширение группы */
        "Keywords_2.Methods.Collect.Ext.Price.Get": {
            /** ID проекта */
            project_id: number;
            /** Минус фразы */
            keywords_minus?: (string | number)[] | null;
            /**
             * Отображать сумму с учетом скидки (по умолчанию: 1)
             * @default true
             */
            apply_discount: boolean;
            /** Каким типом расширять группу */
            type: import('../../../../Types/Collect/Ext/Type.ts').components['schemas']['Keywords_2.Types.Collect.Ext.Type'];
            /** Объекты определителей настроек ПС и регионов */
            qualifiers: import('../../../../Types/Collect/Qualifiers.ts').components['schemas']['Keywords_2.Types.Collect.Qualifiers'];
            filters?: import('../../../../../TV/API/Params/FiltersTrait.ts').components['schemas']['TV.API.Params.FiltersTrait']['filters'];
            id?: import('../../../../../TV/API/Params/FiltersTrait.ts').components['schemas']['TV.API.Params.FiltersTrait']['id'];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
