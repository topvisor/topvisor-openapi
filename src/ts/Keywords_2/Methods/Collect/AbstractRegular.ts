/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        "Keywords_2.Methods.Collect.AbstractRegular": {
            /** ID проекта */
            project_id: number;
            /** Список исходных запросов */
            keywords: unknown[];
            /** Объекты определителей настроек ПС и регионов */
            qualifiers: import('../../Types/Collect/Qualifiers.ts').components['schemas']['Keywords_2.Types.Collect.Qualifiers'];
            /** Минус фразы (только для searcher_key = 0 и searcher_key = 1) */
            keywords_minus?: unknown[];
            /** Id группы для размещения подобранных запросов */
            to_group_id?: number | null;
            /** Id папки для новых групп */
            to_id?: number;
            /** @default in_folder_last */
            to_type: import('../../Types/Collect/ToType.ts').components['schemas']['Keywords_2.Types.Collect.ToType'];
            /** Собирать все запросы в одну группу (не несет смысл, если указан to_group_id) */
            in_one_group?: boolean;
            currency?: import('../../../TV/API/Types/Currency.ts').components['schemas']['TV.API.Types.Currency'] | null;
            debug?: string | null;
        };
        /** Непосредственный вызов API функции
         *
         *     Запрещено делать публичной, это приведет к поломке preCall()
         *
         *     В описании к функции отвечать на вопрос: `Что является результатом запроса?` Например: `Список пользователей`
         *
         *     Не менять `protected`, проверка проводится при генерации схем в `TV\API\Objects\ClassAPIMethodInfo` */
        "Keywords_2.Methods.Collect.AbstractRegular.Exec": unknown;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
