/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Запуск кластеризации (проверка на права в "api_get_priceClaster()")
         *
         *     @see jetbrains://idea/navigate/reference?project=topvisor-com&fqn=Services\Keywords_2\Methods\Claster\Task\Add */
        "Keywords_2.Methods.Claster.Task.Add": {
            searcher_key: import('../../../Types/Claster/Task/SearcherKey.ts').components['schemas']['Keywords_2.Types.Claster.Task.SearcherKey'];
            /** Ключ региона */
            region_key: number;
            /** Язык региона */
            region_lang: string;
            count: import('../../../Types/Claster/Degrees.ts').components['schemas']['Keywords_2.Types.Claster.Degrees'];
            type?: import('../../../Types/Claster/Type.ts').components['schemas']['Keywords_2.Types.Claster.Type'];
            /** Отправить письмо с результатами кластеризацию на почту */
            send_email_csv?: boolean;
            /** ID кластеризуемой папки */
            folder_id?: number;
            project_id: import('../../../../TV/API/Params/ProjectIdTrait.ts').components['schemas']['TV.API.Params.ProjectIdTrait']['project_id'];
        };
        "Keywords_2.Methods.Claster.Task.Add.Exec": number | null;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
