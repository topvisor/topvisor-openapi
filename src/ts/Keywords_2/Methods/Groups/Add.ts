/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Добавление групп
         *
         *     @see jetbrains://idea/navigate/reference?project=topvisor-com&fqn=Services\Keywords_2\Methods\Groups\Add */
        "Keywords_2.Methods.Groups.Add": {
            /** Вставить к указанному объекту */
            to_id?: number;
            /** @default in_folder */
            to_type?: import('../../Types/Groups/ToType.ts').components['schemas']['Keywords_2.Types.Groups.ToType'];
            /** Имена групп */
            name: unknown[];
            /**
             * Активность группы
             * @default true
             */
            on?: boolean;
            /** Статус группы
             *
             *     Используется для создания группы при подборе слов */
            status?: boolean;
            project_id: import('../../../TV/API/Params/ProjectIdTrait.ts').components['schemas']['TV.API.Params.ProjectIdTrait']['project_id'];
        };
        "Keywords_2.Methods.Groups.Add.Exec": unknown[] | null;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
