/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Добавление проекта */
        "Projects_2.Methods.Projects.Add": {
            /** Url проекта (домен или url страницы) */
            url: components["schemas"]["TV.API.Types.UrlShort"];
            /** Имя проекта (по умолчанию равен url проекта) */
            name?: string | null;
            /**
             * enum(1..10) tags - теги проекта (по умолчанию - [1])
             * @default [
             *       1
             *     ]
             */
            tags: (string | number)[];
            /** Id папки, к которой будет привязан проект */
            folder_id?: number | null;
            /** Активность проекта */
            on?: number | null;
            /** Является ли проект задачей */
            is_task?: boolean | null;
        };
        /** Краткий URL в punycode, не может содержать UTF-символы:
         *     - без схемы
         *     - без "www." в домене
         *     - без слешей на конце
         *     - без "<" и ">"
         *
         *     Будет проивзедено автоматическое приведение к формату
         *
         *     Разрешен ввод пустой строки, для удаления значения url */
        "TV.API.Types.UrlShort": string;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
