/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Добавление промпта
         *
         *     @see jetbrains://idea/navigate/reference?project=topvisor-com&fqn=Services\Ai_2\Methods\Tracker\Prompts\Add */
        "Ai_2.Methods.Tracker.Prompts.Add": {
            /** Текс промпта */
            prompt: string;
            /** Вставить к указанному объекту */
            toId?: number | null;
            /**
             * Обязательный параметр при указанном $toId
             * @default in_group
             */
            toType?: import('../../../Types/Tracker/Prompts/ToType.ts').components['schemas']['Ai_2.Types.Tracker.Prompts.ToType'] | null;
            /** todo: определить что находится в target */
            target?: string | null;
            /** Массив тегов
             *
             *     todo: нужно объединить с тегами использующимися для запросов, сейчас там используется неправильный тип */
            tags?: import('../../../Types/Tracker/Prompts/Tags.ts').components['schemas']['Ai_2.Types.Tracker.Prompts.Tags'] | null;
            project_id: import('../../../../TV/API/Params/ProjectIdTrait.ts').components['schemas']['TV.API.Params.ProjectIdTrait']['project_id'];
        };
        "Ai_2.Methods.Tracker.Prompts.Add.Exec": unknown;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
