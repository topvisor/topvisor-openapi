/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * Формат результата в основном используется для Get запросов, поддерживается не всеми запросами в полной мере
         *
         *     Указанием формата результата позволяет получать данные одного и того же метода в разном формате
         *
         *     Данный параметр влияет на тип возвращаемого результата
         *
         *     Данные параметр помогает избежать ненужных преобразований результатов на клиенте
         *
         *     Напоминает логику работу PDO Fetch: https://www.php.net/manual/ru/pdostatement.fetch.php
         * @enum {string}
         */
        FetchStyle: FetchStyle;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export enum FetchStyle {
    // Список объектов; Является значением по умолчанию
    FetchAll = "fetchAll",
    // Список объектов в виде массивов, где элементы массива - это свойства объекта, перечисленные с сохранением своего порядка; Полезно для экономии трафика и ускорения передачи данных в формате json
    FetchAllNum = "fetchAllNum",
    // Список значений одного свойства по каждому объекту
    FetchAllColumn = "fetchAllColumn",
    // Один объект
    Fetch = "fetch",
    // Одно свойство одного объека
    FetchColumn = "fetchColumn",
    // Объекты с группировкой
    FetchGroup = "fetchGroup",
    // Значения свойства объектов с группировкой
    FetchGroupColumn = "fetchGroupColumn",
    // Объекты с группировкой с объединением дублей
    FetchUnique = "fetchUnique",
    // Значения свойства объектов с группировкой с объединением дублей
    FetchUniqueNum = "fetchUniqueNum",
    // Список значений одного свойства по каждому объекту с объединением дублей
    FetchUniqueColumn = "fetchUniqueColumn",
    // Внутренний объект метода Selector
    Selector = "selector"
}
export type operations = Record<string, never>;
