/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Изменение тегов */
        "Urls_2.Methods.Tags.Edit": {
            tags: components["schemas"]["Urls_2.Types.Tags"];
            action: components["schemas"]["Urls_2.Types.Tags.Action"];
            filters: components["schemas"]["filters"];
            id?: components["schemas"]["id"];
            project_id: components["schemas"]["project_id"];
        };
        /**
         * Тег для urls
         * @description Значение должно находится в диапазоне от 1 до 50 включительно
         */
        "Urls_2.Types.Tag": string;
        /**
         * Массив номеров тегов
         * @description Тип массива Tags[]
         *
         *     @see Tag
         */
        "Urls_2.Types.Tags": components["schemas"]["Urls_2.Types.Tag"][];
        /**
         * Способ установки тегов
         * @enum {string}
         */
        "Urls_2.Types.Tags.Action": "set" | "add" | "remove";
        /**
         * Список фильтров по полям объекта
         * @description {name: string, operator: Field::AVAILABLE_OPERATORS, values: array}
         *
         *     Использует поля модели
         *
         *     Поля обязатлеьное, если $id не указан
         *
         *     @see AbstractMethod::MODEL
         *     @see Field::AVAILABLE_OPERATORS
         */
        filters: (string | number)[];
        /**
         * Id объекта, для фильтрации объектов по id
         * @description Только для моделей с полем id
         */
        id: number | null;
        /** ID проекта */
        project_id: number;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
