{
    "openapi": "3.0.0",
    "info": {
        "title": "Topvisor/Snapshots_2.Methods.History.Get",
        "version": "2.0.0"
    },
    "paths": {},
    "components": {
        "schemas": {
            "Snapshots_2.Methods.History.Get": {
                "type": "object",
                "properties": {
                    "output": {
                        "title": "Получение данных по всем запросам\n\nМожет быть 1 или Snapshots_2\\Types\\History\\Export\\Output",
                        "nullable": true
                    },
                    "project_id": {
                        "title": "Id проекта",
                        "type": "integer"
                    },
                    "region_index": {
                        "title": "Индекс региона\n\nЕсли не задан нужно задать параметры searcher_key, region_key, region_lang, region_device",
                        "nullable": true,
                        "type": "integer"
                    },
                    "region_key": {
                        "title": "Ключ региона",
                        "nullable": true,
                        "type": "integer"
                    },
                    "region_lang": {
                        "title": "Язык региона",
                        "nullable": true,
                        "type": "string"
                    },
                    "region_device": {
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "../../../Positions_2/Types/RegionDevice.json#/components/schemas/Positions_2.Types.RegionDevice"
                            }
                        ]
                    },
                    "show_exists_dates": {
                        "title": "Добавить ли в результат даты, в которых были проверки (existsDates)",
                        "type": "boolean"
                    },
                    "show_ams": {
                        "title": "Добавить ли в результат показатель шторма между выбранными проверками",
                        "type": "boolean"
                    },
                    "positions_fields": {
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "../../../Snapshots_2/Types/History/PositionsFields.json#/components/schemas/Snapshots_2.Types.History.PositionsFields"
                            }
                        ]
                    },
                    "searcher_key": {
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "../../../Positions_2/Types/SearcherKey.json#/components/schemas/Positions_2.Types.SearcherKey"
                            }
                        ]
                    },
                    "dates": {
                        "title": "Произвольные даты без использования диапазона\n\nЕсли не задан нужно задать параметры date1, date2, type_range, count_dates",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "../../../TV/API/Types/DateArray.json#/components/schemas/TV.API.Types.DateArray"
                            }
                        ]
                    },
                    "date1": {
                        "title": "Дата начала диапазона",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "../../../TV/API/Types/Date.json#/components/schemas/TV.API.Types.Date"
                            }
                        ]
                    },
                    "date2": {
                        "title": "Дата окончания диапазона",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "../../../TV/API/Types/Date.json#/components/schemas/TV.API.Types.Date"
                            }
                        ]
                    },
                    "type_range": {
                        "title": "Тип диапазона дат",
                        "default": 3,
                        "type": "integer"
                    },
                    "count_dates": {
                        "title": "Количество дней в диапазоне",
                        "default": 31,
                        "type": "integer"
                    },
                    "only_exists_first_date": {
                        "title": "Только запросы, присутствующие в первой проверке указанного периода\n\n- 2 - только добавленные запросы за период, работает не корректно из-за ограничения JOIN CH",
                        "nullable": true,
                        "type": "integer"
                    },
                    "group_folder_id_depth": {
                        "title": "При фильтрации по ID папок также искать в подпапках",
                        "type": "boolean"
                    },
                    "show_trash": {
                        "title": "Искать в корзине",
                        "type": "boolean"
                    },
                    "fields": {
                        "$ref": "../../../TV/API/Params/FieldsTrait.json#/components/schemas/TV.API.Params.FieldsTrait/properties/fields"
                    },
                    "orders": {
                        "$ref": "../../../TV/API/Params/OrdersTrait.json#/components/schemas/TV.API.Params.OrdersTrait/properties/orders"
                    },
                    "filters": {
                        "$ref": "../../../TV/API/Params/FiltersTrait.json#/components/schemas/TV.API.Params.FiltersTrait/properties/filters"
                    },
                    "id": {
                        "$ref": "../../../TV/API/Params/FiltersTrait.json#/components/schemas/TV.API.Params.FiltersTrait/properties/id"
                    },
                    "limit": {
                        "$ref": "../../../TV/API/Params/LimitTrait.json#/components/schemas/TV.API.Params.LimitTrait/properties/limit"
                    },
                    "offset": {
                        "$ref": "../../../TV/API/Params/OffsetTrait.json#/components/schemas/TV.API.Params.OffsetTrait/properties/offset"
                    },
                    "fetch_style": {
                        "$ref": "../../../TV/API/Params/FetchStyleTrait.json#/components/schemas/TV.API.Params.FetchStyleTrait/properties/fetch_style"
                    }
                },
                "required": [
                    "project_id"
                ],
                "title": "@see jetbrains://idea/navigate/reference?project=topvisor.com&fqn=Services\\Snapshots_2\\Methods\\History\\Get"
            },
            "Snapshots_2.Methods.History.Get.Exec": {
                "nullable": true,
                "anyOf": [
                    {
                        "type": "null"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "competitors": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "domain": {
                                            "type": "string"
                                        },
                                        "protocol": {
                                            "type": "string"
                                        },
                                        "summariesData": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object",
                                                "properties": {
                                                    "countUrls": {
                                                        "type": "integer"
                                                    },
                                                    "avg": {
                                                        "type": "number"
                                                    },
                                                    "median": {
                                                        "type": "number"
                                                    },
                                                    "tops": {
                                                        "type": "object",
                                                        "properties": {
                                                            "\"1_10\"": {
                                                                "type": "integer"
                                                            },
                                                            "\"11_20\"": {
                                                                "type": "integer"
                                                            },
                                                            "\"11_30\"": {
                                                                "type": "integer"
                                                            },
                                                            "\"11_50\"": {
                                                                "type": "integer"
                                                            },
                                                            "\"31_50\"": {
                                                                "type": "integer"
                                                            },
                                                            "\"51_100\"": {
                                                                "type": "integer"
                                                            },
                                                            "all": {
                                                                "type": "integer"
                                                            },
                                                            "absent": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "\"1_10\"",
                                                            "\"31_50\"",
                                                            "\"51_100\"",
                                                            "all",
                                                            "absent"
                                                        ]
                                                    },
                                                    "visibility": {
                                                        "type": "number"
                                                    },
                                                    "volumes_no_collected": {
                                                        "anyOf": [
                                                            {
                                                                "type": "integer",
                                                                "enum": [
                                                                    "0"
                                                                ]
                                                            },
                                                            {
                                                                "type": "integer",
                                                                "enum": [
                                                                    "1"
                                                                ]
                                                            },
                                                            {
                                                                "type": "integer",
                                                                "enum": [
                                                                    "2"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "urls": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "countUrls"
                                                ]
                                            }
                                        },
                                        "url": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "domain",
                                        "protocol",
                                        "summariesData"
                                    ]
                                }
                            },
                            "dates": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "depthPositions": {
                                "type": "integer"
                            },
                            "countKeywords": {
                                "type": "integer"
                            },
                            "volumes_no_collected": {
                                "anyOf": [
                                    {
                                        "type": "integer",
                                        "enum": [
                                            "0"
                                        ]
                                    },
                                    {
                                        "type": "integer",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    {
                                        "type": "integer",
                                        "enum": [
                                            "2"
                                        ]
                                    }
                                ]
                            },
                            "existsDates": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "competitors",
                            "dates",
                            "depthPositions",
                            "countKeywords"
                        ]
                    }
                ]
            }
        }
    }
}